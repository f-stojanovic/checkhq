openapi: 3.1.0
info:
  title: Check API
  version: '2023-04-04'
servers:
  - url: https://sandbox.checkhq.com
components:
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: Authorization
      x-bearer-format: bearer
      x-default: YOUR_API_KEY
security:
  - sec0: []
paths:
  /companies:
    post:
      summary: Create a company
      description: Creates a company to run payroll for.
      operationId: create-company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                legal_name:
                  type: string
                  description: Legal name of the company
                trade_name:
                  type: string
                  description: Trade name of the company
                other_business_name:
                  type: string
                  description: Other business name used by the company.
                business_type:
                  type: string
                  description: >-
                    Business type of the company. One of `sole_proprietorship`,
                    `partnership`, `c_corporation`, `s_corporation`, or `llc`.
                industry_type:
                  type: string
                  description: >-
                    Industry type of the company. One of
                    `auto_or_machine_sales`, `auto_or_machine_repair`,
                    `arts_or_entertainment_or_recreation`, `cleaning_services`,
                    `consulting_services`, `educational_services`,
                    `family_care_services`, `financial_services`,
                    `food_and_beverage_retail_or_wholesale`,
                    `general_construction_or_general_contracting`,
                    `health_care`, `hospitality_or_accommodation`,
                    `hvac_or_plumbing_or_electrical_contracting`,
                    `legal_services`, `non_food_retail_or_wholesale`, `other`,
                    `personal_care_services`, `real_estate`, `restaurant`,
                    `scientific_or_technical_services`, `security_services`,
                    `staffing`, `tobacco_or_alcohol_sales`, or `transportation`.
                website:
                  type: string
                  description: Website URL of the company.
                email:
                  type: string
                  description: Email address of payroll department or administrator
                phone:
                  type: string
                  description: Phone number of the company
                address:
                  type: object
                  description: Legal address of company on file with the federal government
                  required:
                    - line1
                    - city
                    - state
                    - postal_code
                  properties:
                    line1:
                      type: string
                      description: Street address or PO Box
                    line2:
                      type: string
                      description: Apartment, suite, unit, or building
                    city:
                      type: string
                      description: City, district, suburb, town, or village
                    state:
                      type: string
                      description: 2-digit state code
                    postal_code:
                      type: string
                      description: 5-digit postal code or zip code
                    country:
                      type: string
                      description: Read only.
                      default: US
                pay_frequency:
                  type: string
                  description: >-
                    Frequency by which the employees get paid. One of "weekly",
                    "biweekly", "semimonthly", "monthly", "quarterly", or
                    "annually"
                start_date:
                  type: string
                  description: >-
                    This date should match up with their first payday using
                    Check. The validity of this date is important, as it's used
                    on federal and state filing authorization forms to signify
                    when Check's authorization to file on behalf of the employer
                    starts.
                  format: date
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the company
                  format: json
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    get:
      summary: List companies
      description: Returns a list of all companies.
      operationId: list-companies
      parameters:
        - name: active
          in: query
          description: Filter companies by whether they are active or not active.
          schema:
            type: boolean
            default: true
        - name: limit
          in: query
          description: Number of companies returned per page
          schema:
            type: integer
            format: int32
        - name: id
          in: query
          description: >-
            Filter the list to the specified IDs. For more details, check out
            the [Bulk Get Requests
            guide](https://docs.checkhq.com/docs/bulk-resource-get-requests).
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}:
    get:
      summary: Get a company
      description: Returns the specified company.
      operationId: get-a-company
      parameters:
        - name: company
          in: path
          description: ID of the company to return
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update a company
      description: Updates the specified company.
      operationId: update-a-company
      parameters:
        - name: company
          in: path
          description: ID of the company to update
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                legal_name:
                  type: string
                  description: Legal name of the company
                trade_name:
                  type: string
                  description: Trade name of the company
                other_business_name:
                  type: string
                  description: Other business name used by the company.
                business_type:
                  type: string
                  description: >-
                    Business type of the company. One of `sole_proprietorship`,
                    `partnership`, `c_corporation`, `s_corporation`, or `llc`.
                industry_type:
                  type: string
                  description: >-
                    Industry type of the company. One of
                    `auto_or_machine_sales`, `auto_or_machine_repair`,
                    `arts_or_entertainment_or_recreation`, `cleaning_services`,
                    `consulting_services`, `educational_services`,
                    `family_care_services`, `financial_services`,
                    `food_and_beverage_retail_or_wholesale`,
                    `general_construction_or_general_contracting`,
                    `health_care`, `hospitality_or_accommodation`,
                    `hvac_or_plumbing_or_electrical_contracting`,
                    `legal_services`, `non_food_retail_or_wholesale`, `other`,
                    `personal_care_services`, `real_estate`, `restaurant`,
                    `scientific_or_technical_services`, `security_services`,
                    `tobacco_or_alcohol_sales`, or `transportation`.
                website:
                  type: string
                  description: Website URL of the company.
                email:
                  type: string
                  description: Email address of payroll department or payroll administrator
                phone:
                  type: string
                  description: Phone number for the company
                address:
                  type: object
                  description: Legal address of company on file with the federal government
                  required:
                    - line1
                    - city
                    - state
                    - postal_code
                  properties:
                    line1:
                      type: string
                      description: Street address or PO Box
                    line2:
                      type: string
                      description: Apartment, suite, unit, or building
                    city:
                      type: string
                      description: City, district, suburb, town, or village
                    state:
                      type: string
                      description: 2-digit state code
                    postal_code:
                      type: string
                      description: 5-digit postal code or zip code
                    country:
                      type: string
                      description: Read only.
                      default: US
                principal_place_of_business:
                  type: string
                  description: >-
                    Company's workplace ID whose address would be printed on
                    paystub, instead of legal address.
                pay_frequency:
                  type: string
                  description: >-
                    Frequency by which the employees get paid. One of "weekly",
                    "biweekly", "semimonthly", "monthly", "quarterly", or
                    "annually"
                processing_period:
                  type: string
                  description: >-
                    The default processing period of payrolls. <br><br>One of
                    `four_day`, `two_day`, or `one_day`.<br><br>The processing
                    period determines the approval deadline of the payroll. For
                    a payroll with a Friday payday, `four_day` will mean the
                    approval deadline is on Monday, whereas `two_day` will mean
                    the approval deadline is on Wednesday.<br><br>The possible
                    values for this field are constrained by the processing
                    periods the company is approved for.
                start_date:
                  type: string
                  description: >-
                    Date the company will start using Check as their payroll
                    processor
                  format: date
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the company
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees:
    post:
      summary: Create an employee
      description: Creates an employee.
      operationId: create-an-employee
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - last_name
                - company
                - workplaces
              properties:
                first_name:
                  type: string
                  description: Employee's first name
                middle_name:
                  type: string
                  description: Employee's middle name, if available
                last_name:
                  type: string
                  description: Employee's last name
                email:
                  type: string
                  description: Employee's email address
                dob:
                  type: string
                  description: >-
                    Employee's date of birth. Until dob is added, it will show
                    up as a blocking employee onboard step.
                  format: date
                residence:
                  type: object
                  description: >-
                    Employee residence used for calculating state income taxes.
                    Until residence is added, it will show up as a blocking
                    employee onboard step. You may not unset residence once it
                    is set.
                  required:
                    - line1
                    - city
                    - state
                    - postal_code
                  properties:
                    line1:
                      type: string
                      description: Street address or PO Box
                    line2:
                      type: string
                      description: Apartment, suite, unit, or building
                    city:
                      type: string
                      description: City, district, suburb, town, or village
                    state:
                      type: string
                      description: 2-digit state code
                    postal_code:
                      type: string
                      description: 5-digit postal code or zip code
                    country:
                      type: string
                      description: Read only.
                      default: US
                company:
                  type: string
                  description: ID of employee's company
                start_date:
                  type: string
                  description: >-
                    Most recent start date of employment. Until start date is
                    added, it will show up as a blocking employee onboard step.
                  format: date
                termination_date:
                  type: string
                  description: >-
                    Most recent date of employment termination. Will be set to
                    null if a more recent start date is set.
                  format: date
                default_net_pay_split:
                  type: string
                  description: ID of employee's net pay split
                workplaces:
                  type: array
                  description: >-
                    IDs of workplaces where the employee works. Optionally, an
                    empty list can be passed in and workplaces can be added
                    after employee creation. Until the workplaces are added,
                    this will show up as a blocking step in the onboarding
                    status.
                  items:
                    type: string
                primary_workplace:
                  type: string
                  description: The Workplace ID of the employee's primary workplace.
                ssn:
                  type: string
                  description: >-
                    Employee's TIN (usually their Social Security Number). Must
                    be unique across all employees in a company. Only the last
                    four digits of an SSN will be made available in
                    `ssn_last_four` after being set.
                payment_method_preference:
                  type: string
                  description: Either "direct_deposit" or "manual", default null
                active:
                  type: boolean
                  description: >-
                    Indicates whether the employee is currently employed. Used
                    only for filtering.
                  default: true
                w2_electronic_consent_provided:
                  type: boolean
                  description: >-
                    Indicates whether the employee has opted into electronic
                    delivery of W2 PDF.
                  default: false
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the employee
                  format: json
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "emp_zGGp6wYcxAeu1Ng8IA7v",
                        "first_name": "Tony",
                        "last_name": "Stark",
                        "middle_name": null,
                        "email": "tony@starkindustries.com",
                        "dob": "1970-05-29",
                        "bank_accounts": [],
                        "ssn_last_four": null,
                        "payment_method_preference": null,
                        "active": true,
                        "onboard": {
                            "status": "blocking",
                            "blocking_steps": [
                                "ssn"
                            ],
                            "remaining_steps": [
                                "ssn",
                                "payment_method"
                                "withholdings",
                            ],
                            "ssn": [
                                "ssn_submitted",
                            ],
                            "payment_method": [
                                "payment_method_preference_set",
                                "bank_account_exists",
                                "bank_account_verified",
                            ],
                            "withholdings": [
                                {
                                    "id": "jur_kSO0VneVfdx5TDDQ9Xnp",
                                    "name": "Federal",  
                                },
                                {
                                    "id": "jur_CUlTApePRnDFn9bPVCQE",
                                    "name": "New York",  
                                },  
                            ],
                        },
                        "workplaces": [
                            "wrk_i8nfu8234r8dkjhzlsdv"
                        ],
                        "company": "com_sx3svU6K8c5ZkSFlOh5p",
                        "start_date": "2019-03-01",
                        "termination_date": null,
                        "residence": {
                            "line1": "630 Bedford Road",
                            "line2": null,
                            "city": "Tarrytown",
                            "state": "NY",
                            "postal_code": "10591",
                            "country": "US"
                        },
                        "w2_electronic_consent_provided": false,
                        "metadata": {}
                    }
      deprecated: false
    get:
      summary: List employees
      description: >-
        Returns a list of all employees. Employees will be returned from the
        list endpoint in alphabetical order, sorted by last name, first name.
      operationId: list-employees
      parameters:
        - name: company
          in: query
          description: Return employees for this company ID.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of employees returned per page
          schema:
            type: integer
            format: int32
        - name: workplace
          in: query
          description: >-
            Return employees who work at these workplaces (can be
            comma-separated list of workplace IDs)
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n\t{\n    \"id\": \"emp_zGGp6wYcxAeu1Ng8IA7v\",\n    \"first_name\": \"Tony\",\n    \"last_name\": \"Stark\",\n    \"middle_name\": null,\n    \"email\": \"tony@starkindustries.com\",\n    \"dob\": \"1970-05-29\",\n    \"bank_accounts\": [],\n    \"ssn_last_four\": null,\n    \"payment_method_preference\": null,\n    \"active\": true,\n    \"onboard\": {\n        \"status\": \"blocking\",\n        \"blocking_steps\": [\n            \"ssn\"\n        ],\n        \"remaining_steps\": [\n            \"ssn\",\n            \"payment_method\"\n            \"withholdings\",\n        ],\n        \"ssn\": [\n            \"ssn_submitted\",\n        ],\n        \"payment_method\": [\n            \"payment_method_preference_set\",\n            \"bank_account_exists\",\n            \"bank_account_verified\",\n        ],\n        \"withholdings\": [\n            {\n                \"id\": \"jur_kSO0VneVfdx5TDDQ9Xnp\",\n                \"name\": \"Federal\",  \n            },\n            {\n                \"id\": \"jur_CUlTApePRnDFn9bPVCQE\",\n                \"name\": \"New York\",  \n            },  \n        ],\n    },\n    \"workplaces\": [\n        \"wrk_i8nfu8234r8dkjhzlsdv\"\n    ],\n    \"company\": \"com_sx3svU6K8c5ZkSFlOh5p\",\n    \"start_date\": \"2019-03-01\",\n    \"default_net_pay_split\": \"nps_lk218jk9082mjkjljT1c\",\n    \"residence\": {\n        \"line1\": \"630 Bedford Road\",\n        \"line2\": null,\n        \"city\": \"Tarrytown\",\n        \"state\": \"NY\",\n        \"postal_code\": \"10591\",\n        \"country\": \"US\"\n    },\n    \"w2_electronic_consent_provided\": false,\n    \"metadata\": {}\n\t}\n]"
      deprecated: false
  /employees/{employee}:
    get:
      summary: Get an employee
      description: Returns the specified employee.
      operationId: get-an-employee
      parameters:
        - name: employee
          in: path
          description: ID of the employee to return
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "emp_zGGp6wYcxAeu1Ng8IA7v",
                        "first_name": "Tony",
                        "last_name": "Stark",
                        "middle_name": null,
                        "email": "tony@starkindustries.com",
                        "dob": "1970-05-29",
                        "bank_accounts": [],
                        "ssn_last_four": null,
                        "payment_method_preference": null,
                        "active": true,
                        "onboard": {
                            "status": "blocking",
                            "blocking_steps": [
                                "ssn"
                            ],
                            "remaining_steps": [
                                "ssn",
                                "payment_method"
                                "withholdings",
                            ],
                            "ssn": [
                                "ssn_submitted",
                            ],
                            "payment_method": [
                                "payment_method_preference_set",
                                "bank_account_exists",
                                "bank_account_verified",
                            ],
                            "withholdings": [
                                {
                                    "id": "jur_kSO0VneVfdx5TDDQ9Xnp",
                                    "name": "Federal",  
                                },
                                {
                                    "id": "jur_CUlTApePRnDFn9bPVCQE",
                                    "name": "New York",  
                                },  
                            ],
                        },
                        "workplaces": [
                            "wrk_i8nfu8234r8dkjhzlsdv"
                        ],
                        "company": "com_sx3svU6K8c5ZkSFlOh5p",
                        "start_date": "2019-03-01",
                        "default_net_pay_split": "nps_lk218jk9082mjkjljT1c",
                        "residence": {
                            "line1": "630 Bedford Road",
                            "line2": null,
                            "city": "Tarrytown",
                            "state": "NY",
                            "postal_code": "10591",
                            "country": "US"
                        },
                        "w2_electronic_consent_provided": false,
                        "metadata": {}
                    }
      deprecated: false
    patch:
      summary: Update an employee
      description: Updates the specified employee.
      operationId: update-an-employee
      parameters:
        - name: employee
          in: path
          description: ID of the employee to update
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: Employee’s first name
                middle_name:
                  type: string
                  description: Employee’s middle name
                last_name:
                  type: string
                  description: Employee’s last name
                email:
                  type: string
                  description: Employee’s email address
                dob:
                  type: string
                  description: Employee’s date of birth
                  format: date
                residence:
                  type: object
                  description: Employee residence used for calculating state income taxes
                  required:
                    - line1
                    - city
                    - state
                    - postal_code
                  properties:
                    line1:
                      type: string
                      description: Street address or PO Box
                    line2:
                      type: string
                      description: Apartment, suite, unit, or building
                    city:
                      type: string
                      description: City, district, suburb, town, or village
                    state:
                      type: string
                      description: 2-digit state code
                    postal_code:
                      type: string
                      description: 5-digit postal code or zip code
                    country:
                      type: string
                      description: Read only.
                      default: US
                start_date:
                  type: string
                  description: Most recent start date of employment
                  format: date
                termination_date:
                  type: string
                  description: >-
                    Most recent date of employment termination. Will be set to
                    null if a more recent start date is set.
                  format: date
                default_net_pay_split:
                  type: string
                  description: ID of the employee's net pay split
                workplaces:
                  type: array
                  description: IDs of workplaces where the employee works
                  items:
                    type: string
                primary_workplace:
                  type: string
                  description: The Workplace ID of the employee's primary workplace.
                ssn:
                  type: string
                  description: >-
                    Employee's TIN (usually their Social Security Number). Must
                    be unique across all employees in a company. Only the last
                    four digits of an SSN will be made available in
                    `ssn_last_four` after being set.
                payment_method_preference:
                  type: string
                  description: Either "direct_deposit" or "manual"
                active:
                  type: boolean
                  description: >-
                    Indicates whether the employee is currently employed. Used
                    only for filtering.
                w2_electronic_consent_provided:
                  type: boolean
                  description: >-
                    Indicates whether the employee has opted into electronic
                    delivery of W2 PDF.
                  default: false
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the employee
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
  /benefits:
    post:
      summary: Create a benefit
      description: Creates a benefit.
      operationId: create-an-employee-benefit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - employee
                - benefit
              properties:
                employee:
                  type: string
                  description: ID of the employee associated with the benefit.
                benefit:
                  type: string
                  description: >-
                    Type of supported benefit. See [types of
                    benefits](https://docs.checkhq.com/reference/types-of-benefits).
                company_benefit:
                  type: string
                  description: The company benefit to associate this employee benefit with.
                period:
                  type: string
                  description: >-
                    The period over which a period amount is distributed. Can be
                    "monthly" or null.
                description:
                  type: string
                  description: >-
                    Optional description to distinguish the benefit within a
                    plan. Maximum length of 255 characters.
                company_contribution_amount:
                  type: string
                  description: Amount for company to contribute per payroll
                company_contribution_percent:
                  type: number
                  description: >-
                    Decimal percentage of gross pay for company to contribute
                    per payroll from 0 to 100.
                  format: float
                company_period_amount:
                  type: string
                  description: Amount for company to contribute over period.
                employee_contribution_amount:
                  type: string
                  description: Amount for employee to contribute per payroll
                employee_contribution_percent:
                  type: number
                  description: >-
                    Decimal percentage of gross pay for company to contribute
                    per payroll from 0 to 100.
                  format: float
                employee_period_amount:
                  type: string
                  description: Amount for employee to contribute over period.
                effective_start:
                  type: string
                  description: Start date for the benefit
                  format: date
                effective_end:
                  type: string
                  description: End date for the benefit
                  format: date
                hsa_contribution_limit:
                  type: string
                  description: Contribution limit of a HSA benefit
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    this employee benefit
                  format: json
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    get:
      summary: List benefits
      description: Returns a list of benefits.
      operationId: list-benefits
      parameters:
        - name: employee
          in: query
          description: Return benefits for this employee ID.
          schema:
            type: string
        - name: company
          in: query
          description: Return benefits for all employees of this company ID.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of benefits returned per page
          schema:
            type: integer
            format: int32
        - name: include_external
          in: query
          description: >-
            Flag to indicate if to additionally expose external benefits in the
            list response. Defaults to false if not included.
          schema:
            type: boolean
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n  {\n    \"id\": \"ben_lrcYUhTk1FVZl2vSCOBP\",\n    \"employee\": \"emp_kKTK4VafMNc5pIbI0G9x\",\n    \"benefit\": \"401k\",\n    \"company_benefit\": null,\n    \"source\": null,\n   \t\"period\": null,\n    \"description\": \"Guideline 401(k)\",\n    \"effective_start\": \"2020-01-01\",\n    \"effective_end\": null,\n    \"company_contribution_amount\": null,\n    \"company_contribution_percent\": 1.0,\n    \"company_period_amount\": null,\n    \"employee_contribution_amount\": null,\n    \"employee_contribution_percent\": 1.0,\n    \"employee_period_amount\": null,\n    \"hsa_contribution_limit\": null,\n    \"metadata\": {}\n\t}\n]"
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: ben_lrcYUhTk1FVZl2vSCOBP
                    employee:
                      type: string
                      example: emp_kKTK4VafMNc5pIbI0G9x
                    benefit:
                      type: string
                      example: 401k
                    company_benefit: {}
                    source: {}
                    period: {}
                    description:
                      type: string
                      example: Guideline 401(k)
                    effective_start:
                      type: string
                      example: '2020-01-01'
                    effective_end: {}
                    company_contribution_amount: {}
                    company_contribution_percent:
                      type: integer
                      example: 1
                      default: 0
                    company_period_amount: {}
                    employee_contribution_amount: {}
                    employee_contribution_percent:
                      type: integer
                      example: 1
                      default: 0
                    employee_period_amount: {}
                    hsa_contribution_limit: {}
                    metadata:
                      type: object
                      properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /benefits/{benefit}:
    get:
      summary: Get a benefit
      description: Returns the specified benefit.
      operationId: get-an-employee-benefit
      parameters:
        - name: benefit
          in: path
          description: ID of the benefit to return.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "ben_lrcYUhTk1FVZl2vSCOBP",
                      "employee": "emp_kKTK4VafMNc5pIbI0G9x",
                      "benefit": "401k",
                      "company_benefit": null,
                      "source": null,
                      "period": null,
                      "description": "Guideline 401(k)",
                      "effective_start": "2020-01-01",
                      "effective_end": null,
                      "company_contribution_amount": null,
                      "company_contribution_percent": 1.0,
                      "company_period_amount": null,
                      "employee_contribution_amount": null,
                      "employee_contribution_percent": 1.0,
                      "employee_period_amount": null,
                      "hsa_contribution_limit": null,
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: ben_lrcYUhTk1FVZl2vSCOBP
                  employee:
                    type: string
                    example: emp_kKTK4VafMNc5pIbI0G9x
                  benefit:
                    type: string
                    example: 401k
                  company_benefit: {}
                  source: {}
                  period: {}
                  description:
                    type: string
                    example: Guideline 401(k)
                  effective_start:
                    type: string
                    example: '2020-01-01'
                  effective_end: {}
                  company_contribution_amount: {}
                  company_contribution_percent:
                    type: integer
                    example: 1
                    default: 0
                  company_period_amount: {}
                  employee_contribution_amount: {}
                  employee_contribution_percent:
                    type: integer
                    example: 1
                    default: 0
                  employee_period_amount: {}
                  hsa_contribution_limit: {}
                  metadata:
                    type: object
                    properties: {}
      deprecated: false
    patch:
      summary: Update a benefit
      description: Updates the specified benefit.
      operationId: update-an-employee-benefit
      parameters:
        - name: benefit
          in: path
          description: ID of the benefit to update
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employee:
                  type: string
                  description: Update the benefit for this employee
                benefit:
                  type: string
                  description: >-
                    Type of supported benefit. See [types of
                    benefits](https://docs.checkhq.com/reference#types-of-benefits).
                company_benefit:
                  type: string
                  description: The company benefit to associate this employee benefit with.
                period:
                  type: string
                  description: >-
                    The period over which a period amount is distributed. Can be
                    "monthly" or null.
                description:
                  type: string
                  description: >-
                    Optional description to distinguish the benefit within the
                    plan. Maximum length of 255 characters.
                company_contribution_amount:
                  type: string
                  description: Amount for company to contribute per payroll
                company_contribution_percent:
                  type: number
                  description: >-
                    Decimal percentage of gross pay for company to contribute
                    per payroll from 0 to 100.
                  format: float
                company_period_amount:
                  type: string
                  description: Amount for company to contribute over period.
                employee_contribution_amount:
                  type: string
                  description: Amount for employee to contribute per payroll
                employee_contribution_percent:
                  type: number
                  description: >-
                    Decimal percentage of gross pay for company to contribute
                    per payroll from 0 to 100.
                  format: float
                employee_period_amount:
                  type: string
                  description: Amount for employee to contribute over period.
                effective_start:
                  type: string
                  description: Start date for the benefit
                  format: date
                effective_end:
                  type: string
                  description: End date for the benefit
                  format: date
                hsa_contribution_limit:
                  type: string
                  description: Contribution limit of a HSA benefit
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    this employee benefit
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    delete:
      summary: Delete a benefit
      description: Deletes the specified benefit.
      operationId: delete-an-employee-benefit
      parameters:
        - name: benefit
          in: path
          description: ID of the benefit to delete
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payrolls/{payroll}:
    get:
      summary: Get a payroll
      description: Returns the specified payroll.
      operationId: get-payroll
      parameters:
        - name: payroll
          in: path
          description: ID of the payroll to return.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "pay_Z26PNMC7Ky1wfFQzVqfF",
                      "company": "com_sx3svU6K8c5ZkSFlOh5p",
                      "period_start": "2019-06-16",
                      "period_end": "2019-06-29",
                      "approval_deadline": "2019-07-02T00:00:00.000000Z",
                      "approved_at": "2019-06-29T18:26:56.848920Z",
                      "payday": "2019-07-05",
                      "status": "paid",
                      "type": "regular",
                      "pay_frequency": "biweekly",
                      "funding_payment_method": "ach",
                      "processing_period": "four_day",
                      "off_cycle_options": null,
                      "managed": true,
                      "totals": {
                        "employee_gross": "961.54",
                        "employee_reimbursements": "0.00",
                        "employee_taxes": "249.23",
                        "employee_benefits": "0.00",
                        "post_tax_deductions": "0.00",
                        "employee_net": "712.31",
                        "contractor_gross": "100.00",
                        "contractor_reimbursements": "15.00",
                        "contractor_net": "115.00",
                        "company_taxes": "73.56",
                        "company_benefits": "0.00",
                        "liability": "1150.10",
                        "cash_requirement": "1150.10"
                      },
                      "items": [
                        {
                          "id": "itm_yvmmsVGFxLoBaMIkqzea",
                          "payroll": "pay_Z26PNMC7Ky1wfFQzVqfF",
                          "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                          "payment_method": "direct_deposit",
                          "net_pay": "712.31",
                          "earnings": [
                            {
                              "amount": "961.54",
                              "hours": 40.0,
                              "type": "regular",
                              "workplace": "wrk_cxcG4vjGKcSXZk1fgKai",
                              "code": null,
                              "description": null
                            }
                          ],
                          "reimbursements": [],
                          "taxes": [
                            {
                              "tax": "tax_I1Z9zqbBGWIbvlZpN2Vq",
                              "description": "New York SDI",
                              "amount": "0.60",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ImvSF9CTuMdokf0uwx5x",
                              "description": "Employer FICA Tax",
                              "amount": "59.62",
                              "payer": "company"
                            },
                            {
                              "tax": "tax_yjNkKk061BTipYv7G4Ti",
                              "description": "New York City Tax",
                              "amount": "31.04",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_S1krAkh75RzdWu5J53HA",
                              "description": "New York State Tax",
                              "amount": "44.20",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_UJrIQbtVErbdez0bYTVN",
                              "description": "New York Family Leave Benefits",
                              "amount": "1.47",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_1XHqR9Qf5t18SD2sfYEe",
                              "description": "Medicare",
                              "amount": "13.94",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_8L3JLfsH4X6dp0maBWfW",
                              "description": "Federal Income Tax",
                              "amount": "98.36",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ibU8cGhC5OlpOjoQFIXV",
                              "description": "FICA",
                              "amount": "59.62",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_O3f21hkS1cvHBZTa61BO",
                              "description": "Employer Medicare Tax",
                              "amount": "13.94",
                              "payer": "company"
                            }
                          ],
                          "benefits": [],
                          "benefit_overrides": [],
                          "post_tax_deductions": [],
                          "post_tax_deduction_overrides": [],
                          "warnings": []
                        }
                      ],
                      "contractor_payments": [
                        {
                          "contractor": "ctr_90QzaH9xPRI7JRLXnRoU",
                          "payment_method": "manual",
                          "amount": "100.00",
                          "reimbursement_amount": "15.00"
                        }
                      ],
                      "is_void": false,
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: pay_Z26PNMC7Ky1wfFQzVqfF
                  company:
                    type: string
                    example: com_sx3svU6K8c5ZkSFlOh5p
                  period_start:
                    type: string
                    example: '2019-06-16'
                  period_end:
                    type: string
                    example: '2019-06-29'
                  approval_deadline:
                    type: string
                    example: '2019-07-02T00:00:00.000000Z'
                  approved_at:
                    type: string
                    example: '2019-06-29T18:26:56.848920Z'
                  payday:
                    type: string
                    example: '2019-07-05'
                  status:
                    type: string
                    example: paid
                  type:
                    type: string
                    example: regular
                  pay_frequency:
                    type: string
                    example: biweekly
                  funding_payment_method:
                    type: string
                    example: ach
                  processing_period:
                    type: string
                    example: four_day
                  off_cycle_options: {}
                  managed:
                    type: boolean
                    example: true
                    default: true
                  totals:
                    type: object
                    properties:
                      employee_gross:
                        type: string
                        example: '961.54'
                      employee_reimbursements:
                        type: string
                        example: '0.00'
                      employee_taxes:
                        type: string
                        example: '249.23'
                      employee_benefits:
                        type: string
                        example: '0.00'
                      post_tax_deductions:
                        type: string
                        example: '0.00'
                      employee_net:
                        type: string
                        example: '712.31'
                      contractor_gross:
                        type: string
                        example: '100.00'
                      contractor_reimbursements:
                        type: string
                        example: '15.00'
                      contractor_net:
                        type: string
                        example: '115.00'
                      company_taxes:
                        type: string
                        example: '73.56'
                      company_benefits:
                        type: string
                        example: '0.00'
                      liability:
                        type: string
                        example: '1150.10'
                      cash_requirement:
                        type: string
                        example: '1150.10'
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: itm_yvmmsVGFxLoBaMIkqzea
                        payroll:
                          type: string
                          example: pay_Z26PNMC7Ky1wfFQzVqfF
                        employee:
                          type: string
                          example: emp_zGGp6wYcxAeu1Ng8IA7v
                        payment_method:
                          type: string
                          example: direct_deposit
                        net_pay:
                          type: string
                          example: '712.31'
                        earnings:
                          type: array
                          items:
                            type: object
                            properties:
                              amount:
                                type: string
                                example: '961.54'
                              hours:
                                type: integer
                                example: 40
                                default: 0
                              type:
                                type: string
                                example: regular
                              workplace:
                                type: string
                                example: wrk_cxcG4vjGKcSXZk1fgKai
                              code: {}
                              description: {}
                        reimbursements:
                          type: array
                        taxes:
                          type: array
                          items:
                            type: object
                            properties:
                              tax:
                                type: string
                                example: tax_I1Z9zqbBGWIbvlZpN2Vq
                              description:
                                type: string
                                example: New York SDI
                              amount:
                                type: string
                                example: '0.60'
                              payer:
                                type: string
                                example: employee
                        benefits:
                          type: array
                        benefit_overrides:
                          type: array
                        post_tax_deductions:
                          type: array
                        post_tax_deduction_overrides:
                          type: array
                        warnings:
                          type: array
                  contractor_payments:
                    type: array
                    items:
                      type: object
                      properties:
                        contractor:
                          type: string
                          example: ctr_90QzaH9xPRI7JRLXnRoU
                        payment_method:
                          type: string
                          example: manual
                        amount:
                          type: string
                          example: '100.00'
                        reimbursement_amount:
                          type: string
                          example: '15.00'
                  is_void:
                    type: boolean
                    example: false
                    default: true
                  metadata:
                    type: object
                    properties: {}
      deprecated: false
    patch:
      summary: Update a payroll
      description: Updates the specified payroll.
      operationId: update-payroll
      parameters:
        - name: payroll
          in: path
          description: ID of the payroll to update.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                period_start:
                  type: string
                  description: The start of the date range that the payroll covers.
                  format: date
                period_end:
                  type: string
                  description: The end of the date range that the payroll covers.
                  format: date
                payday:
                  type: string
                  description: The date on which employees will be paid for the payroll.
                  format: date
                processing_period:
                  type: string
                  description: >-
                    The processing period of the payroll. <br><br>One of
                    `four_day`, `two_day`, or `one_day`.<br><br>The processing
                    period determines the approval deadline of the payroll. For
                    a payroll with a Friday payday, `four_day` will mean the
                    approval deadline is on Monday, whereas `two_day` will mean
                    the approval deadline is on Wednesday.<br><br>The possible
                    values for this field are constrained by the processing
                    periods the company is approved for.<br><br>Default:
                    `processing_period` of the company
                type:
                  type: string
                  description: >-
                    Indicates whether the payroll is a regular,
                    [off-cycle](doc:off-cycle-payroll), or amendment
                    payroll.<br><br>One of `regular`, `off_cycle`, or
                    `amendment`.
                pay_frequency:
                  type: string
                  description: >-
                    Frequency by which [employees](ref:the-employee-object) get
                    paid.<br><br>One of `weekly`, `biweekly`, `semimonthly`,
                    `monthly`, `quarterly`, or `annually`.
                funding_payment_method:
                  type: string
                  description: >-
                    Payment method for funding the payroll. <br><br>One of `ach`
                    or `wire`.
                pay_schedule:
                  type: string
                  description: >-
                    ID of the [pay schedule](ref:the-pay-schedule-object) that
                    the payroll relates to.
                off_cycle_options:
                  type: object
                  description: >-
                    Additional configuration options controlling `off_cycle`
                    payroll behavior.
                  properties:
                    force_supplemental_withholding:
                      type: boolean
                      description: Whether to tax all earnings as supplemental earnings.
                    apply_benefits:
                      type: boolean
                      description: >-
                        Whether to apply [benefit deductions and
                        contributions](ref:the-employee-benefit-object) to the
                        payroll.
                    apply_post_tax_deductions:
                      type: boolean
                      description: >-
                        Whether to apply [post-tax
                        deductions](ref:the-post-tax-deduction-object) to the
                        payroll.
                items:
                  type: array
                  description: >-
                    The set of [payroll items](ref:the-payroll-item-object)
                    associated with the payroll.
                  items:
                    properties:
                      employee:
                        type: string
                      payment_method:
                        type: string
                      earnings:
                        type: array
                        items:
                          properties:
                            type:
                              type: string
                              description: >-
                                Type of earning. Can be one of the following
                                earning types in <a
                                href="https://docs.checkhq.com/reference/types-of-earnings">Types
                                of earnings</a>
                            workplace:
                              type: string
                              description: >-
                                ID of the workplace where work for this earning
                                was performed
                            earning_code:
                              type: string
                              description: >-
                                The earning code id which will be used to
                                aggregate earnings on the paystub
                            description:
                              type: string
                              description: >-
                                Readable description of the earning code that
                                will show up on the paystub
                            earning_rate:
                              type: string
                              description: >-
                                The earning rate id which will be used to
                                calculate the gross wage. Required if type is
                                “piece”
                            amount:
                              type: string
                              description: >-
                                Amount earned for this earning<br><br>Must be
                                greater than 0
                            hours:
                              type: number
                              description: Number of hours worked for this earning
                              format: float
                            piece_units:
                              type: number
                              description: >-
                                Number of units of work produced. Required if
                                type is “piece”
                              format: float
                            metadata:
                              type: string
                              description: >-
                                Additional loosely structured information to
                                associate with the earning
                              format: json
                          required:
                            - workplace
                          type: object
                      reimbursements:
                        type: array
                        items:
                          properties:
                            amount:
                              type: string
                              description: >-
                                Amount of reimbursement<br><br>Must be greater
                                than 0
                            description:
                              type: string
                              description: >-
                                Description for the reimbursement that will show
                                up on the paystub
                            code:
                              type: string
                              description: >-
                                Unique code to identify the reimbursement that
                                will be used to aggregate reimbursements on the
                                paystub. Recommended to always be included to
                                have explicit groupings on the paystub.
                            metadata:
                              type: string
                              description: >-
                                Additional loosely structured information to
                                associate with the reimbursement
                              format: json
                          required:
                            - amount
                          type: object
                      benefit_overrides:
                        type: array
                        description: >-
                          The set of benefit override objects associated with
                          this payroll item.
                        items:
                          properties:
                            benefit:
                              type: string
                              description: >-
                                ID of the employee benefit that is being
                                overridden for the payroll item
                            employee_contribution_amount:
                              type: string
                              description: >-
                                Updated employee contribution amount to use for
                                this payroll only
                            company_contribution_amount:
                              type: string
                              description: >-
                                Updated company contribution amount to use for
                                this payroll only
                          required:
                            - benefit
                          type: object
                      post_tax_deduction_overrides:
                        type: array
                        description: >-
                          The set of post-tax deduction override objects
                          associated with this payroll item.
                        items:
                          properties:
                            post_tax_deduction:
                              type: string
                              description: >-
                                ID of the miscellaneous post-tax deduction that
                                is being overridden for the payroll item. Child
                                support post-tax deductions cannot be overriden
                            amount:
                              type: string
                              description: >-
                                Updated deduction amount to use for this payroll
                                only
                          required:
                            - post_tax_deduction
                            - amount
                          type: object
                      pto_balance_hours:
                        type: number
                        description: >-
                          The employee's remaining PTO hour balance, for display
                          on the paystub
                        format: float
                      sick_balance_hours:
                        type: number
                        description: >-
                          The employee's remaining sick hour balance, for
                          display on the paystub
                        format: float
                      state_covid_sick_balance_hours:
                        type: number
                        description: >-
                          The employee's remaining sick hour balance from state
                          COVID relief bills, for display on the paystub
                        format: float
                      supplemental_tax_calc_method:
                        type: string
                        description: >-
                          Controls the method used by Check to calculate tax on
                          supplemental earnings. May be flat or aggregate
                      paper_check_number:
                        type: string
                        description: >-
                          For accounting. The check number associated with any
                          printed checks. Can be updated even after the
                          associated payroll has been approved. See [Get a paper
                          check](ref:get-a-paper-check) for more details.
                      metadata:
                        type: string
                        description: >-
                          Additional loosely structured information to associate
                          with the payroll item.
                        format: json
                    required:
                      - employee
                    type: object
                contractor_payments:
                  type: array
                  description: >-
                    The set of [contractor
                    payments](ref:the-contractor-payment-object) associated with
                    the payroll.
                  items:
                    properties:
                      contractor:
                        type: string
                        description: The id of the contractor being paid
                      payment_method:
                        type: string
                        description: >-
                          The way the contractor will be paid, either
                          “direct_deposit” or "manual"
                        default: '"direct_deposit"'
                      amount:
                        type: string
                        description: The amount the contractor should be paid
                        default: '"0.00"'
                      reimbursement_amount:
                        type: string
                        description: The amount to reimburse the contractor
                        default: '"0.00"'
                      paper_check_number:
                        type: string
                        description: >-
                          For accounting. The check number associated with any
                          printed checks. Can be updated even after the
                          associated payroll has been approved. See Get a paper
                          check for more details.
                      workplace:
                        type: string
                        description: The Workplace ID associated with this payment.
                    required:
                      - contractor
                    type: object
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the payroll. Values must be string.
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    delete:
      summary: Delete a payroll
      description: Deletes a payroll.
      operationId: delete-a-payroll
      parameters:
        - name: payroll
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payrolls:
    post:
      summary: Create a payroll
      description: Creates a payroll.
      operationId: create-payroll
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - company
                - period_start
                - period_end
                - payday
              properties:
                company:
                  type: string
                  description: ID of the company to run payroll for.
                period_start:
                  type: string
                  description: The start of the date range that the payroll covers.
                  format: date
                period_end:
                  type: string
                  description: The end of the date range that the payroll covers.
                  format: date
                payday:
                  type: string
                  description: The date on which employees will be paid for the payroll.
                  format: date
                processing_period:
                  type: string
                  description: >-
                    The processing period of the payroll. <br><br>One of
                    `four_day`, `two_day`, or `one_day`.<br><br>The processing
                    period determines the approval deadline of the payroll. For
                    a payroll with a Friday payday, `four_day` will mean the
                    approval deadline is on Monday, whereas `two_day` will mean
                    the approval deadline is on Wednesday, and `one_day` will
                    mean the approval deadline is on Thursday.<br><br>The
                    possible values for this field are constrained by the
                    processing periods the company is approved
                    for.<br><br>Default: `processing_period` of the company
                type:
                  type: string
                  description: >-
                    Indicates whether the payroll is a regular,
                    [off-cycle](doc:off-cycle-payroll), or amendment
                    payroll.<br><br>One of `regular`,`off_cycle`, or
                    `amendment`.<br><br>Default: `regular`
                pay_frequency:
                  type: string
                  description: >-
                    Frequency by which [employees](ref:the-employee-object) get
                    paid.<br><br>One of `weekly`, `biweekly`, `semimonthly`,
                    `monthly`, `quarterly`, or `annually`.<br><br>Default:
                    `biweekly`
                funding_payment_method:
                  type: string
                  description: >-
                    Payment method for funding the payroll. <br><br>One of `ach`
                    or `wire`. <br><br>Default: `ach`
                pay_schedule:
                  type: string
                  description: >-
                    ID of the [pay schedule](ref:the-pay-schedule-object) that
                    the payroll relates to.
                off_cycle_options:
                  type: object
                  description: >-
                    Additional configuration options controlling `off_cycle`
                    payroll behavior.
                  properties:
                    force_supplemental_withholding:
                      type: boolean
                      description: >-
                        Whether to tax all earnings as supplemental
                        earnings.<br><br>Default: `false`
                    apply_benefits:
                      type: boolean
                      description: >-
                        Whether to apply [benefit deductions and
                        contributions](ref:the-employee-benefit-object)  to the
                        payroll.<br><br>Default: `false`
                    apply_post_tax_deductions:
                      type: boolean
                      description: >-
                        Whether to apply [post-tax
                        deductions](ref:the-post-tax-deduction-object) to the
                        payroll.<br><br>Default: `false`
                items:
                  type: array
                  description: >-
                    The set of [payroll items](ref:the-payroll-item-object)
                    associated with the payroll.
                  items:
                    properties:
                      employee:
                        type: string
                      payment_method:
                        type: string
                      earnings:
                        type: array
                        items:
                          properties:
                            type:
                              type: string
                              description: >-
                                Type of earning. Can be one of the following
                                earning types in <a
                                href="https://docs.checkhq.com/reference/types-of-earnings">Types
                                of earnings</a>
                            workplace:
                              type: string
                              description: >-
                                ID of the workplace where work for this earning
                                was performed
                            earning_code:
                              type: string
                              description: >-
                                The earning code id which will be used to
                                aggregate earnings on the paystub
                            description:
                              type: string
                              description: >-
                                Readable description of the earning code that
                                will show up on the paystub
                            earning_rate:
                              type: string
                              description: >-
                                The earning rate id which will be used to
                                calculate the gross wage. Required if type is
                                “piece”
                            amount:
                              type: string
                              description: >-
                                Amount earned for this earning<br><br>Must be
                                greater than 0
                            hours:
                              type: number
                              description: Number of hours worked for this earning
                              format: float
                            piece_units:
                              type: number
                              description: >-
                                Number of units of work produced. Required if
                                type is “piece”
                              format: float
                            metadata:
                              type: string
                              description: >-
                                Additional loosely structured information to
                                associate with the earning
                              format: json
                          required:
                            - workplace
                          type: object
                      reimbursements:
                        type: array
                        items:
                          properties:
                            amount:
                              type: string
                              description: >-
                                Amount of reimbursement<br><br>Must be greater
                                than 0
                            description:
                              type: string
                              description: >-
                                Description for the reimbursement that will show
                                up on the paystub
                            code:
                              type: string
                              description: >-
                                Unique code to identify the reimbursement that
                                will be used to aggregate reimbursements on the
                                paystub. Recommended to always be included to
                                have explicit groupings on the paystub.
                            metadata:
                              type: string
                              description: >-
                                Additional loosely structured information to
                                associate with the reimbursement
                              format: json
                          required:
                            - amount
                          type: object
                      benefit_overrides:
                        type: array
                        description: >-
                          The set of benefit override objects associated with
                          this payroll item.
                        items:
                          properties:
                            benefit:
                              type: string
                              description: >-
                                ID of the employee benefit that is being
                                overridden for the payroll item
                            employee_contribution_amount:
                              type: string
                              description: >-
                                Updated employee contribution amount to use for
                                this payroll only
                            company_contribution_amount:
                              type: string
                              description: >-
                                Updated company contribution amount to use for
                                this payroll only
                          required:
                            - benefit
                          type: object
                      post_tax_deduction_overrides:
                        type: array
                        description: >-
                          The set of post-tax deduction override objects
                          associated with this payroll item.
                        items:
                          properties:
                            post_tax_deduction:
                              type: string
                              description: >-
                                ID of the miscellaneous post-tax deduction that
                                is being overridden for the payroll item. Child
                                support post-tax deductions cannot be overriden
                            amount:
                              type: string
                              description: >-
                                Updated deduction amount to use for this payroll
                                only
                          required:
                            - post_tax_deduction
                            - amount
                          type: object
                      pto_balance_hours:
                        type: number
                        description: >-
                          The employee's remaining PTO hour balance, for display
                          on the paystub
                        format: float
                      sick_balance_hours:
                        type: number
                        description: >-
                          The employee's remaining sick hour balance, for
                          display on the paystub
                        format: float
                      state_covid_sick_balance_hours:
                        type: number
                        description: >-
                          The employee's remaining sick hour balance from state
                          COVID relief bills, for display on the paystub
                        format: float
                      supplemental_tax_calc_method:
                        type: string
                        description: >-
                          Controls the method used by Check to calculate tax on
                          supplemental earnings. May be flat or aggregate
                      paper_check_number:
                        type: string
                        description: >-
                          For accounting. The check number associated with any
                          printed checks. Can be updated even after the
                          associated payroll has been approved. See [Get a paper
                          check](ref:get-a-paper-check) for more details.
                      metadata:
                        type: string
                        description: >-
                          Additional loosely structured information to associate
                          with the payroll item.
                        format: json
                    required:
                      - employee
                    type: object
                contractor_payments:
                  type: array
                  description: >-
                    The set of [contractor
                    payments](ref:the-contractor-payment-object) associated with
                    the payroll.
                  items:
                    properties:
                      contractor:
                        type: string
                        description: The id of the contractor being paid
                      payment_method:
                        type: string
                        description: >-
                          The way the contractor will be paid, either
                          “direct_deposit” or "manual"
                        default: '"direct_deposit"'
                      amount:
                        type: string
                        description: The amount the contractor should be paid
                        default: '"0.00"'
                      reimbursement_amount:
                        type: string
                        description: The amount to reimburse the contractor
                        default: '"0.00"'
                      paper_check_number:
                        type: string
                        description: >-
                          For accounting. The check number associated with any
                          printed checks. Can be updated even after the
                          associated payroll has been approved. See Get a paper
                          check for more details.
                      workplace:
                        type: string
                        description: The Workplace ID associated with this payment.
                    required:
                      - contractor
                    type: object
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the payroll. Values must be string.
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "pay_Z26PNMC7Ky1wfFQzVqfF",
                      "company": "com_sx3svU6K8c5ZkSFlOh5p",
                      "period_start": "2019-06-16",
                      "period_end": "2019-06-29",
                      "approval_deadline": "2019-07-02T00:00:00.000000Z",
                      "approved_at": "2019-06-29T18:26:56.848920Z",
                      "payday": "2019-07-05",
                      "status": "paid",
                      "type": "regular",
                      "pay_frequency": "biweekly",
                      "funding_payment_method": "ach",
                      "processing_period": "four_day",  
                      "off_cycle_options": null,
                      "managed": true,
                      "totals": {
                        "employee_gross": "961.54",
                        "employee_reimbursements": "0.00",
                        "employee_taxes": "249.23",
                        "employee_benefits": "0.00",
                        "post_tax_deductions": "0.00",
                        "employee_net": "712.31",
                        "contractor_gross": "100.00",
                        "contractor_reimbursements": "15.00",
                        "contractor_net": "115.00",
                        "company_taxes": "73.56",
                        "company_benefits": "0.00",
                        "liability": "1150.10",
                        "cash_requirement": "1150.10"
                      },
                      "items": [
                        {
                          "id": "itm_yvmmsVGFxLoBaMIkqzea",
                          "payroll": "pay_Z26PNMC7Ky1wfFQzVqfF",
                          "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                          "payment_method": "direct_deposit",
                          "net_pay": "712.31",
                          "earnings": [
                            {
                              "amount": "961.54",
                              "hours": 40.0,
                              "type": "regular",
                              "workplace": "wrk_cxcG4vjGKcSXZk1fgKai",
                              "code": null,
                              "description": null
                            }
                          ],
                          "reimbursements": [],
                          "taxes": [
                            {
                              "tax": "tax_I1Z9zqbBGWIbvlZpN2Vq",
                              "description": "New York SDI",
                              "amount": "0.60",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ImvSF9CTuMdokf0uwx5x",
                              "description": "Employer FICA Tax",
                              "amount": "59.62",
                              "payer": "company"
                            },
                            {
                              "tax": "tax_yjNkKk061BTipYv7G4Ti",
                              "description": "New York City Tax",
                              "amount": "31.04",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_S1krAkh75RzdWu5J53HA",
                              "description": "New York State Tax",
                              "amount": "44.20",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_UJrIQbtVErbdez0bYTVN",
                              "description": "New York Family Leave Benefits",
                              "amount": "1.47",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_1XHqR9Qf5t18SD2sfYEe",
                              "description": "Medicare",
                              "amount": "13.94",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_8L3JLfsH4X6dp0maBWfW",
                              "description": "Federal Income Tax",
                              "amount": "98.36",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ibU8cGhC5OlpOjoQFIXV",
                              "description": "FICA",
                              "amount": "59.62",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_O3f21hkS1cvHBZTa61BO",
                              "description": "Employer Medicare Tax",
                              "amount": "13.94",
                              "payer": "company"
                            }
                          ],
                          "benefits": [],
                          "benefit_overrides": [],
                          "post_tax_deductions": [],
                          "post_tax_deduction_overrides": [],
                          "warnings": []
                        }
                      ],
                      "contractor_payments": [
                        {
                          "contractor": "ctr_90QzaH9xPRI7JRLXnRoU",
                          "payment_method": "manual",
                          "amount": "100.00",
                          "reimbursement_amount": "15.00"
                        }
                      ],
                      "is_void": false,
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: pay_Z26PNMC7Ky1wfFQzVqfF
                  company:
                    type: string
                    example: com_sx3svU6K8c5ZkSFlOh5p
                  period_start:
                    type: string
                    example: '2019-06-16'
                  period_end:
                    type: string
                    example: '2019-06-29'
                  approval_deadline:
                    type: string
                    example: '2019-07-02T00:00:00.000000Z'
                  approved_at:
                    type: string
                    example: '2019-06-29T18:26:56.848920Z'
                  payday:
                    type: string
                    example: '2019-07-05'
                  status:
                    type: string
                    example: paid
                  type:
                    type: string
                    example: regular
                  pay_frequency:
                    type: string
                    example: biweekly
                  funding_payment_method:
                    type: string
                    example: ach
                  processing_period:
                    type: string
                    example: four_day
                  off_cycle_options: {}
                  managed:
                    type: boolean
                    example: true
                    default: true
                  totals:
                    type: object
                    properties:
                      employee_gross:
                        type: string
                        example: '961.54'
                      employee_reimbursements:
                        type: string
                        example: '0.00'
                      employee_taxes:
                        type: string
                        example: '249.23'
                      employee_benefits:
                        type: string
                        example: '0.00'
                      post_tax_deductions:
                        type: string
                        example: '0.00'
                      employee_net:
                        type: string
                        example: '712.31'
                      contractor_gross:
                        type: string
                        example: '100.00'
                      contractor_reimbursements:
                        type: string
                        example: '15.00'
                      contractor_net:
                        type: string
                        example: '115.00'
                      company_taxes:
                        type: string
                        example: '73.56'
                      company_benefits:
                        type: string
                        example: '0.00'
                      liability:
                        type: string
                        example: '1150.10'
                      cash_requirement:
                        type: string
                        example: '1150.10'
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: itm_yvmmsVGFxLoBaMIkqzea
                        payroll:
                          type: string
                          example: pay_Z26PNMC7Ky1wfFQzVqfF
                        employee:
                          type: string
                          example: emp_zGGp6wYcxAeu1Ng8IA7v
                        payment_method:
                          type: string
                          example: direct_deposit
                        net_pay:
                          type: string
                          example: '712.31'
                        earnings:
                          type: array
                          items:
                            type: object
                            properties:
                              amount:
                                type: string
                                example: '961.54'
                              hours:
                                type: integer
                                example: 40
                                default: 0
                              type:
                                type: string
                                example: regular
                              workplace:
                                type: string
                                example: wrk_cxcG4vjGKcSXZk1fgKai
                              code: {}
                              description: {}
                        reimbursements:
                          type: array
                        taxes:
                          type: array
                          items:
                            type: object
                            properties:
                              tax:
                                type: string
                                example: tax_I1Z9zqbBGWIbvlZpN2Vq
                              description:
                                type: string
                                example: New York SDI
                              amount:
                                type: string
                                example: '0.60'
                              payer:
                                type: string
                                example: employee
                        benefits:
                          type: array
                        benefit_overrides:
                          type: array
                        post_tax_deductions:
                          type: array
                        post_tax_deduction_overrides:
                          type: array
                        warnings:
                          type: array
                  contractor_payments:
                    type: array
                    items:
                      type: object
                      properties:
                        contractor:
                          type: string
                          example: ctr_90QzaH9xPRI7JRLXnRoU
                        payment_method:
                          type: string
                          example: manual
                        amount:
                          type: string
                          example: '100.00'
                        reimbursement_amount:
                          type: string
                          example: '15.00'
                  is_void:
                    type: boolean
                    example: false
                    default: true
                  metadata:
                    type: object
                    properties: {}
      deprecated: false
    get:
      summary: List payrolls
      description: Returns a list of payrolls.
      operationId: list-payrolls
      parameters:
        - name: company
          in: query
          description: Return payrolls for this [company](ref:company) ID.
          schema:
            type: string
        - name: type
          in: query
          description: >-
            Return payrolls of this type.<br><br>One of `regular` or
            `off_cycle`.
          schema:
            type: string
        - name: managed
          in: query
          description: Return payrolls of this `managed` status.
          schema:
            type: boolean
        - name: limit
          in: query
          description: Number of payrolls returned per page
          schema:
            type: integer
            format: int32
        - name: payday_after
          in: query
          description: >-
            Return payrolls whose payday is on or after the provided date
            (format: YYYY-MM-DD)
          schema:
            type: string
        - name: payday_before
          in: query
          description: >-
            Return payrolls whose payday is on or before the provided date
            (format: YYYY-MM-DD)
          schema:
            type: string
        - name: status
          in: query
          description: Return payrolls in a given status
          schema:
            type: string
            enum:
              - draft
              - pending
              - processing
              - paid
              - partially_paid
              - failed
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                    {
                      "id": "pay_Z26PNMC7Ky1wfFQzVqfF",
                      "company": "com_sx3svU6K8c5ZkSFlOh5p",
                      "period_start": "2019-06-16",
                      "period_end": "2019-06-29",
                      "approval_deadline": "2019-07-02T00:00:00.000000Z",
                      "approved_at": "2019-06-29T18:26:56.848920Z",
                      "payday": "2019-07-05",
                      "status": "paid",
                      "type": "regular",
                      "pay_frequency": "biweekly",
                      "processing_period": "four_day",
                      "off_cycle_options": null,
                      "managed": true,
                      "totals": {
                        "employee_gross": "961.54",
                        "employee_reimbursements": "0.00",
                        "employee_taxes": "249.23",
                        "employee_benefits": "0.00",
                        "post_tax_deductions": "0.00",
                        "employee_net": "712.31",
                        "contractor_gross": "100.00",
                        "contractor_reimbursements": "15.00",
                        "contractor_net": "115.00",
                        "company_taxes": "73.56",
                        "company_benefits": "0.00",
                        "liability": "1150.10",
                        "cash_requirement": "1150.10"
                      },
                      "items": [
                        {
                          "id": "itm_yvmmsVGFxLoBaMIkqzea",
                          "payroll": "pay_Z26PNMC7Ky1wfFQzVqfF",
                          "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                          "payment_method": "direct_deposit",
                          "net_pay": "712.31",
                          "earnings": [
                            {
                              "amount": "961.54",
                              "hours": 40.0,
                              "type": "regular",
                              "workplace": "wrk_cxcG4vjGKcSXZk1fgKai",
                              "code": null,
                              "description": null
                            }
                          ],
                          "reimbursements": [],
                          "taxes": [
                            {
                              "tax": "tax_I1Z9zqbBGWIbvlZpN2Vq",
                              "description": "New York SDI",
                              "amount": "0.60",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ImvSF9CTuMdokf0uwx5x",
                              "description": "Employer FICA Tax",
                              "amount": "59.62",
                              "payer": "company"
                            },
                            {
                              "tax": "tax_yjNkKk061BTipYv7G4Ti",
                              "description": "New York City Tax",
                              "amount": "31.04",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_S1krAkh75RzdWu5J53HA",
                              "description": "New York State Tax",
                              "amount": "44.20",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_UJrIQbtVErbdez0bYTVN",
                              "description": "New York Family Leave Benefits",
                              "amount": "1.47",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_1XHqR9Qf5t18SD2sfYEe",
                              "description": "Medicare",
                              "amount": "13.94",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_8L3JLfsH4X6dp0maBWfW",
                              "description": "Federal Income Tax",
                              "amount": "98.36",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ibU8cGhC5OlpOjoQFIXV",
                              "description": "FICA",
                              "amount": "59.62",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_O3f21hkS1cvHBZTa61BO",
                              "description": "Employer Medicare Tax",
                              "amount": "13.94",
                              "payer": "company"
                            }
                          ],
                          "benefits": [],
                          "benefit_overrides": [],
                          "post_tax_deductions": [],
                          "post_tax_deduction_overrides": [],
                          "warnings": []
                        }
                      ],
                      "contractor_payments": [
                        {
                          "contractor": "ctr_90QzaH9xPRI7JRLXnRoU",
                          "payment_method": "manual",
                          "amount": "100.00",
                          "reimbursement_amount": "15.00"
                        }
                      ],
                      "is_void": false,
                      "metadata": {}
                    }
                    ]
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: pay_Z26PNMC7Ky1wfFQzVqfF
                    company:
                      type: string
                      example: com_sx3svU6K8c5ZkSFlOh5p
                    period_start:
                      type: string
                      example: '2019-06-16'
                    period_end:
                      type: string
                      example: '2019-06-29'
                    approval_deadline:
                      type: string
                      example: '2019-07-02T00:00:00.000000Z'
                    approved_at:
                      type: string
                      example: '2019-06-29T18:26:56.848920Z'
                    payday:
                      type: string
                      example: '2019-07-05'
                    status:
                      type: string
                      example: paid
                    type:
                      type: string
                      example: regular
                    pay_frequency:
                      type: string
                      example: biweekly
                    processing_period:
                      type: string
                      example: four_day
                    off_cycle_options: {}
                    managed:
                      type: boolean
                      example: true
                      default: true
                    totals:
                      type: object
                      properties:
                        employee_gross:
                          type: string
                          example: '961.54'
                        employee_reimbursements:
                          type: string
                          example: '0.00'
                        employee_taxes:
                          type: string
                          example: '249.23'
                        employee_benefits:
                          type: string
                          example: '0.00'
                        post_tax_deductions:
                          type: string
                          example: '0.00'
                        employee_net:
                          type: string
                          example: '712.31'
                        contractor_gross:
                          type: string
                          example: '100.00'
                        contractor_reimbursements:
                          type: string
                          example: '15.00'
                        contractor_net:
                          type: string
                          example: '115.00'
                        company_taxes:
                          type: string
                          example: '73.56'
                        company_benefits:
                          type: string
                          example: '0.00'
                        liability:
                          type: string
                          example: '1150.10'
                        cash_requirement:
                          type: string
                          example: '1150.10'
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: itm_yvmmsVGFxLoBaMIkqzea
                          payroll:
                            type: string
                            example: pay_Z26PNMC7Ky1wfFQzVqfF
                          employee:
                            type: string
                            example: emp_zGGp6wYcxAeu1Ng8IA7v
                          payment_method:
                            type: string
                            example: direct_deposit
                          net_pay:
                            type: string
                            example: '712.31'
                          earnings:
                            type: array
                            items:
                              type: object
                              properties:
                                amount:
                                  type: string
                                  example: '961.54'
                                hours:
                                  type: integer
                                  example: 40
                                  default: 0
                                type:
                                  type: string
                                  example: regular
                                workplace:
                                  type: string
                                  example: wrk_cxcG4vjGKcSXZk1fgKai
                                code: {}
                                description: {}
                          reimbursements:
                            type: array
                          taxes:
                            type: array
                            items:
                              type: object
                              properties:
                                tax:
                                  type: string
                                  example: tax_I1Z9zqbBGWIbvlZpN2Vq
                                description:
                                  type: string
                                  example: New York SDI
                                amount:
                                  type: string
                                  example: '0.60'
                                payer:
                                  type: string
                                  example: employee
                          benefits:
                            type: array
                          benefit_overrides:
                            type: array
                          post_tax_deductions:
                            type: array
                          post_tax_deduction_overrides:
                            type: array
                          warnings:
                            type: array
                    contractor_payments:
                      type: array
                      items:
                        type: object
                        properties:
                          contractor:
                            type: string
                            example: ctr_90QzaH9xPRI7JRLXnRoU
                          payment_method:
                            type: string
                            example: manual
                          amount:
                            type: string
                            example: '100.00'
                          reimbursement_amount:
                            type: string
                            example: '15.00'
                    is_void:
                      type: boolean
                      example: false
                      default: true
                    metadata:
                      type: object
                      properties: {}
      deprecated: false
  /payroll_items/{payroll_item}:
    delete:
      summary: Delete a payroll item
      description: ''
      operationId: delete-a-payroll-item
      parameters:
        - name: payroll_item
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            text/plain:
              examples:
                Result:
                  value: ''
      deprecated: false
    patch:
      summary: Update a payroll item
      description: Updates the specified payroll item.
      operationId: update-a-payroll-item
      parameters:
        - name: payroll_item
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                payroll:
                  type: string
                  description: The payroll ID associated with the payroll item.
                payment_method:
                  type: string
                  description: >-
                    May be `manual`, or `direct_deposit` if the employee has a
                    linked bank account. `direct_deposit` if the employee has a
                    linked Plaid account.
                earnings:
                  type: array
                  description: >-
                    The set of earnings objects associated with the payroll
                    item.
                  items:
                    properties:
                      type:
                        type: string
                        description: >-
                          Type of earning. Can be one of the following earning
                          types in <a
                          href="https://docs.checkhq.com/reference/types-of-earnings">Types
                          of earnings</a>
                      workplace:
                        type: string
                        description: >-
                          ID of the workplace where work for this earning was
                          performed
                      earning_code:
                        type: string
                        description: >-
                          The earning code id which will be used to aggregate
                          earnings on the paystub
                      description:
                        type: string
                        description: >-
                          Readable description of the earning code that will
                          show up on the paystub
                      earning_rate:
                        type: string
                        description: >-
                          The earning rate id which will be used to calculate
                          the gross wage. Required if type is “piece”
                      amount:
                        type: string
                        description: >-
                          Amount earned for this earning<br><br>Must be greater
                          than 0
                      hours:
                        type: number
                        description: Number of hours worked for this earning
                        format: float
                      piece_units:
                        type: number
                        description: >-
                          Number of units of work produced. Required if type is
                          “piece”
                        format: float
                      metadata:
                        type: string
                        description: >-
                          Additional loosely structured information to associate
                          with the earning
                        format: json
                    required:
                      - workplace
                    type: object
                reimbursements:
                  type: array
                  description: >-
                    The set of non-taxable reimbursements objects associated
                    with the payroll item.
                  items:
                    properties:
                      amount:
                        type: string
                        description: Amount of reimbursement<br><br>Must be greater than 0
                      description:
                        type: string
                        description: >-
                          Description for the reimbursement that will show up on
                          the paystub
                      code:
                        type: string
                        description: >-
                          Unique code to identify the reimbursement that will be
                          used to aggregate reimbursements on the paystub.
                          Recommended to always be included to have explicit
                          groupings on the paystub.
                      metadata:
                        type: string
                        description: >-
                          Additional loosely structured information to associate
                          with the reimbursement
                        format: json
                    required:
                      - amount
                    type: object
                benefit_overrides:
                  type: array
                  description: >-
                    The set of benefit override objects associated with this
                    payroll item.
                  items:
                    properties:
                      benefit:
                        type: string
                        description: >-
                          ID of the employee benefit that is being overridden
                          for the payroll item
                      employee_contribution_amount:
                        type: string
                        description: >-
                          Updated employee contribution amount to use for this
                          payroll only
                      company_contribution_amount:
                        type: string
                        description: >-
                          Updated company contribution amount to use for this
                          payroll only
                    required:
                      - benefit
                    type: object
                post_tax_deduction_overrides:
                  type: array
                  description: >-
                    The set of benefit override objects associated with this
                    payroll item.
                  items:
                    properties:
                      post_tax_deduction:
                        type: string
                        description: >-
                          ID of the miscellaneous post-tax deduction that is
                          being overridden for the payroll item. Child support
                          post-tax deductions cannot be overriden
                      amount:
                        type: string
                        description: Updated deduction amount to use for this payroll only
                    required:
                      - post_tax_deduction
                      - amount
                    type: object
                pto_balance_hours:
                  type: number
                  description: >-
                    The employee's remaining PTO hour balance, for display on
                    the paystub. Can be updated even after the associated
                    payroll has been approved.
                  default: null
                  format: float
                sick_balance_hours:
                  type: number
                  description: >-
                    The employee's remaining sick hour balance, for display on
                    the paystub. Can be updated even after the associated
                    payroll has been approved.
                  default: null
                  format: float
                state_covid_sick_balance_hours:
                  type: number
                  description: >-
                    The employee's remaining sick hour balance from state COVID
                    relief bills, for display on the paystub
                  default: null
                  format: float
                supplemental_tax_calc_method:
                  type: string
                  description: >-
                    Controls the method used by Check to calculate tax on
                    supplemental earnings. May be `flat` or `aggregate`
                paper_check_number:
                  type: string
                  description: >-
                    For accounting. The check number associated with any printed
                    checks. Can be updated even after the associated payroll has
                    been approved. See [Get a paper
                    check](ref:get-a-paper-check) for more details.
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the payroll item
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    get:
      summary: Get a payroll item
      description: Returns the specified payroll item.
      operationId: get-a-payroll-item
      parameters:
        - name: payroll_item
          in: path
          description: ID of the payroll item to return
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "itm_yvmmsVGFxLoBaMIkqzea",
                        "payroll": "pay_Z26PNMC7Ky1wfFQzVqfF",
                        "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                        "status": "draft",
                        "payment_method": "direct_deposit",
                        "supplemental_tax_calc_method": "flat",
                        "net_pay": null,
                        "earnings": [
                          {
                            "amount": "1384.61",
                            "hours": 40.0,
                            "type": "salaried",
                            "workplace": "wrk_qbCnBhUIDzduGrwLJ83p",
                            "code": null,
                            "description": null
                          }
                        ],
                        "reimbursements": [
                          {
                            "amount": "123.43",
                            "code": null,
                            "description": null,
                          }
                        ],
                        "pto_balance_hours": null,
                        "sick_balance_hours": null,
                        "state_covid_sick_balance_hours": null,
                        "taxes": null,
                        "benefits": null,
                        "benefit_overrides": null,
                        "post_tax_deductions": null,
                        "post_tax_deduction_overrides": null,
                        "warnings": null,
                        "paper_check_number": null,
                        "metadata": {}
                    }
      deprecated: false
  /payroll_items:
    get:
      summary: List payroll items
      description: Return a list of payroll items.
      operationId: list-payroll-items
      parameters:
        - name: payroll
          in: query
          description: Return payroll_items for this [payroll](ref:payroll) ID.
          schema:
            type: string
        - name: employee
          in: query
          description: Return payroll_items for this employee ID
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"next\": \"https://sandbox.checkhq.com/payroll_items?cursor=cD0yMDIyLTAzLTIyKzE3JTNBMjklM0EyMC43NTI2MzIlMkIwMCUzQTAw\",\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": \"itm_jMEjz0zwO0yGOusFaCnD\",\n            \"payroll\": \"pay_NTqYT28zV4YEIJVbA0wC\",\n            \"employee\": \"emp_veMl6MJVFFvTR4JRX5wa\",\n            \"status\": \"paid\",\n            \"void_of\": null,\n            \"voided_by\": null,\n            \"payment_method\": \"manual\",\n            \"supplemental_tax_calc_method\": \"aggregate\",\n            \"pto_balance_hours\": null,\n            \"sick_balance_hours\": null,\n            \"state_covid_sick_balance_hours\": null,\n            \"net_pay\": \"419.75\",\n            \"net_pay_split\": null,\n            \"earnings\": [\n                {\n                    \"amount\": \"400.00\",\n                    \"hours\": 20.0,\n                    \"type\": null,\n                    \"code\": null,\n                    \"description\": null,\n                    \"earning_code\": \"erc_tE4Sg1WMV59t7zaWNIj1\",\n                    \"earning_rate\": null,\n                    \"workplace\": \"wrk_5JNLdlXjcDJbRlwDDTOA\",\n                    \"metadata\": {}\n                },\n                {\n                    \"amount\": \"60.00\",\n                    \"hours\": 20.0,\n                    \"type\": null,\n                    \"code\": null,\n                    \"description\": null,\n                    \"earning_code\": \"erc_tJB4tLCYydrdPAH5PDQK\",\n                    \"earning_rate\": null,\n                    \"workplace\": \"wrk_5JNLdlXjcDJbRlwDDTOA\",\n                    \"metadata\": {}\n                }\n            ],\n            \"reimbursements\": [],\n            \"taxes\": [\n                {\n                    \"tax\": \"tax_ImvSF9CTuMdokf0uwx5x\",\n                    \"description\": \"Employer FICA Tax\",\n                    \"amount\": \"28.52\",\n                    \"payer\": \"company\",\n                    \"remittable\": true\n                },\n                {\n                    \"tax\": \"tax_u4DzMCYXAUL6OfcgPeyg\",\n                    \"description\": \"Federal Unemployment Tax\",\n                    \"amount\": \"2.76\",\n                    \"payer\": \"company\",\n                    \"remittable\": true\n                },\n            ],\n            \"benefits\": [],\n            \"benefit_overrides\": [],\n            \"post_tax_deductions\": [],\n          \t\"post_tax_deduction_overrides\": [],\n            \"warnings\": [],\n            \"paper_check_number\": null,\n            \"metadata\": {}\n        },\n        {\n            \"id\": \"itm_HbroZTha5C5uLM3kNZcX\",\n            \"payroll\": \"pay_jWQfb9BgKa5ZudfgCC7R\",\n            \"employee\": \"emp_veMl6MJVFFvTR4JRX5wa\",\n            \"status\": \"paid\",\n            \"void_of\": null,\n            \"voided_by\": null,\n            \"payment_method\": \"manual\",\n            \"supplemental_tax_calc_method\": \"aggregate\",\n            \"pto_balance_hours\": null,\n            \"sick_balance_hours\": null,\n            \"state_covid_sick_balance_hours\": null,\n            \"net_pay\": \"1367.09\",\n            \"net_pay_split\": null,\n            \"earnings\": [\n                {\n                    \"amount\": \"1200.00\",\n                    \"hours\": 20.0,\n                    \"type\": null,\n                    \"code\": null,\n                    \"description\": null,\n                    \"earning_code\": \"erc_tJB4tLCYydrdPAH5PDQK\",\n                    \"earning_rate\": null,\n                    \"workplace\": \"wrk_5JNLdlXjcDJbRlwDDTOA\",\n                    \"metadata\": {}\n                },\n                {\n                    \"amount\": \"500.00\",\n                    \"hours\": 20.0,\n                    \"type\": null,\n                    \"code\": null,\n                    \"description\": null,\n                    \"earning_code\": \"erc_tE4Sg1WMV59t7zaWNIj1\",\n                    \"earning_rate\": null,\n                    \"workplace\": \"wrk_5JNLdlXjcDJbRlwDDTOA\",\n                    \"metadata\": {}\n                }\n            ],\n            \"reimbursements\": [],\n            \"taxes\": [\n                {\n                    \"tax\": \"tax_ImvSF9CTuMdokf0uwx5x\",\n                    \"description\": \"Employer FICA Tax\",\n                    \"amount\": \"105.40\",\n                    \"payer\": \"company\",\n                    \"remittable\": true\n                },\n                {\n                    \"tax\": \"tax_u4DzMCYXAUL6OfcgPeyg\",\n                    \"description\": \"Federal Unemployment Tax\",\n                    \"amount\": \"10.20\",\n                    \"payer\": \"company\",\n                    \"remittable\": true\n                },\n            ],\n            \"benefits\": [],\n            \"benefit_overrides\": [],\n            \"post_tax_deductions\": [],\n            \"post_tax_deduction_overrides\": [],\n            \"warnings\": [],\n            \"paper_check_number\": null,\n            \"metadata\": {}\n        },\n      ]\n}"
      deprecated: false
    post:
      summary: Create a payroll item
      description: Creates a payroll item.
      operationId: create-a-payroll-item
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - payroll
                - employee
              properties:
                payroll:
                  type: string
                  description: The payroll ID associated with the payroll item.
                employee:
                  type: string
                  description: The employee ID associated with the payroll item.
                payment_method:
                  type: string
                  description: >-
                    May be `manual` or `direct_deposit` if the employee has a
                    linked bank account
                earnings:
                  type: array
                  description: >-
                    The set of earnings objects associated with the payroll
                    item.
                  items:
                    properties:
                      type:
                        type: string
                        description: >-
                          Type of earning. Can be one of the following earning
                          types in <a
                          href="https://docs.checkhq.com/reference/types-of-earnings">Types
                          of earnings</a>
                      workplace:
                        type: string
                        description: >-
                          ID of the workplace where work for this earning was
                          performed
                      earning_code:
                        type: string
                        description: >-
                          The earning code id which will be used to aggregate
                          earnings on the paystub
                      description:
                        type: string
                        description: >-
                          Readable description of the earning code that will
                          show up on the paystub
                      earning_rate:
                        type: string
                        description: >-
                          The earning rate id which will be used to calculate
                          the gross wage. Required if type is “piece”
                      amount:
                        type: string
                        description: >-
                          Amount earned for this earning<br><br>Must be greater
                          than 0
                      hours:
                        type: number
                        description: Number of hours worked for this earning
                        format: float
                      piece_units:
                        type: number
                        description: >-
                          Number of units of work produced. Required if type is
                          “piece”
                        format: float
                      metadata:
                        type: string
                        description: >-
                          Additional loosely structured information to associate
                          with the earning
                        format: json
                    required:
                      - workplace
                    type: object
                reimbursements:
                  type: array
                  description: >-
                    The set of non-taxable reimbursements objects associated
                    with the payroll item.
                  items:
                    properties:
                      amount:
                        type: string
                        description: Amount of reimbursement<br><br>Must be greater than 0
                      description:
                        type: string
                        description: >-
                          Description for the reimbursement that will show up on
                          the paystub
                      code:
                        type: string
                        description: >-
                          Unique code to identify the reimbursement that will be
                          used to aggregate reimbursements on the paystub.
                          Recommended to always be included to have explicit
                          groupings on the paystub.
                      metadata:
                        type: string
                        description: >-
                          Additional loosely structured information to associate
                          with the reimbursement
                        format: json
                    required:
                      - amount
                    type: object
                benefit_overrides:
                  type: array
                  description: >-
                    The set of benefit override objects associated with this
                    payroll item.
                  items:
                    properties:
                      benefit:
                        type: string
                        description: >-
                          ID of the employee benefit that is being overridden
                          for the payroll item
                      employee_contribution_amount:
                        type: string
                        description: >-
                          Updated employee contribution amount to use for this
                          payroll only
                      company_contribution_amount:
                        type: string
                        description: >-
                          Updated company contribution amount to use for this
                          payroll only
                    required:
                      - benefit
                    type: object
                post_tax_deduction_overrides:
                  type: array
                  description: >-
                    The set of post-tax deduction override objects associated
                    with this payroll item.
                  items:
                    properties:
                      post_tax_deduction:
                        type: string
                        description: >-
                          ID of the miscellaneous post-tax deduction that is
                          being overridden for the payroll item. Child support
                          post-tax deductions cannot be overriden
                      amount:
                        type: string
                        description: Updated deduction amount to use for this payroll only
                    required:
                      - post_tax_deduction
                      - amount
                    type: object
                pto_balance_hours:
                  type: number
                  description: >-
                    The employee's remaining PTO hour balance, for display on
                    the paystub
                  format: float
                sick_balance_hours:
                  type: number
                  description: >-
                    The employee's remaining sick hour balance, for display on
                    the paystub
                  format: float
                state_covid_sick_balance_hours:
                  type: number
                  description: >-
                    The employee's remaining sick hour balance from state COVID
                    relief bills, for display on the paystub. This field is
                    currently only applicable to California employers as per
                    [SB-95](https://leginfo.legislature.ca.gov/faces/billTextClient.xhtml?bill_id=202120220SB95).
                    When the requirement expires, this field will be removed in
                    a future API version
                  format: float
                supplemental_tax_calc_method:
                  type: string
                  description: >-
                    Controls the method used by Check to calculate tax on
                    supplemental earnings. May be `flat` or `aggregate`
                paper_check_number:
                  type: string
                  description: >-
                    For accounting. The check number associated with any printed
                    checks. Can be updated even after the associated payroll has
                    been approved. See [Get a paper
                    check](ref:get-a-paper-check) for more details.
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the payroll item.
                  format: json
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
  /payrolls/{payroll}/preview:
    get:
      summary: Preview a payroll
      description: Returns a preview of an approved version of the input payroll
      operationId: preview-payroll
      parameters:
        - name: payroll
          in: path
          description: ID of the payroll to preview.
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
        - name: item
          in: query
          description: >-
            ID of a payroll item to preview instead of the whole payroll.
            Multiple of this param may be passed to preview multiple items.
            *Please note that concurrent requests to this endpoint for the same
            payroll will complete sequentially.*
          schema:
            type: string
        - name: include_contractors
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "pay_Z26PNMC7Ky1wfFQzVqfF",
                      "company": "com_sx3svU6K8c5ZkSFlOh5p",
                      "period_start": "2019-06-16",
                      "period_end": "2019-06-29",
                      "approval_deadline": "2019-07-02T00:00:00.000000Z",
                      "approved_at": "2019-06-29T18:26:56.848920Z",
                      "payday": "2019-07-05",
                      "status": "paid",
                      "type": "regular",
                      "pay_frequency": "biweekly",
                      "funding_payment_method": "ach",
                      "processing_period": "four_day",
                      "off_cycle_options": null,
                      "managed": true,
                      "totals": {
                        "employee_gross": "961.54",
                        "employee_reimbursements": "0.00",
                        "employee_taxes": "249.23",
                        "employee_benefits": "0.00",
                        "post_tax_deductions": "0.00",
                        "employee_net": "712.31",
                        "contractor_gross": "100.00",
                        "contractor_reimbursements": "15.00",
                        "contractor_net": "115.00",
                        "company_taxes": "73.56",
                        "company_benefits": "0.00",
                        "liability": "1150.10",
                        "cash_requirement": "1150.10"
                      },
                      "items": [
                        {
                          "id": "itm_yvmmsVGFxLoBaMIkqzea",
                          "payroll": "pay_Z26PNMC7Ky1wfFQzVqfF",
                          "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                          "payment_method": "direct_deposit",
                          "net_pay": "712.31",
                          "earnings": [
                            {
                              "amount": "961.54",
                              "hours": 40.0,
                              "type": "regular",
                              "workplace": "wrk_cxcG4vjGKcSXZk1fgKai",
                              "code": null,
                              "description": null
                            }
                          ],
                          "reimbursements": [],
                          "taxes": [
                            {
                              "tax": "tax_I1Z9zqbBGWIbvlZpN2Vq",
                              "description": "New York SDI",
                              "amount": "0.60",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ImvSF9CTuMdokf0uwx5x",
                              "description": "Employer FICA Tax",
                              "amount": "59.62",
                              "payer": "company"
                            },
                            {
                              "tax": "tax_yjNkKk061BTipYv7G4Ti",
                              "description": "New York City Tax",
                              "amount": "31.04",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_S1krAkh75RzdWu5J53HA",
                              "description": "New York State Tax",
                              "amount": "44.20",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_UJrIQbtVErbdez0bYTVN",
                              "description": "New York Family Leave Benefits",
                              "amount": "1.47",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_1XHqR9Qf5t18SD2sfYEe",
                              "description": "Medicare",
                              "amount": "13.94",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_8L3JLfsH4X6dp0maBWfW",
                              "description": "Federal Income Tax",
                              "amount": "98.36",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ibU8cGhC5OlpOjoQFIXV",
                              "description": "FICA",
                              "amount": "59.62",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_O3f21hkS1cvHBZTa61BO",
                              "description": "Employer Medicare Tax",
                              "amount": "13.94",
                              "payer": "company"
                            }
                          ],
                          "benefits": [],
                          "benefit_overrides": [],
                          "post_tax_deductions": [],
                          "post_tax_deduction_overrides": [],
                          "warnings": []
                        }
                      ],
                      "contractor_payments": [
                        {
                          "contractor": "ctr_90QzaH9xPRI7JRLXnRoU",
                          "payment_method": "manual",
                          "amount": "100.00",
                          "reimbursement_amount": "15.00"
                        }
                      ],
                      "is_void": false,
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: pay_Z26PNMC7Ky1wfFQzVqfF
                  company:
                    type: string
                    example: com_sx3svU6K8c5ZkSFlOh5p
                  period_start:
                    type: string
                    example: '2019-06-16'
                  period_end:
                    type: string
                    example: '2019-06-29'
                  approval_deadline:
                    type: string
                    example: '2019-07-02T00:00:00.000000Z'
                  approved_at:
                    type: string
                    example: '2019-06-29T18:26:56.848920Z'
                  payday:
                    type: string
                    example: '2019-07-05'
                  status:
                    type: string
                    example: paid
                  type:
                    type: string
                    example: regular
                  pay_frequency:
                    type: string
                    example: biweekly
                  funding_payment_method:
                    type: string
                    example: ach
                  processing_period:
                    type: string
                    example: four_day
                  off_cycle_options: {}
                  managed:
                    type: boolean
                    example: true
                    default: true
                  totals:
                    type: object
                    properties:
                      employee_gross:
                        type: string
                        example: '961.54'
                      employee_reimbursements:
                        type: string
                        example: '0.00'
                      employee_taxes:
                        type: string
                        example: '249.23'
                      employee_benefits:
                        type: string
                        example: '0.00'
                      post_tax_deductions:
                        type: string
                        example: '0.00'
                      employee_net:
                        type: string
                        example: '712.31'
                      contractor_gross:
                        type: string
                        example: '100.00'
                      contractor_reimbursements:
                        type: string
                        example: '15.00'
                      contractor_net:
                        type: string
                        example: '115.00'
                      company_taxes:
                        type: string
                        example: '73.56'
                      company_benefits:
                        type: string
                        example: '0.00'
                      liability:
                        type: string
                        example: '1150.10'
                      cash_requirement:
                        type: string
                        example: '1150.10'
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: itm_yvmmsVGFxLoBaMIkqzea
                        payroll:
                          type: string
                          example: pay_Z26PNMC7Ky1wfFQzVqfF
                        employee:
                          type: string
                          example: emp_zGGp6wYcxAeu1Ng8IA7v
                        payment_method:
                          type: string
                          example: direct_deposit
                        net_pay:
                          type: string
                          example: '712.31'
                        earnings:
                          type: array
                          items:
                            type: object
                            properties:
                              amount:
                                type: string
                                example: '961.54'
                              hours:
                                type: integer
                                example: 40
                                default: 0
                              type:
                                type: string
                                example: regular
                              workplace:
                                type: string
                                example: wrk_cxcG4vjGKcSXZk1fgKai
                              code: {}
                              description: {}
                        reimbursements:
                          type: array
                        taxes:
                          type: array
                          items:
                            type: object
                            properties:
                              tax:
                                type: string
                                example: tax_I1Z9zqbBGWIbvlZpN2Vq
                              description:
                                type: string
                                example: New York SDI
                              amount:
                                type: string
                                example: '0.60'
                              payer:
                                type: string
                                example: employee
                        benefits:
                          type: array
                        benefit_overrides:
                          type: array
                        post_tax_deductions:
                          type: array
                        post_tax_deduction_overrides:
                          type: array
                        warnings:
                          type: array
                  contractor_payments:
                    type: array
                    items:
                      type: object
                      properties:
                        contractor:
                          type: string
                          example: ctr_90QzaH9xPRI7JRLXnRoU
                        payment_method:
                          type: string
                          example: manual
                        amount:
                          type: string
                          example: '100.00'
                        reimbursement_amount:
                          type: string
                          example: '15.00'
                  is_void:
                    type: boolean
                    example: false
                    default: true
                  metadata:
                    type: object
                    properties: {}
      deprecated: false
  /workplaces:
    post:
      summary: Create a workplace
      description: Creates a new workplace.
      operationId: create-a-workplace
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - company
                - address
              properties:
                company:
                  type: string
                  description: The company ID to associate with the workplace
                name:
                  type: string
                  description: The name for the workplace
                address:
                  type: object
                  required:
                    - line1
                    - city
                    - state
                    - postal_code
                  properties:
                    line1:
                      type: string
                      description: Street address or PO Box
                    line2:
                      type: string
                      description: Apartment, suite, unit, or building
                    city:
                      type: string
                      description: City, district, suburb, town, or village
                    state:
                      type: string
                      description: 2-digit state code
                    postal_code:
                      type: string
                      description: 5-digit postal code or zip code
                    country:
                      type: string
                      description: Read only.
                      default: US
                active:
                  type: boolean
                  description: >-
                    Indicates whether the workplace can be associated with an
                    employee for payroll
                  default: true
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the workplace
                  format: json
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "wrk_oRgjEaRycoCPuS5TqVkm",
                      "name": "New York Office",
                      "address": {
                        "line1": "200 Park Ave",
                        "line2": null,
                        "city": "New York",
                        "state": "NY",
                        "postal_code": "10166",
                        "country": "US"
                      },
                      "company": "com_P7JPeBhb8hH23iiReDQ5",
                      "active": true,
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: wrk_oRgjEaRycoCPuS5TqVkm
                  name:
                    type: string
                    example: New York Office
                  address:
                    type: object
                    properties:
                      line1:
                        type: string
                        example: 200 Park Ave
                      line2: {}
                      city:
                        type: string
                        example: New York
                      state:
                        type: string
                        example: NY
                      postal_code:
                        type: string
                        example: '10166'
                      country:
                        type: string
                        example: US
                  company:
                    type: string
                    example: com_P7JPeBhb8hH23iiReDQ5
                  active:
                    type: boolean
                    example: true
                    default: true
                  metadata:
                    type: object
                    properties: {}
      deprecated: false
    get:
      summary: List workplaces
      description: Returns a list of workplaces.
      operationId: list-workplaces
      parameters:
        - name: company
          in: query
          description: Return workplaces for this company ID.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of workplaces returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n\t{\n  \"id\": \"wrk_oRgjEaRycoCPuS5TqVkm\",\n  \"name\": \"New York Office\",\n  \"address\": {\n    \"line1\": \"200 Park Ave\",\n    \"line2\": null,\n    \"city\": \"New York\",\n    \"state\": \"NY\",\n    \"postal_code\": \"10166\",\n    \"country\": \"US\"\n  },\n  \"company\": \"com_P7JPeBhb8hH23iiReDQ5\",\n  \"active\": true,\n  \"metadata\": {}\n\t}\n]"
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: wrk_oRgjEaRycoCPuS5TqVkm
                    name:
                      type: string
                      example: New York Office
                    address:
                      type: object
                      properties:
                        line1:
                          type: string
                          example: 200 Park Ave
                        line2: {}
                        city:
                          type: string
                          example: New York
                        state:
                          type: string
                          example: NY
                        postal_code:
                          type: string
                          example: '10166'
                        country:
                          type: string
                          example: US
                    company:
                      type: string
                      example: com_P7JPeBhb8hH23iiReDQ5
                    active:
                      type: boolean
                      example: true
                      default: true
                    metadata:
                      type: object
                      properties: {}
      deprecated: false
  /workplaces/{workplace}:
    patch:
      summary: Update a workplace
      description: Updates the specified workplace.
      operationId: update-a-workplace
      parameters:
        - name: workplace
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: Company ID to associate with the workplace.
                name:
                  type: string
                  description: Name for the workplace.
                address:
                  type: object
                  required:
                    - line1
                    - city
                    - state
                    - postal_code
                  properties:
                    line1:
                      type: string
                      description: Street address or PO Box
                    line2:
                      type: string
                      description: Apartment, suite, unit, or building
                    city:
                      type: string
                      description: City, district, suburb, town, or village
                    state:
                      type: string
                      description: 2-digit state code
                    postal_code:
                      type: string
                      description: 5-digit postal code or zip code
                    country:
                      type: string
                      description: Read only.
                      default: US
                active:
                  type: boolean
                  description: >-
                    Indicates whether the workplace can be associated with an
                    employee for payroll
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the workplace
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                      "id": "wrk_oRgjEaRycoCPuS5TqVkm",
                      "name": "New York Office",
                      "address": {
                        "line1": "200 Park Ave",
                        "line2": null,
                        "city": "New York",
                        "state": "NY",
                        "postal_code": "10166",
                        "country": "US"
                      },
                      "company": "com_P7JPeBhb8hH23iiReDQ5",
                      "active": true,
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: wrk_oRgjEaRycoCPuS5TqVkm
                  name:
                    type: string
                    example: New York Office
                  address:
                    type: object
                    properties:
                      line1:
                        type: string
                        example: 200 Park Ave
                      line2: {}
                      city:
                        type: string
                        example: New York
                      state:
                        type: string
                        example: NY
                      postal_code:
                        type: string
                        example: '10166'
                      country:
                        type: string
                        example: US
                  company:
                    type: string
                    example: com_P7JPeBhb8hH23iiReDQ5
                  active:
                    type: boolean
                    example: true
                    default: true
                  metadata:
                    type: object
                    properties: {}
      deprecated: false
    get:
      summary: Get a workplace
      description: Returns the specified workplace.
      operationId: get-a-workplace
      parameters:
        - name: workplace
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "wrk_oRgjEaRycoCPuS5TqVkm",
                      "name": "New York Office",
                      "address": {
                        "line1": "200 Park Ave",
                        "line2": null,
                        "city": "New York",
                        "state": "NY",
                        "postal_code": "10166",
                        "country": "US"
                      },
                      "company": "com_P7JPeBhb8hH23iiReDQ5",
                      "active": true,
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: wrk_oRgjEaRycoCPuS5TqVkm
                  name:
                    type: string
                    example: New York Office
                  address:
                    type: object
                    properties:
                      line1:
                        type: string
                        example: 200 Park Ave
                      line2: {}
                      city:
                        type: string
                        example: New York
                      state:
                        type: string
                        example: NY
                      postal_code:
                        type: string
                        example: '10166'
                      country:
                        type: string
                        example: US
                  company:
                    type: string
                    example: com_P7JPeBhb8hH23iiReDQ5
                  active:
                    type: boolean
                    example: true
                    default: true
                  metadata:
                    type: object
                    properties: {}
      deprecated: false
  /payrolls/{payroll}/approve:
    post:
      summary: Approve a payroll
      description: Approves a payroll.
      operationId: approve-payroll
      parameters:
        - name: payroll
          in: path
          schema:
            type: string
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
  /payrolls/{payroll}/reopen:
    post:
      summary: Reopen a pending payroll
      description: >-
        Moves a pending payroll's status to draft, allowing you to make further
        edits to the payroll or its items. 


        **Note: **To pay someone by direct deposit on the payroll's payday, the
        payroll, whether new or reopened, must be approved by 5 PM PT of the
        approval deadline. Late payrolls or requests for adjustment after this
        deadline will require manual escalation with Check.
      operationId: reopen-payroll
      parameters:
        - name: payroll
          in: path
          description: ID of the payroll to reopen
          schema:
            type: string
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
  /employees/{employee}/paystubs:
    get:
      summary: List employee paystubs
      description: Returns a list of paystubs for the specified employee.
      operationId: get-an-employees-paystubs
      parameters:
        - name: employee
          in: path
          description: Return paystubs for this employee ID
          schema:
            type: string
          required: true
        - name: payroll
          in: query
          description: Return the paystub for this payroll ID.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of paystubs returned per page
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: >-
            Filters to only show paystubs for payrolls with the specified
            status.  If multiple `status` params are provided, paystubs with any
            of the statuses will be returned.  Accepted values are `pending`,
            `processing`, `failed`, or `paid`.
          schema:
            type: string
        - name: start
          in: query
          description: >-
            Return paystubs from payrolls with a payday on or after this date
            (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - name: end
          in: query
          description: >-
            Return paystubs from payrolls with a payday on or before this date
            (YYYY-MM-DD)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "payroll": "pay_xUNanwDkP1o8TE6qC77L",
                          "payday": "2021-04-26",
                          "period_start": "2021-03-20",
                          "period_end": "2021-04-02",
                          "company": {
                            "trade_name": null,
                            "legal_name": "Stark Industries",
                            "address": {
                              "line1": "4954 Berkeley Run Crossing",
                              "line2": null,
                              "city": "Norcross",
                              "state": "GA",
                              "postal_code": "30092",
                              "country": "US"
                            },
                            "phone": "2067138013"
                          },
                          "void_of": null,
                          "voided_by": null,
                          "employee": {
                            "first_name": "Tony",
                            "middle_name": null,
                            "last_name": "Stark",
                            "residence": {
                              "line1": "4954 Berkeley Run Crossing",
                              "line2": null,
                              "city": "Norcross",
                              "state": "GA",
                              "postal_code": "30092",
                              "country": "US"
                            },
                            "ssn_last_four": null
                          },
                          "earnings": [
                            {
                              "type": "hourly",
                              "code": null,
                              "earning_code": null,
                              "amount": "300.00",
                              "amount_ytd": "300.00",
                              "hours": 40.0,
                              "hours_ytd": 40.0,
                              "name": "Hourly (Regular)",
                              "current_earnings": [
                                {
                                  "description": "Work on day 1",
                                  "amount": "300.00",
                                  "hours": 40.0,
                                  "workplace": "wrk_mhHjtmJh6TBSuhTXpMcp",
                                  "rate": "7.500"
                                }
                              ]
                            },
                            {
                              "type": "bonus",
                              "code": null,
                              "earning_code": null,
                              "amount": "100.00",
                              "amount_ytd": "100.00",
                              "hours": null,
                              "hours_ytd": null,
                              "name": "Bonus",
                              "current_earnings": [
                                {
                                  "description": "Work on day 2",
                                  "amount": "100.00",
                                  "hours": null,
                                  "workplace": "wrk_mhHjtmJh6TBSuhTXpMcp",
                                  "rate": null
                                }
                              ]
                            }
                          ],
                          "reimbursements": [
                            
                          ],
                          "employee_taxes": [
                            {
                              "amount": "24.80",
                              "amount_ytd": "24.80",
                              "description": "FICA"
                            },
                            {
                              "amount": "27.87",
                              "amount_ytd": "27.87",
                              "description": "Federal Income Tax"
                            },
                            {
                              "amount": "5.80",
                              "amount_ytd": "5.80",
                              "description": "Medicare"
                            },
                            {
                              "amount": "10.85",
                              "amount_ytd": "10.85",
                              "description": "Georgia State Tax"
                            }
                          ],
                          "company_taxes": [
                            {
                              "amount": "24.80",
                              "amount_ytd": "24.80",
                              "description": "Employer FICA Tax"
                            },
                            {
                              "amount": "2.40",
                              "amount_ytd": "2.40",
                              "description": "Federal Unemployment Tax"
                            },
                            {
                              "amount": "5.80",
                              "amount_ytd": "5.80",
                              "description": "Employer Medicare Tax"
                            },
                            {
                              "amount": "10.80",
                              "amount_ytd": "10.80",
                              "description": "Georgia State Unemployment Tax"
                            },
                            {
                              "amount": "0.24",
                              "amount_ytd": "0.24",
                              "description": "Georgia Administrative Assessment Tax"
                            }
                          ],
                          "employee_benefit_contributions": [
                            
                          ],
                          "company_benefit_contributions": [
                            
                          ],
                          "post_tax_deductions": [
                            
                          ],
                          "summary": {
                            "earnings": "400.00",
                            "earnings_ytd": "400.00",
                            "reimbursements": "0.00",
                            "reimbursements_ytd": "0.00",
                            "employee_taxes": "69.32",
                            "employee_taxes_ytd": "69.32",
                            "company_taxes": "44.04",
                            "company_taxes_ytd": "44.04",
                            "employee_benefit_contributions": "0.00",
                            "employee_benefit_contributions_ytd": "0.00",
                            "company_benefit_contributions": "0.00",
                            "company_benefit_contributions_ytd": "0.00",
                            "post_tax_deductions": "0.00",
                            "post_tax_deductions_ytd": "0.00",
                            "net_pay": "330.68",
                            "net_pay_ytd": "330.68"
                          },
                          "time_off_balances": {
                            "pto_balance_hours": null,
                            "sick_balance_hours": null,
                            "state_covid_sick_balance_hours": null
                          }
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        payroll:
                          type: string
                          example: pay_xUNanwDkP1o8TE6qC77L
                        payday:
                          type: string
                          example: '2021-04-26'
                        period_start:
                          type: string
                          example: '2021-03-20'
                        period_end:
                          type: string
                          example: '2021-04-02'
                        company:
                          type: object
                          properties:
                            trade_name: {}
                            legal_name:
                              type: string
                              example: Stark Industries
                            address:
                              type: object
                              properties:
                                line1:
                                  type: string
                                  example: 4954 Berkeley Run Crossing
                                line2: {}
                                city:
                                  type: string
                                  example: Norcross
                                state:
                                  type: string
                                  example: GA
                                postal_code:
                                  type: string
                                  example: '30092'
                                country:
                                  type: string
                                  example: US
                            phone:
                              type: string
                              example: '2067138013'
                        void_of: {}
                        voided_by: {}
                        employee:
                          type: object
                          properties:
                            first_name:
                              type: string
                              example: Tony
                            middle_name: {}
                            last_name:
                              type: string
                              example: Stark
                            residence:
                              type: object
                              properties:
                                line1:
                                  type: string
                                  example: 4954 Berkeley Run Crossing
                                line2: {}
                                city:
                                  type: string
                                  example: Norcross
                                state:
                                  type: string
                                  example: GA
                                postal_code:
                                  type: string
                                  example: '30092'
                                country:
                                  type: string
                                  example: US
                            ssn_last_four: {}
                        earnings:
                          type: array
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                example: hourly
                              code: {}
                              earning_code: {}
                              amount:
                                type: string
                                example: '300.00'
                              amount_ytd:
                                type: string
                                example: '300.00'
                              hours:
                                type: integer
                                example: 40
                                default: 0
                              hours_ytd:
                                type: integer
                                example: 40
                                default: 0
                              name:
                                type: string
                                example: Hourly (Regular)
                              current_earnings:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    description:
                                      type: string
                                      example: Work on day 1
                                    amount:
                                      type: string
                                      example: '300.00'
                                    hours:
                                      type: integer
                                      example: 40
                                      default: 0
                                    workplace:
                                      type: string
                                      example: wrk_mhHjtmJh6TBSuhTXpMcp
                                    rate:
                                      type: string
                                      example: '7.500'
                        reimbursements:
                          type: array
                        employee_taxes:
                          type: array
                          items:
                            type: object
                            properties:
                              amount:
                                type: string
                                example: '24.80'
                              amount_ytd:
                                type: string
                                example: '24.80'
                              description:
                                type: string
                                example: FICA
                        company_taxes:
                          type: array
                          items:
                            type: object
                            properties:
                              amount:
                                type: string
                                example: '24.80'
                              amount_ytd:
                                type: string
                                example: '24.80'
                              description:
                                type: string
                                example: Employer FICA Tax
                        employee_benefit_contributions:
                          type: array
                        company_benefit_contributions:
                          type: array
                        post_tax_deductions:
                          type: array
                        summary:
                          type: object
                          properties:
                            earnings:
                              type: string
                              example: '400.00'
                            earnings_ytd:
                              type: string
                              example: '400.00'
                            reimbursements:
                              type: string
                              example: '0.00'
                            reimbursements_ytd:
                              type: string
                              example: '0.00'
                            employee_taxes:
                              type: string
                              example: '69.32'
                            employee_taxes_ytd:
                              type: string
                              example: '69.32'
                            company_taxes:
                              type: string
                              example: '44.04'
                            company_taxes_ytd:
                              type: string
                              example: '44.04'
                            employee_benefit_contributions:
                              type: string
                              example: '0.00'
                            employee_benefit_contributions_ytd:
                              type: string
                              example: '0.00'
                            company_benefit_contributions:
                              type: string
                              example: '0.00'
                            company_benefit_contributions_ytd:
                              type: string
                              example: '0.00'
                            post_tax_deductions:
                              type: string
                              example: '0.00'
                            post_tax_deductions_ytd:
                              type: string
                              example: '0.00'
                            net_pay:
                              type: string
                              example: '330.68'
                            net_pay_ytd:
                              type: string
                              example: '330.68'
                        time_off_balances:
                          type: object
                          properties:
                            pto_balance_hours: {}
                            sick_balance_hours: {}
                            state_covid_sick_balance_hours: {}
      deprecated: false
  /post_tax_deductions:
    post:
      summary: Create a post-tax deduction
      description: Creates a post-tax deduction.
      operationId: create-a-post-tax-deduction
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - type
                - employee
                - description
                - effective_start
              properties:
                type:
                  type: string
                  description: >-
                    The type of post-tax deduction. May be miscellaneous or
                    child_support.
                employee:
                  type: string
                  description: >-
                    ID of the employee to be associated with the post-tax
                    deduction.
                description:
                  type: string
                  description: >-
                    A description of this deduction. Maximum length of 255
                    characters.
                effective_start:
                  type: string
                  description: Start date for the deduction
                  format: date
                effective_end:
                  type: string
                  description: End date for the deduction
                  format: date
                miscellaneous:
                  type: object
                  description: >-
                    The configuration object for a miscellaneous post-tax
                    deduction
                  properties:
                    total_amount:
                      type: string
                      description: Total amount that should ever be withheld
                    amount:
                      type: string
                      description: Amount that should be withheld per pay period
                    percent:
                      type: number
                      description: >-
                        Percentage of wages that should be withheld per pay
                        period.
                      format: float
                    annual_limit:
                      type: string
                      description: Total amount that should be withheld for a calendar year
                child_support:
                  type: object
                  description: The configuration object for a child support garnishment
                  required:
                    - external_id
                    - agency
                    - issue_date
                    - amount
                    - max_percent
                  properties:
                    external_id:
                      type: string
                      description: >-
                        The unique identifier of the garnishment order, listed
                        as the case number on the order
                    agency:
                      type: string
                      description: >-
                        The state abbreviation of the agency that issued the
                        order
                    fips_code:
                      type: string
                      description: >-
                        An optional 5 or 7 digit number used to identify the
                        correct agency within the state. This should be provided
                        if present in the order. Auto-populated if required but
                        not set.
                    issue_date:
                      type: string
                      description: The date the collections agency issued the order
                      format: date
                    amount:
                      type: string
                      description: Per pay period amount to deduct
                    max_percent:
                      type: number
                      description: >-
                        The maximum percent of disposable income that can be
                        deducted
                      format: float
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the post-tax deduction
                  format: json
                managed:
                  type: boolean
                  description: >-
                    Denotes whether or not the post-tax deduction should be
                    remitted by Check. Applicable to child support payments
                    only, more info can be found
                    [here](https://docs.checkhq.com/docs/post-tax-deductions#remitting-child-support-garnishments).
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    get:
      summary: List post-tax deductions
      description: Lists post-tax deductions.
      operationId: list-post-tax-deductions
      parameters:
        - name: employee
          in: query
          description: Return post-tax deductions for this employee ID.
          schema:
            type: string
        - name: company
          in: query
          description: Return post-tax deductions for all employees of this company ID.
          schema:
            type: string
        - name: limit
          in: query
          description: >-
            Number of post-tax deductions returned per page. Note: this does not
            override standard pagination.
          schema:
            type: integer
            format: int32
        - name: include_external
          in: query
          description: >-
            Flag to indicate if to additionally expose external deductions in
            the list response. Defaults to false if not included
          schema:
            type: boolean
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /post_tax_deductions/{post_tax_deduction}:
    patch:
      summary: Update a post-tax deduction
      description: Updates the specified post-tax deduction.
      operationId: update-a-post-tax-deduction
      parameters:
        - name: post_tax_deduction
          in: path
          description: ID of the post tax deduction to update
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: >-
                    A description of this deduction. Maximum length of 255
                    characters.
                effective_start:
                  type: string
                  description: Start date of the post-tax deduction.
                  format: date
                effective_end:
                  type: string
                  description: End date of the post-tax deduction.
                  format: date
                miscellaneous:
                  type: object
                  properties:
                    total_amount:
                      type: string
                      description: Total amount that should ever be withheld
                    amount:
                      type: string
                      description: Amount that should be withheld per pay period
                    percent:
                      type: number
                      description: >-
                        Percentage of wages that should be withheld per pay
                        period.
                      format: float
                    annual_limit:
                      type: string
                      description: Total amount that should be withheld for a calendar year
                child_support:
                  type: object
                  properties:
                    external_id:
                      type: string
                      description: The unique identifier of the order
                    agency:
                      type: string
                      description: >-
                        The state abbreviation of the agency that issued the
                        order
                    fips_code:
                      type: string
                      description: >-
                        An optional 5 or 7 digit number used to identify the
                        correct agency within the state. This should be provided
                        if present in the order.
                    issue_date:
                      type: string
                      description: The date the collections agency issued the order
                      format: date
                    amount:
                      type: string
                      description: Per pay period amount to deduct
                    max_percent:
                      type: number
                      description: >-
                        The maximum percent of disposable income that can be
                        deducted
                      format: float
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the post-tax deduction
                  format: json
                managed:
                  type: boolean
                  description: >-
                    Denotes whether or not the post-tax deduction should be
                    remitted by Check. Applicable to child support payments
                    only, more info can be found
                    [here](https://docs.checkhq.com/docs/post-tax-deductions#remitting-child-support-garnishments).
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    get:
      summary: Get a post-tax deduction
      description: Returns a post-tax deduction.
      operationId: get-a-post-tax-deduction
      parameters:
        - name: post_tax_deduction
          in: path
          description: ID of the post-tax deduction to return.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    delete:
      summary: Delete a post-tax deduction
      description: Deletes the specified post-tax deduction.
      operationId: delete-a-post-tax-deduction
      parameters:
        - name: post_tax_deduction
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/company_tax_documents/{document}/download:
    get:
      summary: Download a company tax document
      description: Returns the binary data for a PDF of the specified company document.
      operationId: download-a-company-tax-document
      parameters:
        - name: document
          in: path
          description: ID of the document to download
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: application/pdf
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/company_tax_documents:
    get:
      summary: List company tax documents
      description: Returns a list of company tax documents.
      operationId: list-company-tax-documents
      parameters:
        - name: company
          in: query
          description: Return tax documents for this company ID
          schema:
            type: string
        - name: year
          in: query
          description: >-
            Return tax documents for this year (must be greater than or equal to
            `2019`)
          schema:
            type: integer
            format: int32
        - name: quarter
          in: query
          description: >-
            Return tax documents for this quarter (accepted values are `q1`,
            `q2`, `q3`, or `q4`)
          schema:
            type: string
        - name: limit
          in: query
          description: Number of tax documents returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": "https://api.checkhq.com/documents/company_tax_documents?cursor=cD0lNUIlMjIyMDI0LTA3LTI2KzE2JTNBMTAlM0EwMy44OTY5ODclMkIwMCUzQTAwJTIyJTJDKyUyMjQwNTk4MSUyMiU1RA%3D%3D",
                        "previous": null,
                        "results": [
                            {
                                "id": "doc_XL5gEd90wjwh2b3U6ICU",
                                "company": "com_EkKTRETE3zl8CffWF2iW",
                                "category": "company_tax_document",
                                "label": "Form UCT-101",
                                "description": "Form UCT-101 is the quarterly Unemployment contribution return for Wisconsin.",
                                "jurisdiction": "WI",
                                "year": 2024,
                                "quarter": "q2",
                                "filed_on": "2024-07-26"
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  next:
                    type: string
                    example: >-
                      https://api.checkhq.com/documents/company_tax_documents?cursor=cD0lNUIlMjIyMDI0LTA3LTI2KzE2JTNBMTAlM0EwMy44OTY5ODclMkIwMCUzQTAwJTIyJTJDKyUyMjQwNTk4MSUyMiU1RA%3D%3D
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: doc_XL5gEd90wjwh2b3U6ICU
                        company:
                          type: string
                          example: com_EkKTRETE3zl8CffWF2iW
                        category:
                          type: string
                          example: company_tax_document
                        label:
                          type: string
                          example: Form UCT-101
                        description:
                          type: string
                          example: >-
                            Form UCT-101 is the quarterly Unemployment
                            contribution return for Wisconsin.
                        jurisdiction:
                          type: string
                          example: WI
                        year:
                          type: integer
                          example: 2024
                          default: 0
                        quarter:
                          type: string
                          example: q2
                        filed_on:
                          type: string
                          example: '2024-07-26'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /bank_accounts:
    post:
      summary: Create a bank account
      description: >-
        Defines a bank account, and associates it with an existing company,
        contractor, or employee.


        One of `employee`, `company`, or `contractor` is required.
      operationId: create-a-bank-account
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employee:
                  type: string
                  description: ID of the [employee](ref:the-employee-object) on the account
                company:
                  type: string
                  description: ID of the [company](ref:company) on the account
                contractor:
                  type: string
                  description: >-
                    ID of the [contractor](ref:the-contractor-object) on the
                    account
                raw_bank_account:
                  type: object
                  required:
                    - account_number
                    - routing_number
                    - subtype
                  properties:
                    account_number:
                      type: string
                      description: The account’s account number
                    routing_number:
                      type: string
                      description: The account’s routing number
                    institution_name:
                      type: string
                      description: The name of the bank holding the account
                    subtype:
                      type: string
                      description: >-
                        The account’s subtype. Values may be `checking` or
                        `savings`
                plaid_bank_account:
                  type: object
                  required:
                    - plaid_processor_token
                  properties:
                    plaid_processor_token:
                      type: string
                      description: A Check processor token retrieved from the Plaid API
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    this bank account
                  format: json
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    get:
      summary: List bank accounts
      description: Lists all bank accounts.
      operationId: list-bank-accounts
      parameters:
        - name: company
          in: query
          description: Return bank accounts for this [company](ref:company) ID.
          schema:
            type: string
        - name: employee
          in: query
          description: >-
            Return bank accounts for this [employee](ref:the-employee-object)
            ID.
          schema:
            type: string
        - name: contractor
          in: query
          description: >-
            Return bank accounts for this
            [contractor](ref:the-contractor-object) ID.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of bank accounts returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n\t{\n    \"id\": \"bnk_abc\",\n    \"employee\": \"emp_xyz\",\n    \"raw_bank_account\": {\n      \"institution_name\": \"Chase\",\n      \"account_number\": \"112233445\",\n      \"routing_number\": \"011401533\",\n      \"subtype\": \"checking\"\n    },\n    \"metadata\": {}\n\t}\n]"
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: bnk_abc
                    employee:
                      type: string
                      example: emp_xyz
                    raw_bank_account:
                      type: object
                      properties:
                        institution_name:
                          type: string
                          example: Chase
                        account_number:
                          type: string
                          example: '112233445'
                        routing_number:
                          type: string
                          example: '011401533'
                        subtype:
                          type: string
                          example: checking
                    metadata:
                      type: object
                      properties: {}
      deprecated: false
  /bank_accounts/{bank_account}:
    patch:
      summary: Update a bank account
      description: >-
        Updates a bank account.


        **Note: **Only “raw” bank accounts may be updated with this call. Plaid
        processor token-based bank accounts may not be updated.
      operationId: update-a-bank-account
      parameters:
        - name: bank_account
          in: path
          description: ID of the bank account
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - raw_bank_account
              properties:
                raw_bank_account:
                  type: object
                  required:
                    - account_number
                    - routing_number
                    - subtype
                  properties:
                    account_number:
                      type: string
                      description: The account’s account number
                    routing_number:
                      type: string
                      description: The account’s routing number
                    institution_name:
                      type: string
                      description: The name of the bank holding the account
                    subtype:
                      type: string
                      description: >-
                        The account’s subtype. Values may be `checking` or
                        `savings`
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    this bank account
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    get:
      summary: Get a bank account
      description: Returns the specified bank account.
      operationId: get-a-bank-account
      parameters:
        - name: bank_account
          in: path
          description: ID for the bank account to return
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "bnk_abc",
                      "employee": "emp_xyz",
                      "raw_bank_account": {
                        "institution_name": "Chase",
                        "account_number": "112233445",
                        "routing_number": "011401533",
                        "subtype": "checking"
                      },
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: bnk_abc
                  employee:
                    type: string
                    example: emp_xyz
                  raw_bank_account:
                    type: object
                    properties:
                      institution_name:
                        type: string
                        example: Chase
                      account_number:
                        type: string
                        example: '112233445'
                      routing_number:
                        type: string
                        example: '011401533'
                      subtype:
                        type: string
                        example: checking
                  metadata:
                    type: object
                    properties: {}
      deprecated: false
    delete:
      summary: Delete a bank account
      description: Deletes the specified bank account.
      operationId: delete-a-bank-account
      parameters:
        - name: bank_account
          in: path
          description: ID of the bank account to delete
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
  /documents/company_authorization_documents:
    get:
      summary: List company authorization documents
      description: Returns a list of company authorization documents.
      operationId: list-company-authorization-documents
      parameters:
        - name: company
          in: query
          description: Return authorization documents for this company ID
          schema:
            type: string
        - name: year
          in: query
          description: >-
            Return documents for this year (must be greater than or equal to
            `2019`)
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of authorization documents returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/employee_tax_documents:
    get:
      summary: List employee tax documents
      description: Returns a list of employee tax documents.
      operationId: list-employee-tax-documents
      parameters:
        - name: employee
          in: query
          description: Return tax documents for this employee ID
          schema:
            type: string
        - name: company
          in: query
          description: Return tax documents for this company ID
          schema:
            type: string
        - name: year
          in: query
          description: >-
            List documents for this year (must be greater than or equal to
            `2019`)
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of tax documents returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": "https://api.checkhq.com/documents/employee_tax_documents?cursor=cD0lNUIlMjIyMDI0LTA1LTA5KzIzJTNBNTIlM0ExOC42NzY3NzUlMkIwMCUzQTAwJTIyJTJDKyUyMjQwMzA5OCUyMiU1RA%3D%3D",
                        "previous": null,
                        "results": [
                            {
                                "id": "doc_hQhfyxTf2aMXDfQ82Dly",
                                "employee": "emp_blSYc67D0Q4qk6lx15qR",
                                "category": "employee_tax_document",
                                "label": "California DE-4",
                                "jurisdiction": "CA",
                                "year": 2024,
                                "filed_on": "2024-07-18"
                            },
                            ...
                        ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/company_authorization_documents/{document}/download:
    get:
      summary: Download a company authorization document
      description: >-
        Returns the binary data for a PDF of the specified company authorization
        document.
      operationId: download-a-company-authorization-document
      parameters:
        - name: document
          in: path
          description: ID of the document to download
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: application/pdf
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/employee_tax_documents/{document}/download:
    get:
      summary: Download an employee tax document
      description: >-
        Returns the binary data for a PDF of the specified employee tax
        document.
      operationId: download-an-employee-tax-document
      parameters:
        - name: document
          in: path
          description: ID of the document to download
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: application/pdf
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /webhook_configs/{webhook_config}:
    get:
      summary: Get a webhook config
      description: Returns the specified webhook config.
      operationId: get-a-webhook-config
      parameters:
        - name: webhook_config
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "whc_7uCODm8JFmZyov9jL8QO",
                      "url": "http://3385edbc219e.ngrok.io",
                      "key": "2bfce877d2e64ea6a8dd45ffb2ce897eb4d97485"
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: whc_7uCODm8JFmZyov9jL8QO
                  url:
                    type: string
                    example: http://3385edbc219e.ngrok.io
                  key:
                    type: string
                    example: 2bfce877d2e64ea6a8dd45ffb2ce897eb4d97485
      deprecated: false
    patch:
      summary: Update a webhook config
      description: Updates the specified webhook config.
      operationId: update-a-webhook-config
      parameters:
        - name: webhook_config
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    delete:
      summary: Delete a webhook config
      description: Deletes the specified webhook config.
      operationId: delete-a-webhook-config
      parameters:
        - name: webhook_config
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
  /webhook_configs:
    post:
      summary: Create a webhook config
      description: Creates a webhook config.
      operationId: create-a-webhook-config
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
    get:
      summary: List webhook configs
      description: Returns a list of webhook configs.
      operationId: list-a-webhook-config
      parameters:
        - name: limit
          in: query
          description: Number of webhook configs returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "id": "whc_7uCODm8JFmZyov9jL8QO",
                        "url": "http://3385edbc219e.ngrok.io",
                        "key": "2bfce877d2e64ea6a8dd45ffb2ce897eb4d97485"
                      }
                    ]
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: whc_7uCODm8JFmZyov9jL8QO
                    url:
                      type: string
                      example: http://3385edbc219e.ngrok.io
                    key:
                      type: string
                      example: 2bfce877d2e64ea6a8dd45ffb2ce897eb4d97485
      deprecated: false
  /contractors/{contractor}:
    get:
      summary: Get a contractor
      description: Returns the specified contractor.
      operationId: get-a-contractor
      parameters:
        - name: contractor
          in: path
          description: ID of the contractor to return
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"id\": \"ctr_CyQIKSp6YvU6mBe2a6iq\",\n    \"type\": \"individual\",\n    \"company\": \"com_EkIJ9RewumnQLODHv1vl\",\n    \"workplaces\": [\n        \"wrk_ZquJLY48hvpLDSTT6JBn\"\n    ],\n    \"primary_workplace\": \"wrk_ZquJLY48hvpLDSTT6JBn\",\n    \"first_name\": \"Bruce\",\n    \"middle_name\": \"Frederick Joseph\",\n    \"last_name\": \"Springsteen\",\n    \"business_name\": null,\n    \"dob\": \"1970-05-29\",\n    \"start_date\": \"2019-03-01\",\n    \"email\": \"theboss@springsteen.com\",\n    \"bank_accounts\": [\"bnk_rLXONRICxgyyeUaS16\"],\n    \"ssn_last_four\": \"0000\",\n    \"ein\": null,\n    \"payment_method_preference\": null,\n    \"onboard\": {\n        \"status\": \"needs_attention\",\n        \"blocking_steps\": [],\n        \"remaining_steps\": [\n            \"payment_method\"\n        ],\n        \"payment_method\": [\n            \"payment_method_preference_set\",\n            \"bank_account_exists\",\n            \"bank_account_verified\",\n        ],\n    },\n    \"address\": {\n        \"line1\": \"913 Ocean Ave\",\n        \"line2\": null,\n        \"city\": \"Asbury Park\",\n        \"state\": \"NJ\",\n        \"postal_code\": \"07712\",\n        \"country\": \"US\"\n    },\n    \"1099_nec_electronic_consent_provided\": false,\n  \t\"metadata\": {}\n}"
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update a contractor
      description: Updates the specified contractor.
      operationId: update-a-contractor
      parameters:
        - name: contractor
          in: path
          description: ID of the contractor to update
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: >-
                    If the contractor is a person set to "individual", otherwise
                    set to "business".
                first_name:
                  type: string
                  description: Contractor's first name
                middle_name:
                  type: string
                  description: Contractor's middle name
                last_name:
                  type: string
                  description: Contractor's last name
                business_name:
                  type: string
                  description: Contractor's business name if they are a business
                dob:
                  type: string
                  description: Contractor's date of birth
                  format: date
                start_date:
                  type: string
                  description: Most recent start date of contract
                  format: date
                termination_date:
                  type: string
                  description: >-
                    Most recent termination date of contract. Will be set to
                    null if a more recent start date is set.
                  format: date
                workplaces:
                  type: array
                  description: IDs of workplaces where the contractor works
                  items:
                    type: string
                primary_workplace:
                  type: string
                  description: The Workplace ID of the contractor's primary workplace.
                email:
                  type: string
                  description: Contractor's email address
                ssn:
                  type: string
                  description: >-
                    Contractor's TIN (usually their Social Security Number).
                    Must be unique across all contractors in a company. Only the
                    last four digits of an SSN will be made available in
                    `ssn_last_four` after being set.
                ein:
                  type: string
                  description: Contractor's Employer Identification Number, if applicable
                default_net_pay_split:
                  type: string
                  description: ID of contractor's net pay split
                address:
                  type: object
                  description: Contractor's address
                  required:
                    - line1
                    - city
                    - state
                    - postal_code
                  properties:
                    line1:
                      type: string
                      description: Street address or PO Box
                    line2:
                      type: string
                      description: Apartment, suite, unit, or building
                    city:
                      type: string
                      description: City, district, suburb, town, or village
                    state:
                      type: string
                      description: 2-digit state code
                    postal_code:
                      type: string
                      description: 5-digit postal code or zip code
                    country:
                      type: string
                      description: Read only.
                      default: US
                1099_nec_electronic_consent_provided:
                  type: boolean
                  description: >-
                    Indicates whether the contractor has opted into electronic
                    delivery of Copy B of 1099-NEC.
                  default: false
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the contractor
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /contractors:
    post:
      summary: Create a contractor
      description: Creates a contractor.
      operationId: create-a-contractor
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - company
                - last_name
              properties:
                company:
                  type: string
                  description: ID of the company the contractor performs work for
                type:
                  type: string
                  description: >-
                    If the contractor is a person set to "individual", otherwise
                    set to "business".
                first_name:
                  type: string
                  description: >-
                    Contractor's first name. If contractor type is business, a
                    primary contact is needed for 1099 filing so use the first
                    name of the business's primary contact.
                middle_name:
                  type: string
                  description: >-
                    Contractor's middle name. If contractor type is business, a
                    primary contact is needed for 1099 filing so use the middle
                    name of the business's primary contact.
                last_name:
                  type: string
                  description: >-
                    Contractor's last name. If contractor type is business, a
                    primary contact is needed for 1099 filing so use the last
                    name of the business's primary contact.
                business_name:
                  type: string
                  description: Contractor's business name if they're not an individual.
                dob:
                  type: string
                  description: Contractor's date of birth
                  format: date
                start_date:
                  type: string
                  description: Most recent start date of contract
                  format: date
                termination_date:
                  type: string
                  description: >-
                    Most recent termination date of contract. Will be set to
                    null if a more recent start date is set.
                  format: date
                workplaces:
                  type: array
                  description: IDs of workplaces where the contractor works
                  items:
                    type: string
                primary_workplace:
                  type: string
                  description: The Workplace ID of the contractor's primary workplace.
                email:
                  type: string
                  description: Contractor's email address
                ssn:
                  type: string
                  description: >-
                    Contractor's TIN (usually their Social Security Number).
                    Must be unique across all contractors in a company. Only the
                    last four digits of an SSN will be made available in
                    `ssn_last_four` after being set.
                ein:
                  type: string
                  description: Contractor's Employer Identification Number, if applicable
                default_net_pay_split:
                  type: string
                  description: ID of contractor's net pay split
                payment_method_preference:
                  type: string
                  description: Either "direct_deposit" or "manual", default null
                address:
                  type: object
                  description: Contractor's address
                  required:
                    - line1
                    - city
                    - state
                    - postal_code
                  properties:
                    line1:
                      type: string
                      description: Street address or PO Box
                    line2:
                      type: string
                      description: Apartment, suite, unit, or building
                    city:
                      type: string
                      description: City, district, suburb, town, or village
                    state:
                      type: string
                      description: 2-digit state code
                    postal_code:
                      type: string
                      description: 5-digit postal code or zip code
                    country:
                      type: string
                      description: Read only.
                      default: US
                1099_nec_electronic_consent_provided:
                  type: boolean
                  description: >-
                    Indicates whether the contractor has opted into electronic
                    delivery of Copy B of 1099-NEC.
                  default: false
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the contractor
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: List contractors
      description: Returns a list of all contractors.
      operationId: list-contractors
      parameters:
        - name: company
          in: query
          description: Return contractors for the company specified by this company ID.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of contractors returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /contractor_payments/{contractor_payment}:
    get:
      summary: Get a contractor pay statement
      description: Returns the specified contractor payment.
      operationId: get-a-contractor-payment
      parameters:
        - name: contractor_payment
          in: path
          description: ID of the contractor payment to return
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update a contractor payment
      description: Updates the specified contractor payment.
      operationId: update-a-contractor-payment
      parameters:
        - name: contractor_payment
          in: path
          description: ID of the contractor payment to update
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contractor:
                  type: string
                  description: ID of the contractor to pay
                payment_method:
                  type: string
                  description: >-
                    The way the contractor will be paid, either “direct_deposit”
                    or "manual"
                  default: '"direct_deposit"'
                amount:
                  type: string
                  description: The amount the contractor will be paid
                  default: '"0.00"'
                reimbursement_amount:
                  type: string
                  description: The amount to reimburse the contractor
                  default: '"0.00"'
                workplace:
                  type: string
                  description: The Workplace ID associated with this payment.
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    this contractor payment
                  format: json
                paper_check_number:
                  type: string
                  description: >-
                    For accounting. The check number associated with any printed
                    checks. Can be updated even after the associated payroll has
                    been approved. See [Get a paper
                    check](ref:get-a-paper-check-2) for more details.
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    delete:
      summary: Delete a contractor payment
      description: ''
      operationId: delete-a-contractor-payment
      parameters:
        - name: contractor_payment
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /webhook_configs/{webhook_config}/ping:
    post:
      summary: Ping a webhook config
      description: >-
        Sends a test webhook event to a webhook config. Be sure your receiving
        webhook config URL responds with a status of 200 for ping events.
      operationId: ping-a-webhook-config
      parameters:
        - name: webhook_config
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/contractor_tax_documents:
    get:
      summary: List contractor tax documents
      description: Returns contractor tax documents
      operationId: list-contractor-tax-documents
      parameters:
        - name: contractor
          in: query
          description: Return documents for this contractor ID.
          schema:
            type: string
        - name: company
          in: query
          description: >-
            Return documents for this company ID. Results will include tax
            documents for all contractors who perform work for this company.
          schema:
            type: string
        - name: year
          in: query
          description: >-
            Return documents for this year (must be greater than or equal to
            `2019`)
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: Number of tax documents returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/contractor_tax_documents/{document}/download:
    get:
      summary: Download a contractor tax document
      description: >-
        Returns the binary data for a PDF of the specified contractor tax
        document.
      operationId: download-a-contractor-tax-document
      parameters:
        - name: document
          in: path
          description: ID of the document to download
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: application/pdf
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /forms/{form}:
    get:
      summary: Get a form
      description: ''
      operationId: get-a-form
      parameters:
        - name: form
          in: path
          schema:
            type: string
          required: true
        - name: type
          in: query
          description: >-
            By adding type=contractor_setup as a query parameter, we will
            surface all of of the contractor specific forms.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "frm_VjOW9Qq93M7UGxi6eocg",
                      "description": "District of Columbia D-4",
                      "link": "https://www.exim.gov/sites/default/files/newsreleases/DCStateTaxForm-1.pdf",
                      "revision_date": "2010-12-01",
                      "parameters": [
                        {
                          "name": "first_name",
                          "label": "First name",
                          "description": null,
                          "type": "string",
                          "options": null,
                          "required": true,
                          "depends_on": null
                        },
                        ...
                        {
                          "name": "ssn",
                          "label": "Social Security number",
                          "description": null,
                          "type": "string",
                          "options": null,
                          "required": true,
                          "depends_on": null
                        },
                        ...
                        {
                          "name": "additional_amount",
                          "label": "Additional amount",
                          "description": "Add a whole dollar amount if any, you would like deducted from your paycheck for D.C Income Tax each pay period.",
                          "type": "currency",
                          "options": null,
                          "required": false,
                          "depends_on": null
                        },
                        {
                          "name": "exempt",
                          "label": "Exempt",
                          "description": "Before claiming exemption from withholding, read form and, if qualified, choose 'Yes'.",
                          "type": "select",
                          "options": [
                            {
                              "label": "No",
                              "value": "no"
                            },
                            {
                              "label": "Yes",
                              "value": "yes"
                            }
                          ],
                          "required": false,
                          "depends_on": null
                        },
                        {
                          "name": "domicile_is_other_state",
                          "label": "My domicile is a state other than the District of Columbia",
                          "description": "Fill in the state in which you reside if it is not the District of Columbia.",
                          "type": "select",
                          "options": [
                            {
                              "label": "No",
                              "value": "no"
                            },
                            {
                              "label": "Yes",
                              "value": "yes"
                            }
                          ],
                          "required": true,
                          "depends_on": {
                            "name": "exempt",
                            "value_matches": "yes"
                          }
                        },
                        ...
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /forms:
    get:
      summary: List forms
      description: ''
      operationId: list-forms
      parameters:
        - name: state
          in: query
          description: >-
            Filter for forms that apply to the provided state. Must be a
            two-digit state abbreviation.
          schema:
            type: string
        - name: lang
          in: query
          description: >-
            Prefer returning forms in the provided ISO 639-1 language code. Fall
            back to English forms if preferred language form does not exist.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "id": "frm_ntKOaUm6qIJabIBmqLXU",
                          "description": "Federal I-9",
                          "link": "https://www.uscis.gov/system/files_force/files/form/i-9-paper-version.pdf",
                          "revision_date": "2019-10-21"
                        },
                        {
                          "id": "frm_FBt3oC1x28IrZELkhb21",
                          "description": "Federal W-4",
                          "link": "https://www.irs.gov/pub/irs-pdf/fw4.pdf",
                          "revision_date": "2020-01-01"
                        },
                        {
                          "id": "frm_j7NxXAhh4ZlAsJ6tbP1A",
                          "description": "California DE-4",
                          "link": "https://www.edd.ca.gov/pdf_pub_ctr/de4.pdf",
                          "revision_date": "2020-02-01"
                        },
                        ...
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/forms/{form}:
    get:
      summary: Get an employee form
      description: >-
        Returns the specified employee form.


        **Note: **Employee withholdings are normally configured when employees
        go through [Check Onboard](https://docs.checkhq.com/docs/check-onboard).
        Use the Employee Forms API only if you're building a custom integration
        for employee onboarding.


        Consult the [Custom Employee Onboarding
        Guide](https://docs.checkhq.com/docs/employee-onboarding-api#3-employee-withholdings-api)
        for more information.
      operationId: get-an-employee-form
      parameters:
        - name: employee
          in: path
          description: Return forms associated with this employee ID
          schema:
            type: string
          required: true
        - name: form
          in: path
          description: The ID of the form to return.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "<FORM_ID>",
                        "description": "Federal W-4",
                        "link": "https://www.irs.gov/pub/irs-pdf/fw4.pdf",
                        "revision_date": "2020-01-01",
                        "parameters": [
                            {
                                "name": "exempt",
                                "label": "Do you wish to claim exemption from withholding?",
                                "description": "...",
                                "type": "select",
                                "options": [
                                    {
                                        "label": "No",
                                        "value": "no"
                                    },
                                    {
                                        "label": "Yes",
                                        "value": "yes"
                                    }
                                ],
                                "required": true,
                                "depends_on": null
                            },
                            ...
                        ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /forms/{form}/render:
    post:
      summary: Render a form
      description: ''
      operationId: render-a-form
      parameters:
        - name: form
          in: path
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: Either `application/pdf` or `application/json`
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  type: array
                  description: >-
                    Each parameter must be an object with a `name` key and a
                    `value` key
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/forms:
    get:
      summary: List employee forms
      description: >-
        Returns a list of employee forms for the specified employee.


        **Note: **Employee withholdings are normally configured when employees
        go through [Check Onboard](https://docs.checkhq.com/docs/check-onboard).
        You should only use the Employee Forms API if you're building a custom
        integration for employee onboarding.


        Consult the [Custom Employee Onboarding
        Guide](https://docs.checkhq.com/docs/employee-onboarding-api#3-employee-withholdings-api)
        for more information.
      operationId: list-employee-forms
      parameters:
        - name: employee
          in: path
          description: Return forms associated with this employee ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": null,
                        "previous": null,
                        "results": [
                            {
                                "form": {
                                    "id": "frm_FBt3oC1x28IrZELkhb21",
                                    "description": "Federal W-4",
                                    “type”: “employee_withholding”,
                                    "link": "https://www.irs.gov/pub/irs-pdf/fw4.pdf",
                                    "revision_date": "2020-01-01"
                                },
                                "submitted_at": null,
                                “document”: null,
                            }
                        ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/forms/{form}/submit:
    post:
      summary: Submit an employee form
      description: >-
        Submits an employee form.


        **Note: **Employee withholdings are normally configured when employees
        go through [Check Onboard](https://docs.checkhq.com/docs/check-onboard).
        Use the Employee Forms API only if you're building a custom integration
        for employee onboarding.


        Consult the [Custom Employee Onboarding
        Guide](https://docs.checkhq.com/docs/employee-onboarding-api#3-employee-withholdings-api)
        for more information.
      operationId: submit-an-employee-form
      parameters:
        - name: employee
          in: path
          description: Submit a form to this employee ID
          schema:
            type: string
          required: true
        - name: form
          in: path
          description: ID of the form to submit
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                parameters:
                  type: array
                  description: >-
                    An array of name-value pair objects, which represent the
                    fields available on your form.
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        “submitted_at”: “2020-07-29 21:56:45.06366”,
                        “parameters”: [
                            {“name”: “exempt”, “value”: “no”},
                            {“name”: “filing_status”, “value”: “M”},
                        ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/onboard:
    post:
      summary: Employee Onboard
      description: >-
        Generates an Onboard link for the specified employee. Onboard links can
        also be embedded like Components. Check out our <a
        href="https://docs.checkhq.com/docs/adding-check-onboard-to-your-application"
        target="_blank">guide</a> on how to embed them into your app.
      operationId: generate-onboard-link-1
      parameters:
        - name: employee
          in: path
          description: Generate an onboard link for this employee ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{one_time_onboard_link}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{one_time_onboard_link}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/onboard:
    post:
      summary: Company Onboard
      description: >-
        Generates a link to Onboard a Company.  Onboard links can also be
        embedded like Components. Check out our <a
        href="https://docs.checkhq.com/docs/adding-check-onboard-to-your-application"
        target="_blank">guide</a> on how to embed them into your app.
      operationId: generate-onboard-link
      parameters:
        - name: company
          in: path
          description: ID of the company for which an onboard link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signer_name
                - signer_title
                - email
              properties:
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You may use
                    either a signatory ID or the three body params above
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{one_time_onboard_link}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{one_time_onboard_link}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/reports/payroll_journal:
    get:
      summary: Get payroll journal
      description: Returns the specified payroll journal.
      operationId: get-payroll-journal
      parameters:
        - name: company
          in: path
          description: ID of the company with the payroll journal to return
          schema:
            type: string
          required: true
        - name: start
          in: query
          description: Return payrolls with a payday on or after this date.
          schema:
            type: string
            format: date
        - name: end
          in: query
          description: Return payrolls with a payday before or on this date.
          schema:
            type: string
            format: date
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
        - name: payroll
          in: query
          description: >-
            Return the payroll with this ID. To specify multiple payrolls,
            repeat this query parameter. (For example:
            "&payroll=pay_123&payroll=pay_456&...")
          schema:
            type: string
        - name: include_taxable_wages
          in: query
          description: Return payrolls with taxable wages.
          schema:
            type: boolean
            default: false
        - name: include_employee_id
          in: query
          description: Return employees with their ID.
          schema:
            type: boolean
            default: false
        - name: include_contractors
          in: query
          description: Return payments made to contractors on payrolls
          schema:
            type: boolean
            default: false
        - name: group_by
          in: query
          description: >-
            Determines how to breakdown pay. If `workplace` is provided,
            employees will have one line item per payroll and workplace
            combination.
          schema:
            type: string
            enum:
              - workplace
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/reports/payroll_summary:
    get:
      summary: Get payroll summary
      description: Returns the specified payroll summary.
      operationId: get-payroll-summary
      parameters:
        - name: company
          in: path
          description: Return payroll summaries for this company ID
          schema:
            type: string
          required: true
        - name: start
          in: query
          description: Return payrolls with a payday on or after this date.
          schema:
            type: string
            format: date
        - name: end
          in: query
          description: Return payrolls with a payday before or on this date.
          schema:
            type: string
            format: date
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
        - name: include_employee_id
          in: query
          description: Return employees with their ID.
          schema:
            type: boolean
            default: false
        - name: include_contractors
          in: query
          description: Return payments made to contractors on payrolls
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/paydays:
    get:
      summary: Get company paydays
      description: >-
        Returns a list of paydays and their corresponding `approval_deadline`
        specific to the processing period of the specified company. Results span
        one year of dates. If the `approval_deadline` was impacted by a bank
        holiday, then `impacted_by_holiday` will be true, otherwise false.
      operationId: get-company-paydays
      parameters:
        - name: company
          in: path
          description: Return paydays for this company ID
          schema:
            type: string
          required: true
        - name: start
          in: query
          description: >-
            Return paydays on or after this date. If not a valid payday, the
            first date in the returned range will be the first valid payday
            after this date. If omitted, this endpoint will return items
            starting from today.
          schema:
            type: string
            format: date
        - name: processing_period
          in: query
          description: Return paydays for payrolls with the given processing period.
          schema:
            type: string
            enum:
              - four_day
              - two_day
              - one_day
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": "https://sandbox.checkhq.com/companies/com_y3eWL9vdjcyeaulNhSW3/paydays?start=2022-09-23",
                      "previous": "https://sandbox.checkhq.com/companies/com_y3eWL9vdjcyeaulNhSW3/paydays?start=2020-09-21",
                      "results": [
                        {
                          "payday": "2021-09-22",
                          "approval_deadline": "2021-09-16",
                          "impacted_by_holiday": false
                        },
                        {
                          "payday": "2021-09-23",
                          "approval_deadline": "2021-09-17",
                          "impacted_by_holiday": false
                        },
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /contractors/{contractor}/payments:
    get:
      summary: List contractor payments
      description: Returns a list of all payments for the specified contractor.
      operationId: list-contractor-payments
      parameters:
        - name: contractor
          in: path
          description: ID of the contractor to return payments for
          schema:
            type: string
          required: true
        - name: payroll
          in: query
          description: Return payments for the payroll specified by this payroll ID.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of payments returned per page
          schema:
            type: integer
            format: int32
        - name: status
          in: query
          description: >-
            Filters to only show payments for payrolls with the specified
            status. If multiple `status` params are provided, payments with any
            of the statuses will be returned. Accepted values are `pending`,
            `processing`, `failed`, or `paid`.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                        {
                          "payroll": "pay_bdguw1kSIXjijjrzMTNP",
                          "payday": "2021-03-25",
                          "period_start": "2021-02-13",
                          "period_end": "2021-02-26",
                          "company": {
                            "trade_name": "Daily Bugle",
                            "legal_name": "Daily Bugle, Inc.",
                            "address": {
                              "line1": "4954 Berkeley Run Crossing",
                              "line2": null,
                              "city": "Norcross",
                              "state": "GA",
                              "postal_code": "30092",
                              "country": "US"
                            },
                            "phone": "5550897234",
                          },
                          "void_of": null,
                          "voided_by": null,
                          "contractor": {
                            "first_name": "Peter",
                            "middle_name": null,
                            "last_name": "Parker",
                            "type": "individual",
                            "business_name": null,
                            "email": "peterparker@gmail.com",
                            "ssn_last_four": null,
                            "ein": null,
                            "address": {
                              "line1": "630 Bedford Road",
                              "line2": null,
                              "city": "Tarrytown",
                              "state": "NY",
                              "postal_code": "10591",
                              "country": "US"
                            }
                          },
                          "amount": "100.00",
                          "amount_ytd": "100.00",
                          "reimbursement_amount": "50.00",
                          "reimbursement_amount_ytd": "50.00"
                        }
                    ]
      deprecated: false
  /earning_codes:
    post:
      summary: Create an earning code
      description: ''
      operationId: create-an-earning-code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - company
                - name
                - type
              properties:
                company:
                  type: string
                name:
                  type: string
                type:
                  type: string
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the earning code
                  format: json
                active:
                  type: boolean
                  description: >-
                    Used to distinguish between codes used only for loading
                    historical data (inactive) and those that you support on an
                    ongoing basis (active).
                  default: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: List earning codes
      description: Returns a list of earning codes.
      operationId: list-earning-codes
      parameters:
        - name: company
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Number of earning codes returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /earning_codes/{earning_code}:
    get:
      summary: Get an earning code
      description: ''
      operationId: get-a-workplace-1
      parameters:
        - name: earning_code
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "erc_pz0fmJeuVcaPb99N0nw9",
                        "company": "com_omSihPyKgr68wxFQ0xTn",
                        "type": "hourly",
                        "name": "Dishwasher",
                        "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: erc_pz0fmJeuVcaPb99N0nw9
                  company:
                    type: string
                    example: com_omSihPyKgr68wxFQ0xTn
                  type:
                    type: string
                    example: hourly
                  name:
                    type: string
                    example: Dishwasher
                  metadata:
                    type: object
                    properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update an earning code
      description: ''
      operationId: update-an-earning-code
      parameters:
        - name: earning_code
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: boolean
                  description: >-
                    Used to distinguish between codes used only for loading
                    historical data (inactive) and those that you support on an
                    ongoing basis (active).
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the earning code
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/paystubs/{payroll}:
    get:
      summary: Get a paystub
      description: >-
        Returns the specified paystub for the given employee and payroll.


        By default get the response as JSON. Use an `Accept: application/pdf`
        request header to download the paystub as a PDF document.
      operationId: get-a-paystub
      parameters:
        - name: employee
          in: path
          description: Return paystub for this employee ID
          schema:
            type: string
          required: true
        - name: payroll
          in: path
          description: Return the paystub for this payroll ID
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: Either `application/pdf` or `application/json`
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "payroll": "pay_xUNanwDkP1o8TE6qC77L",
                      "payday": "2021-04-26",
                      "period_start": "2021-03-20",
                      "period_end": "2021-04-02",
                      "company": {
                        "trade_name": null,
                        "legal_name": "Stark Industries",
                        "address": {
                          "line1": "4954 Berkeley Run Crossing",
                          "line2": null,
                          "city": "Norcross",
                          "state": "GA",
                          "postal_code": "30092",
                          "country": "US"
                        },
                        "phone": "2067138013"
                      },
                      "void_of": null,
                      "voided_by": null,
                      "employee": {
                        "first_name": "Tony",
                        "middle_name": null,
                        "last_name": "Stark",
                        "residence": {
                          "line1": "4954 Berkeley Run Crossing",
                          "line2": null,
                          "city": "Norcross",
                          "state": "GA",
                          "postal_code": "30092",
                          "country": "US"
                        },
                        "ssn_last_four": null
                      },
                      "earnings": [
                        {
                          "type": "hourly",
                          "code": null,
                          "earning_code": null,
                          "amount": "300.00",
                          "amount_ytd": "300.00",
                          "hours": "40.00",
                          "hours_ytd": "40.00",
                          "name": "Hourly (Regular)",
                          "current_earnings": [
                            {
                              "description": "Work on day 1",
                              "amount": "300.00",
                              "hours": "40.00",
                              "workplace": "wrk_mhHjtmJh6TBSuhTXpMcp",
                              "rate": "7.500"
                            }
                          ]
                        },
                        {
                          "type": "bonus",
                          "code": null,
                          "earning_code": null,
                          "amount": "100.00",
                          "amount_ytd": "100.00",
                          "hours": null,
                          "hours_ytd": null,
                          "name": "Bonus",
                          "current_earnings": [
                            {
                              "description": "Work on day 2",
                              "amount": "100.00",
                              "hours": null,
                              "workplace": "wrk_mhHjtmJh6TBSuhTXpMcp",
                              "rate": null
                            }
                          ]
                        }
                      ],
                      "reimbursements": [
                        
                      ],
                      "employee_taxes": [
                        {
                          "amount": "24.80",
                          "amount_ytd": "24.80",
                          "description": "FICA"
                        },
                        {
                          "amount": "27.87",
                          "amount_ytd": "27.87",
                          "description": "Federal Income Tax"
                        },
                        {
                          "amount": "5.80",
                          "amount_ytd": "5.80",
                          "description": "Medicare"
                        },
                        {
                          "amount": "10.85",
                          "amount_ytd": "10.85",
                          "description": "Georgia State Tax"
                        }
                      ],
                      "company_taxes": [
                        {
                          "amount": "24.80",
                          "amount_ytd": "24.80",
                          "description": "Employer FICA Tax"
                        },
                        {
                          "amount": "2.40",
                          "amount_ytd": "2.40",
                          "description": "Federal Unemployment Tax"
                        },
                        {
                          "amount": "5.80",
                          "amount_ytd": "5.80",
                          "description": "Employer Medicare Tax"
                        },
                        {
                          "amount": "10.80",
                          "amount_ytd": "10.80",
                          "description": "Georgia State Unemployment Tax"
                        },
                        {
                          "amount": "0.24",
                          "amount_ytd": "0.24",
                          "description": "Georgia Administrative Assessment Tax"
                        }
                      ],
                      "employee_benefit_contributions": [
                        
                      ],
                      "company_benefit_contributions": [
                        
                      ],
                      "post_tax_deductions": [
                        
                      ],
                      "summary": {
                        "earnings": "400.00",
                        "earnings_ytd": "400.00",
                        "reimbursements": "0.00",
                        "reimbursements_ytd": "0.00",
                        "employee_taxes": "69.32",
                        "employee_taxes_ytd": "69.32",
                        "company_taxes": "44.04",
                        "company_taxes_ytd": "44.04",
                        "employee_benefit_contributions": "0.00",
                        "employee_benefit_contributions_ytd": "0.00",
                        "company_benefit_contributions": "0.00",
                        "company_benefit_contributions_ytd": "0.00",
                        "post_tax_deductions": "0.00",
                        "post_tax_deductions_ytd": "0.00",
                        "net_pay": "330.68",
                        "net_pay_ytd": "330.68"
                      },
                      "time_off_balances": {
                        "pto_balance_hours": null,
                        "sick_balance_hours": null,
                        "state_covid_sick_balance_hours": null
                      },
                      "payment_method": "manual"
                    }
              schema:
                type: object
                properties:
                  payroll:
                    type: string
                    example: pay_xUNanwDkP1o8TE6qC77L
                  payday:
                    type: string
                    example: '2021-04-26'
                  period_start:
                    type: string
                    example: '2021-03-20'
                  period_end:
                    type: string
                    example: '2021-04-02'
                  company:
                    type: object
                    properties:
                      trade_name: {}
                      legal_name:
                        type: string
                        example: Stark Industries
                      address:
                        type: object
                        properties:
                          line1:
                            type: string
                            example: 4954 Berkeley Run Crossing
                          line2: {}
                          city:
                            type: string
                            example: Norcross
                          state:
                            type: string
                            example: GA
                          postal_code:
                            type: string
                            example: '30092'
                          country:
                            type: string
                            example: US
                      phone:
                        type: string
                        example: '2067138013'
                  void_of: {}
                  voided_by: {}
                  employee:
                    type: object
                    properties:
                      first_name:
                        type: string
                        example: Tony
                      middle_name: {}
                      last_name:
                        type: string
                        example: Stark
                      residence:
                        type: object
                        properties:
                          line1:
                            type: string
                            example: 4954 Berkeley Run Crossing
                          line2: {}
                          city:
                            type: string
                            example: Norcross
                          state:
                            type: string
                            example: GA
                          postal_code:
                            type: string
                            example: '30092'
                          country:
                            type: string
                            example: US
                      ssn_last_four: {}
                  earnings:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: hourly
                        code: {}
                        earning_code: {}
                        amount:
                          type: string
                          example: '300.00'
                        amount_ytd:
                          type: string
                          example: '300.00'
                        hours:
                          type: string
                          example: '40.00'
                        hours_ytd:
                          type: string
                          example: '40.00'
                        name:
                          type: string
                          example: Hourly (Regular)
                        current_earnings:
                          type: array
                          items:
                            type: object
                            properties:
                              description:
                                type: string
                                example: Work on day 1
                              amount:
                                type: string
                                example: '300.00'
                              hours:
                                type: string
                                example: '40.00'
                              workplace:
                                type: string
                                example: wrk_mhHjtmJh6TBSuhTXpMcp
                              rate:
                                type: string
                                example: '7.500'
                  reimbursements:
                    type: array
                  employee_taxes:
                    type: array
                    items:
                      type: object
                      properties:
                        amount:
                          type: string
                          example: '24.80'
                        amount_ytd:
                          type: string
                          example: '24.80'
                        description:
                          type: string
                          example: FICA
                  company_taxes:
                    type: array
                    items:
                      type: object
                      properties:
                        amount:
                          type: string
                          example: '24.80'
                        amount_ytd:
                          type: string
                          example: '24.80'
                        description:
                          type: string
                          example: Employer FICA Tax
                  employee_benefit_contributions:
                    type: array
                  company_benefit_contributions:
                    type: array
                  post_tax_deductions:
                    type: array
                  summary:
                    type: object
                    properties:
                      earnings:
                        type: string
                        example: '400.00'
                      earnings_ytd:
                        type: string
                        example: '400.00'
                      reimbursements:
                        type: string
                        example: '0.00'
                      reimbursements_ytd:
                        type: string
                        example: '0.00'
                      employee_taxes:
                        type: string
                        example: '69.32'
                      employee_taxes_ytd:
                        type: string
                        example: '69.32'
                      company_taxes:
                        type: string
                        example: '44.04'
                      company_taxes_ytd:
                        type: string
                        example: '44.04'
                      employee_benefit_contributions:
                        type: string
                        example: '0.00'
                      employee_benefit_contributions_ytd:
                        type: string
                        example: '0.00'
                      company_benefit_contributions:
                        type: string
                        example: '0.00'
                      company_benefit_contributions_ytd:
                        type: string
                        example: '0.00'
                      post_tax_deductions:
                        type: string
                        example: '0.00'
                      post_tax_deductions_ytd:
                        type: string
                        example: '0.00'
                      net_pay:
                        type: string
                        example: '330.68'
                      net_pay_ytd:
                        type: string
                        example: '330.68'
                  time_off_balances:
                    type: object
                    properties:
                      pto_balance_hours: {}
                      sick_balance_hours: {}
                      state_covid_sick_balance_hours: {}
                  payment_method:
                    type: string
                    example: manual
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /pay_schedules/{pay_schedule}:
    get:
      summary: Get a pay schedule
      description: Returns the specified pay schedule.
      operationId: get-a-pay-schedule
      parameters:
        - name: pay_schedule
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "psc_ARONfuK7dWUk1xFlQM77",
                       "company": "com_fOBk0fGUbJ76z3hF6hc6",
                       "name": "Pay schedule 2",
                       "pay_frequency": "semimonthly",
                       "first_payday": "2023-04-23",
                       "second_payday": "2023-05-09",
                       "first_period_end": "2023-04-15",
                       "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: psc_ARONfuK7dWUk1xFlQM77
                  company:
                    type: string
                    example: com_fOBk0fGUbJ76z3hF6hc6
                  name:
                    type: string
                    example: Pay schedule 2
                  pay_frequency:
                    type: string
                    example: semimonthly
                  first_payday:
                    type: string
                    example: '2023-04-23'
                  second_payday:
                    type: string
                    example: '2023-05-09'
                  first_period_end:
                    type: string
                    example: '2023-04-15'
                  metadata:
                    type: object
                    properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update a pay schedule
      description: Updates the specified pay schedule.
      operationId: update-a-pay-schedule
      parameters:
        - name: pay_schedule
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: ID of the company that this pay schedule relates to.
                name:
                  type: string
                  description: Human-readable name of the pay schedule.
                pay_frequency:
                  type: string
                  description: >-
                    Frequency by which [employees](ref:the-employee-object) get
                    paid.<br><br>One of `weekly`, `biweekly`, or `semimonthly`.
                first_payday:
                  type: string
                  description: >-
                    The payday date of the first payroll the company will run on
                    Check on this pay schedule.
                  format: date
                second_payday:
                  type: string
                  description: >-
                    The payday date of the the second payroll the company will
                    run on Check on this pay schedule. This field should only be
                    used with the `semimonthly` frequency to specify custom
                    paydays besides the 15th and last day of the month.
                    `second_payday` must be between one day and one month after
                    `first_payday`.
                first_period_end:
                  type: string
                  description: >-
                    The period end date of the first payroll the company will
                    run on Check on this pay schedule.
                  format: date
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the pay schedule
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /pay_schedules:
    post:
      summary: Create a pay schedule
      description: Creates a new pay schedule.
      operationId: create-a-pay-schedule
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - company
                - pay_frequency
                - first_payday
                - first_period_end
              properties:
                company:
                  type: string
                  description: ID of the company that this pay schedule relates to.
                name:
                  type: string
                  description: Human-readable name of the pay schedule.
                pay_frequency:
                  type: string
                  description: >-
                    Frequency by which [employees](ref:the-employee-object) get
                    paid.<br><br>One of `weekly`, `biweekly`, `semimonthly`,
                    `monthly`, `quarterly`, or `annually`.
                first_payday:
                  type: string
                  description: >-
                    The payday date of the first payroll the company will run on
                    Check on this pay schedule.
                  format: date
                second_payday:
                  type: string
                  description: >-
                    The payday date of the the second payroll the company will
                    run on Check on this pay schedule. This field should only be
                    used with the `semimonthly` frequency to specify custom
                    paydays besides the 15th and last day of the month.
                    `second_payday` must be between one day and one month after
                    `first_payday`.
                first_period_end:
                  type: string
                  description: >-
                    The period end date of the first payroll the company will
                    run on Check on this pay schedule.
                  format: date
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    the pay schedule
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "psc_ARONfuK7dWUk1xFlQM77",
                       "company": "com_fOBk0fGUbJ76z3hF6hc6",
                       "name": "Pay schedule 2",
                       "pay_frequency": "semimonthly",
                       "first_payday": "2023-04-23",
                       "second_payday": "2023-05-09",
                       "first_period_end": "2023-04-15",
                       "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: psc_ARONfuK7dWUk1xFlQM77
                  company:
                    type: string
                    example: com_fOBk0fGUbJ76z3hF6hc6
                  name:
                    type: string
                    example: Pay schedule 2
                  pay_frequency:
                    type: string
                    example: semimonthly
                  first_payday:
                    type: string
                    example: '2023-04-23'
                  second_payday:
                    type: string
                    example: '2023-05-09'
                  first_period_end:
                    type: string
                    example: '2023-04-15'
                  metadata:
                    type: object
                    properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: List pay schedules
      description: Returns a list of pay schedules.
      operationId: list-pay-schedules
      parameters:
        - name: company
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Number of pay schedules returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [{
                      "id": "psc_ARONfuK7dWUk1xFlQM77",
                       "company": "com_fOBk0fGUbJ76z3hF6hc6",
                       "name": "Pay schedule 2",
                       "pay_frequency": "semimonthly",
                       "first_payday": "2023-04-23",
                       "second_payday": "2023-05-09",
                       "first_period_end": "2023-04-15",
                       "metadata": {}
                    }]
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: psc_ARONfuK7dWUk1xFlQM77
                    company:
                      type: string
                      example: com_fOBk0fGUbJ76z3hF6hc6
                    name:
                      type: string
                      example: Pay schedule 2
                    pay_frequency:
                      type: string
                      example: semimonthly
                    first_payday:
                      type: string
                      example: '2023-04-23'
                    second_payday:
                      type: string
                      example: '2023-05-09'
                    first_period_end:
                      type: string
                      example: '2023-04-15'
                    metadata:
                      type: object
                      properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /pay_schedules/{pay_schedule}/paydays:
    get:
      summary: Get paydays
      description: >-
        Returns a list of paydays and their corresponding period_start,
        period_end, and approval_deadline dates for the specified pay schedule.
        Results span one year of dates. If the payday or approval_deadline was
        impacted by a weekend or a bank holiday, then
        impacted_by_weekend_or_holiday will be true, otherwise false.
      operationId: get-paydays
      parameters:
        - name: pay_schedule
          in: path
          schema:
            type: string
          required: true
        - name: start
          in: query
          description: Return paydays on or after this date.
          schema:
            type: string
            format: date
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [{
                      "payday": "2024-05-09",
                      "period_start": "2024-04-16",
                      "period_end": "2024-05-01",
                      "approval_deadline": "2024-05-03",
                      "impacted_by_weekend_or_holiday": false
                    }]
              schema:
                type: array
                items:
                  type: object
                  properties:
                    payday:
                      type: string
                      example: '2024-05-09'
                    period_start:
                      type: string
                      example: '2024-04-16'
                    period_end:
                      type: string
                      example: '2024-05-01'
                    approval_deadline:
                      type: string
                      example: '2024-05-03'
                    impacted_by_weekend_or_holiday:
                      type: boolean
                      example: false
                      default: true
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/reports/contractor_payments:
    get:
      summary: Get contractor payments report
      description: Returns the specified contractor payments report.
      operationId: get-contractor-payments-report
      parameters:
        - name: company
          in: path
          description: ID of the company with the contractor report to return
          schema:
            type: string
          required: true
        - name: start
          in: query
          description: Filter on payrolls with a payday on or after this date.
          schema:
            type: string
            format: date
        - name: end
          in: query
          description: Filter on payrolls with a payday before or on this date.
          schema:
            type: string
            format: date
        - name: payroll
          in: query
          description: >-
            Filter on payroll(s) with this ID. To specify multiple payrolls,
            repeat this query parameter. (For example:
            "&payroll=pay_123&payroll=pay_456&...")
          schema:
            type: string
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
        - name: preview
          in: query
          description: Include to show the report for contractor payments on draft payrolls
          schema:
            type: boolean
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                OK application/json:
                  value: |-
                    {
                      "next": None,
                      "previous": None,
                      "results": [
                        {
                            "amount": "50.00",
                            "business_name": "Defiance",
                            "first_name": "Slade",
                            "last_name": "Wilson",
                            "payday": "2021-11-27",
                            "payroll": "pay_qeArodmFoLJY8pxQD18J",
                            "period_end": "2021-11-27",
                            "period_start": "2021-11-14",
                            "reimbursement_amount": "15.00",
                            "net_pay": "35.00",
                        }
                      ]
                    }
            text/plain:
              examples:
                OK text/csv:
                  value: >
                    Payroll,Period Start,Period End,Payday,First Name,Last
                    Name,Business,Amount,Reimbursement,Net Pay

                    pay_qeArodmFoLJY8pxQD18J,2021-11-14,2021-11-27,2021-11-27,Slade,Wilson,Defiance,50.00,15.00,35.00
        '400':
          description: '400'
          content:
            text/plain:
              examples:
                Result:
                  value: ''
      deprecated: false
  /payroll_items/{payroll_item}/paper_check:
    get:
      summary: Get a paper check
      description: |-
        Returns a paper check for the specified payroll item.

         Use an `Accept: application/pdf` request header to download the paper check as a PDF document.
      operationId: get-a-paper-check
      parameters:
        - name: payroll_item
          in: path
          description: ID of the payroll item to return
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: application/pdf
          schema:
            type: string
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url": "string"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: string
        '400':
          description: '400'
          content:
            text/plain:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/company_defined_attributes:
    patch:
      summary: Update company-defined attributes
      description: Returns an employee's company-defined attributes
      operationId: update-company-defined-attributes
      parameters:
        - name: employee
          in: path
          description: ID of the employee to return
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company_defined_attributes:
                  type: array
                  items:
                    properties:
                      name:
                        type: string
                        description: The attribute's unique identifier
                      value:
                        type: string
                      effective_start:
                        type: string
                        format: date
                    required:
                      - name
                      - value
                    type: object
            examples:
              Request Example:
                value:
                  company_defined_attributes:
                    - name: corporate_officer
                      value: 'true'
                      effective_start: '2022-07-14'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "company_defined_attributes": [
                            {
                                "label": "Corporate officer status",
                                "description": "This employee is an owner or corporate officer of the business",
                                "name": "corporate_officer",
                                "value": "true",
                                "options": null,
                                "type": "boolean",
                                "effective_start": "2022-07-14"
                            }
                        ]
                    }   
              schema:
                type: object
                properties:
                  company_defined_attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                          example: Corporate officer status
                        description:
                          type: string
                          example: >-
                            This employee is an owner or corporate officer of
                            the business
                        name:
                          type: string
                          example: corporate_officer
                        value:
                          type: string
                          example: 'true'
                        options: {}
                        type:
                          type: string
                          example: boolean
                        effective_start:
                          type: string
                          example: '2022-07-14'
      deprecated: false
    get:
      summary: Get company-defined attributes
      description: Returns an employee's company-defined attributes.
      operationId: get-company-defined-attributes
      parameters:
        - name: employee
          in: path
          description: ID of the employee to return
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "company_defined_attributes": [
                            {
                                "label": "Corporate officer status",
                                "description": "This employee is an owner or corporate officer of the business",
                                "name": "corporate_officer",
                                "value": null,
                                "options": null,
                                "type": "boolean",
                                "effective_start": null,
                                "effective_start_required": false,
                                "default_value": false
                            }
                        ]
                    }   
              schema:
                type: object
                properties:
                  company_defined_attributes:
                    type: array
                    items:
                      type: object
                      properties:
                        label:
                          type: string
                          example: Corporate officer status
                        description:
                          type: string
                          example: >-
                            This employee is an owner or corporate officer of
                            the business
                        name:
                          type: string
                          example: corporate_officer
                        value: {}
                        options: {}
                        type:
                          type: string
                          example: boolean
                        effective_start: {}
                        effective_start_required:
                          type: boolean
                          example: false
                          default: true
                        default_value:
                          type: boolean
                          example: false
                          default: true
      deprecated: false
  /contractor_payments/{contractor_payment}/paper_check:
    get:
      summary: Get a paper check
      description: >-
        Returns a paper check for the specified contractor payment.


        Use an `Accept: application/pdf` request header to download the paper
        check as a PDF document.
      operationId: get-a-paper-check-2
      parameters:
        - name: contractor_payment
          in: path
          description: ID of the contractor payment to return
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: application/pdf
          schema:
            type: string
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url": "string"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: string
        '400':
          description: '400'
          content:
            text/plain:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /contractors/{contractor}/payments/{payroll}:
    get:
      summary: Get a contractor payment
      description: >-
        Returns the specified pay statement for the given contractor and
        payroll.


        By default get the response as JSON. Use an `Accept: application/pdf`
        request header to download the paystub as a PDF document.
      operationId: get-a-paystub-1
      parameters:
        - name: contractor
          in: path
          description: Return paystub for this contractor ID
          schema:
            type: string
          required: true
        - name: payroll
          in: path
          description: Return the paystub for this payroll ID
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: Either `application/pdf` or `application/json`
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "payroll": "pay_ZJySEmsnnRVerLTcRNYx",
                      "payday": "2020-12-01",
                      "period_start": "2020-12-01",
                      "period_end": "2020-12-15",
                      "company": {
                        "trade_name": "Stark Industries",
                        "legal_name": "Stark Industries, Inc.",
                        "address": {
                          "line1": "100 Crosby Street",
                          "line2": "Suite 306",
                          "city": "New York",
                          "state": "NY",
                          "postal_code": "10012",
                          "country": "US"
                        },
                        "phone": null
                      },
                      "void_of": null,
                      "voided_by": null,
                      "contractor": {
                        "first_name": "Tony",
                        "middle_name": null,
                        "last_name": "Stark",
                        "type": "individual",
                        "business_name": null,
                        "email": "tonystark@gmail.com",
                        "ssn_last_four": null,
                        "ein": null,
                        "address": {
                          "line1": "801 N Brand Blvd #700",
                          "line2": null,
                          "city": "Glendale",
                          "state": "CA",
                          "postal_code": "91203",
                          "country": "US"
                        }
                      },
                      "net_pay": "1015.00",
                      "net_pay_ytd": "1015.00",
                      "amount": "1000.00",
                      "amount_ytd": "1000.00",
                      "reimbursement_amount": "15.00",
                      "reimbursement_amount_ytd": "15.00"
                    }
              schema:
                type: object
                properties:
                  payroll:
                    type: string
                    example: pay_ZJySEmsnnRVerLTcRNYx
                  payday:
                    type: string
                    example: '2020-12-01'
                  period_start:
                    type: string
                    example: '2020-12-01'
                  period_end:
                    type: string
                    example: '2020-12-15'
                  company:
                    type: object
                    properties:
                      trade_name:
                        type: string
                        example: Stark Industries
                      legal_name:
                        type: string
                        example: Stark Industries, Inc.
                      address:
                        type: object
                        properties:
                          line1:
                            type: string
                            example: 100 Crosby Street
                          line2:
                            type: string
                            example: Suite 306
                          city:
                            type: string
                            example: New York
                          state:
                            type: string
                            example: NY
                          postal_code:
                            type: string
                            example: '10012'
                          country:
                            type: string
                            example: US
                      phone: {}
                  void_of: {}
                  voided_by: {}
                  contractor:
                    type: object
                    properties:
                      first_name:
                        type: string
                        example: Tony
                      middle_name: {}
                      last_name:
                        type: string
                        example: Stark
                      type:
                        type: string
                        example: individual
                      business_name: {}
                      email:
                        type: string
                        example: tonystark@gmail.com
                      ssn_last_four: {}
                      ein: {}
                      address:
                        type: object
                        properties:
                          line1:
                            type: string
                            example: '801 N Brand Blvd #700'
                          line2: {}
                          city:
                            type: string
                            example: Glendale
                          state:
                            type: string
                            example: CA
                          postal_code:
                            type: string
                            example: '91203'
                          country:
                            type: string
                            example: US
                  net_pay:
                    type: string
                    example: '1015.00'
                  net_pay_ytd:
                    type: string
                    example: '1015.00'
                  amount:
                    type: string
                    example: '1000.00'
                  amount_ytd:
                    type: string
                    example: '1000.00'
                  reimbursement_amount:
                    type: string
                    example: '15.00'
                  reimbursement_amount_ytd:
                    type: string
                    example: '15.00'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /contractors/{contractor}/onboard:
    post:
      summary: Contractor Onboard
      description: Generates an Onboard link for the specified contractor.
      operationId: generate-contractor-onboard-link
      parameters:
        - name: contractor
          in: path
          description: Generate an onboard link for this contractor ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{one_time_onboard_link}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{one_time_onboard_link}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payrolls/{payroll}/paper_checks:
    get:
      summary: Get paper checks
      description: Generate paper checks for the specified payroll.
      operationId: get-paper-checks
      parameters:
        - name: payroll
          in: path
          schema:
            type: string
            default: ID of the payroll
          required: true
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url": "string"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: string
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/components/paystubs:
    post:
      summary: Employee Paystubs
      description: >-
        Lists all of the paystubs available to download in PDF format for a
        single employee.

        <img style="margin-top: 20px; border-radius: 10px;  border: 1px solid
        #E2E8F0;"
        src="https://public-component-assets.s3.amazonaws.com/ee_paystubs.svg"
        />

        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: employee-paystub
      parameters:
        - name: employee
          in: path
          description: ID of the employee for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/components/payment_setup:
    post:
      summary: Employee Payment Setup
      description: >-
        This Component allows employees to approve debit authorization and link
        a bank account to Check via Plaid.

        <img style="margin-top: 20px; width: 500px;   display: block;
          margin-left: auto;
          margin-right: auto;" src="https://public-component-assets.s3.amazonaws.com/ee_payment_setup.svg" />
        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: employee-payment-setup
      parameters:
        - name: employee
          in: path
          description: ID of the employee for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/components/withholdings_setup:
    post:
      summary: Employee Withholdings Setup
      description: >-
        This Component allows an employee to complete and sign state and federal
        withholding forms (i.e. W-4).

        <img style="width: 500px;   display: block;
          margin-left: auto;
          margin-right: auto;" src="https://public-component-assets.s3.amazonaws.com/ee_tax_withholding.svg" />
        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: employee-withholdings-setup
      parameters:
        - name: employee
          in: path
          description: ID of the employee for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/components/ssn_setup:
    post:
      summary: Employee SSN Setup
      description: >-
        This Component allows employees to enter their SSN (with validation) and
        also consent to W-2 paper statements. 

        <img style="margin-top: 30px; margin-bottom: 0px; width: 500px;  
        display: block;
          margin-left: auto;
          margin-right: auto;" src="https://public-component-assets.s3.amazonaws.com/ee_ssn_setup_2.svg" />
        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: employee-ssn-setup
      parameters:
        - name: employee
          in: path
          description: ID of the employee for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/payment_setup:
    post:
      summary: Company Payment Setup
      description: >-
        Approve debit authorization and link a company bank account to Check via
        Plaid.

        <img style="margin-top: 30px; margin-bottom: 0px; width: 500px;  
        display: block;
          margin-left: auto;
          margin-right: auto;" src="https://public-component-assets.s3.amazonaws.com/er_payment_setup.svg" />
        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: company-payment-setup
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signer_name
                - signer_title
                - email
              properties:
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You may use
                    either a signatory ID or the three body params above
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/filing_authorization:
    post:
      summary: Company Filing Authorization
      description: >-
        This Component allows employers to view, sign, and submit forms relevant
        to their onboarding. 


        These forms include:

        <li>IRS Form 8655</li>

        <li>Any state form required for Check to file and pay taxes on the
        employer's behalf</li>


        <img style="margin-top: 30px; margin-bottom: 20px;"
        src="https://public-component-assets.s3.amazonaws.com/er_filing_authorization.svg"
        />

        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: company-filing-authorization
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signer_name
                - signer_title
                - email
              properties:
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You may use
                    either a signatory ID or the three signatory body params
                    above
                jurisdiction:
                  type: string
                  description: >-
                    Only list forms of the given jurisdiction. Use the last 2
                    letters of the ISO 3166-2:US code for the jurisdiction.
                federal_only:
                  type: boolean
                  description: Only show Federal forms if True.
                  default: false
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/accounting_integration:
    post:
      summary: Company Accounting Integration
      description: >-
        This Component allows employers to sync accounting data with Check.
        Currently, we only support integrations with Quickbooks Online.


        The Accounting Integration Component is disabled by default for all
        companies. Please reach out to us to enable it for specific companies or
        for all of your companies.

        <img style="margin-top: 30px; margin-bottom: 20px;"
        src="https://public-component-assets.s3.amazonaws.com/er_accounting_integration.svg"
        />

        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: company-accounting-integration
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/tax_setup:
    post:
      summary: Company Tax Setup
      description: >-
        This Component allows employers to configure their federal and state tax
        setup based on the company’s location.<img style="margin-top: 30px;
        margin-bottom: 20px;"
        src="https://public-onboard-assets.s3.amazonaws.com/tax-setup-component.png"
        />Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: company-tax-setup
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signer_name
                - signer_title
                - email
              properties:
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You may use
                    either a signatory ID or the three body params above
                jurisdiction:
                  type: string
                  description: >-
                    Initially select the provided jurisdiction. Use the value
                    “FED” for federal or the last 2 letters of the ISO 3166-2:US
                    code for the jurisdiction.
                  default: FED
                federal_only:
                  type: boolean
                  description: Only show the Federal tab if True.
                  default: false
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /earning_rates:
    post:
      summary: Create an earning rate
      description: ''
      operationId: create-an-earning-rate
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - period
                - employee
              properties:
                amount:
                  type: string
                period:
                  type: string
                  description: May be `hourly`, `annually`, or `piece`
                employee:
                  type: string
                name:
                  type: string
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: List earning rates
      description: Returns a list of earning rates
      operationId: list-earning-rates
      parameters:
        - name: active
          in: query
          schema:
            type: boolean
        - name: employee
          in: query
          schema:
            type: string
        - name: limit
          in: query
          description: Number of earning rates returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /earning_rates/{earning_rate}:
    get:
      summary: Get an earning rate
      description: ''
      operationId: get-an-earning-rate
      parameters:
        - name: earning_rate
          in: path
          description: ID for the earning rate object
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update an earning rate
      description: ''
      operationId: update-an-earning-rate
      parameters:
        - name: earning_rate
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                active:
                  type: boolean
                metadata:
                  type: string
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_benefits:
    post:
      summary: Create a company benefit
      description: Create a company benefit
      operationId: create-a-company-benefit
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - company
                - benefit
                - description
              properties:
                company:
                  type: string
                  description: ID of the company associated with the benefit.
                benefit:
                  type: string
                  description: >-
                    Type of supported benefit. See [types of
                    benefits](https://docs.checkhq.com/reference/types-of-benefits).
                period:
                  type: string
                  description: >-
                    The period over which a period amount is distributed. Can be
                    "monthly" or null.
                description:
                  type: string
                  description: >-
                    Description to distinguish the benefit from other company
                    benefits of the same type. Maximum length of 255 characters.
                company_contribution_amount:
                  type: string
                  description: Default amount for company to contribute per payroll.
                company_contribution_percent:
                  type: string
                  description: >-
                    Default decimal percentage of gross pay for company to
                    contribute per payroll from 0 to 100.
                company_period_amount:
                  type: string
                  description: Default amount for company to contribute over a period.
                employee_contribution_amount:
                  type: string
                  description: Default amount for employee to contribute per payroll.
                employee_contribution_percent:
                  type: string
                  description: >-
                    Default decimal percentage of gross pay for company to
                    contribute per payroll from 0 to 100.
                employee_period_amount:
                  type: string
                  description: Default amount for employee to contribute over a period.
                effective_start:
                  type: string
                  description: Start date for the benefit.
                effective_end:
                  type: string
                  description: End date for the benefit.
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    this company benefit.
                  format: json
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: List company benefits
      description: List company benefits
      operationId: list-company-benefits
      parameters:
        - name: company
          in: query
          description: Return all company benefits associated with this company ID.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of company benefits returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n  {\n    \"id\": \"cbn_lrcYUhTk1FVZl2vSCOBP\",\n    \"company\": \"cbn_kKTK4VafMNc5pIbI0G9x\",\n    \"benefit\": \"401k\",\n    \"source\": null,\n    \"period\": null,\n    \"description\": \"Guideline 401(k)\",\n    \"effective_start\": \"2020-01-01\",\n    \"effective_end\": null,\n    \"company_contribution_amount\": null,\n    \"company_contribution_percent\": 1.0,\n    \"company_period_amount\": null,\n    \"employee_contribution_amount\": null,\n    \"employee_contribution_percent\": 1.0,\n    \"employee_period_amount\": null,\n    \"metadata\": {}\n\t}\n]"
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: cbn_lrcYUhTk1FVZl2vSCOBP
                    company:
                      type: string
                      example: cbn_kKTK4VafMNc5pIbI0G9x
                    benefit:
                      type: string
                      example: 401k
                    source: {}
                    period: {}
                    description:
                      type: string
                      example: Guideline 401(k)
                    effective_start:
                      type: string
                      example: '2020-01-01'
                    effective_end: {}
                    company_contribution_amount: {}
                    company_contribution_percent:
                      type: integer
                      example: 1
                      default: 0
                    company_period_amount: {}
                    employee_contribution_amount: {}
                    employee_contribution_percent:
                      type: integer
                      example: 1
                      default: 0
                    employee_period_amount: {}
                    metadata:
                      type: object
                      properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_benefits/{company_benefit}:
    get:
      summary: Get a company benefit
      description: Get a company benefit
      operationId: get-a-company-benefit
      parameters:
        - name: company_benefit
          in: path
          description: ID of the company benefit to return.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "cbn_lrcYUhTk1FVZl2vSCOBP",
                      "company": "cbn_kKTK4VafMNc5pIbI0G9x",
                      "benefit": "401k",
                      "source": null,
                      "period": null,
                      "description": "Guideline 401(k)",
                      "effective_start": "2020-01-01",
                      "effective_end": null,
                      "company_contribution_amount": null,
                      "company_contribution_percent": 1.0,
                      "company_period_amount": null,
                      "employee_contribution_amount": null,
                      "employee_contribution_percent": 1.0,
                      "employee_period_amount": null,
                      "metadata": {}
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: cbn_lrcYUhTk1FVZl2vSCOBP
                  company:
                    type: string
                    example: cbn_kKTK4VafMNc5pIbI0G9x
                  benefit:
                    type: string
                    example: 401k
                  source: {}
                  period: {}
                  description:
                    type: string
                    example: Guideline 401(k)
                  effective_start:
                    type: string
                    example: '2020-01-01'
                  effective_end: {}
                  company_contribution_amount: {}
                  company_contribution_percent:
                    type: integer
                    example: 1
                    default: 0
                  company_period_amount: {}
                  employee_contribution_amount: {}
                  employee_contribution_percent:
                    type: integer
                    example: 1
                    default: 0
                  employee_period_amount: {}
                  metadata:
                    type: object
                    properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update a company benefit
      description: Updates the specified company benefit.
      operationId: update-a-company-benefit
      parameters:
        - name: company_benefit
          in: path
          description: ID of the company benefit to update
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: ID of the company associated with the benefit.
                benefit:
                  type: string
                  description: >-
                    Type of supported benefit. See [types of
                    benefits](https://docs.checkhq.com/reference#types-of-benefits).
                period:
                  type: string
                  description: >-
                    The period over which a period amount is distributed. Can be
                    "monthly" or null.
                description:
                  type: string
                  description: >-
                    Description to distinguish the benefit from other company
                    benefits of the same type. Maximum length of 255 characters.
                company_contribution_amount:
                  type: string
                  description: Default amount for company to contribute per payroll.
                company_contribution_percent:
                  type: string
                  description: >-
                    Default decimal percentage of gross pay for company to
                    contribute per payroll from 0 to 100.
                company_period_amount:
                  type: string
                  description: Default amount for company to contribute over a period.
                employee_contribution_amount:
                  type: string
                  description: Default amount for employee to contribute per payroll.
                employee_contribution_percent:
                  type: string
                  description: >-
                    Default decimal percentage of gross pay for company to
                    contribute per payroll from 0 to 100.
                employee_period_amount:
                  type: string
                  description: Default amount for employee to contribute over a period.
                effective_start:
                  type: string
                  description: Start date for the benefit.
                effective_end:
                  type: string
                  description: End date for the benefit.
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    this company benefit.
                  format: json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    delete:
      summary: Delete a company benefit
      description: Deletes the specified company benefit.
      operationId: delete-a-company-benefit
      parameters:
        - name: company_benefit
          in: path
          description: ID of the company benefit to delete.
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/details:
    post:
      summary: Company Details
      description: >-
        This Component allows employers to enter information about their
        business for due diligence review to determine payroll product and
        feature eligibility

        <img style="margin-top: 30px; margin-bottom: 20px;"
        src="https://public-component-assets.s3.amazonaws.com/er_details.svg" />

        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: company-details
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signer_name
                - signer_title
                - email
              properties:
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You may use
                    either a signatory ID or the three body params above
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/reports/w2_preview:
    get:
      summary: Get W-2 Preview Report
      description: >-
        Returns a preview of W-2 data for all employees as of the current date
        for a specified year.
      operationId: get-w-2-preview-report
      parameters:
        - name: company
          in: path
          description: Returns employee W-2 data for this company ID
          schema:
            type: string
          required: true
        - name: year
          in: query
          description: >-
            Returns employee W-2 data related to this year (defaults to current
            year).
          schema:
            type: string
            default: '2021'
        - name: include_ids
          in: query
          description: >-
            Returns employee W-2 data with the associated company and employee
            ids.
          schema:
            type: boolean
            default: false
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/reports/w4_exemption_status:
    get:
      summary: Get W-4 Exempt Status Report
      description: >-
        Returns the federal and state withholding exemption status for all
        employees as of the current date for a specified year.
      operationId: get-w-4-exempt-status-report
      parameters:
        - name: company
          in: path
          description: >-
            Returns employee federal and state withholding exception data for
            this company ID
          schema:
            type: string
          required: true
        - name: year
          in: query
          description: >-
            Returns employee federal and state withholding excemption data
            related to this year.
          schema:
            type: string
            default: Current year
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/terms_of_service:
    post:
      summary: Company Terms of Service
      description: >-
        This Component allows employers to sign Check's Terms of Service
        agreement


        <img style="margin-top: 20px; border-radius: 10px;  border: 1px solid
        #E2E8F0;"
        src="https://public-component-assets.s3.amazonaws.com/er_terms_of_service.svg"
        />


        This Component emits two events:

        - When the TOS is accepted:
        `check-component-company-terms-of-service-complete`: 

        - If the TOS has already been accepted:
        `check-component-company-terms-of-service-already-complete`


        <div>Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.</div>
      operationId: company-terms-of-service
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signer_name
                - signer_title
                - email
              properties:
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You may use
                    either a signatory ID or the three body params above
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /net_pay_splits:
    post:
      summary: Create a net pay split
      description: |-
        Creates a net pay split.

        One of `employee` or `contractor` is required.
      operationId: create-net-pay-split
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - splits
              properties:
                employee:
                  type: string
                  description: ID of the employee that the net pay split relates to.
                contractor:
                  type: string
                  description: ID of the contractor that the net pay split relates to.
                splits:
                  type: array
                  description: >-
                    Prioritized list of bank accounts and the maximum amounts to
                    be paid to each account.  The amount / percentage can be
                    omitted for the lowest priority account.
                  items:
                    properties:
                      bank_account:
                        type: string
                      priority:
                        type: integer
                        default: 1
                        format: int32
                      amount:
                        type: number
                        default: 1000
                        format: float
                      percentage:
                        type: number
                        description: Only available on API versions `2023-04-04` and beyond
                        format: float
                    type: object
                is_default:
                  type: boolean
                  default: false
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "nps_lk218jk9082mjkjljT1c",
                      "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                      "contractor": null,
                      "deactivated_at": null,
                      "deactivated_reason": null,
                      "is_default": true,
                      "splits": [
                        {
                          "bank_account": "bnk_R1UMH4Jtbjek10B9TxiX",
                          "priority": 1,
                          "amount": 100
                        },
                        {
                          "bank_account": "bnk_zGGp6wYcxAeu1Ng8IA7v",
                          "priority": 2,
                          "amount": 50
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: nps_lk218jk9082mjkjljT1c
                  employee:
                    type: string
                    example: emp_zGGp6wYcxAeu1Ng8IA7v
                  contractor: {}
                  deactivated_at: {}
                  deactivated_reason: {}
                  is_default:
                    type: boolean
                    example: true
                    default: true
                  splits:
                    type: array
                    items:
                      type: object
                      properties:
                        bank_account:
                          type: string
                          example: bnk_R1UMH4Jtbjek10B9TxiX
                        priority:
                          type: integer
                          example: 1
                          default: 0
                        amount:
                          type: integer
                          example: 100
                          default: 0
      deprecated: false
    get:
      summary: List net pay splits
      description: |-
        Returns a list of net pay splits.

        One of `employee` or `contractor` is required.
      operationId: list-net-pay-splits
      parameters:
        - name: employee
          in: query
          description: ID of the employee whose net pay splits should be listed
          schema:
            type: string
        - name: contractor
          in: query
          description: ID of the contractor whose net pay split should be listed
          schema:
            type: string
        - name: limit
          in: query
          description: Number of net pay splits returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "[\n  {\n    \"id\": \"nps_lk218jk9082mjkjljT1c\",\n    \"employee\": \"emp_zGGp6wYcxAeu1Ng8IA7v\",\n    \"contractor\": null,\n    \"deactivated_at\": null,\n    \"deactivated_reason\": null,\n    \"is_default\": true,\n    \"splits\": [\n      {\n        \"bank_account\": \"bnk_R1UMH4Jtbjek10B9TxiX\",\n        \"priority\": 1,\n        \"amount\": 100\n      },\n      {\n        \"bank_account\": \"bnk_zGGp6wYcxAeu1Ng8IA7v\",\n        \"priority\": 2,\n        \"amount\": 50\n      }\n    ]\n  },\n  {\n    \"id\": \"nps_jafh3ASFJ34480sos\",\n    \"employee\": \"emp_zGGp6wYcxAeu1Ng8IA7v\",\n    \"contractor\": null,\n    \"deactivated_at\": null,\n    \"deactivated_reason\": null,\n    \"is_default\": false,\n    \"splits\": [\n      {\n        \"bank_account\": \"bnk_R1UMH4Jtbjek10B9TxiX\",\n        \"priority\": 1,\n        \"amount\": 100\n      },\n      {\n        \"bank_account\": \"bnk_zGGp6wYcxAeu1Ng8IA7v\",\n        \"priority\": 2,\n        \"amount\": 50\n      }\n    ]\n\t}\n]"
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: nps_lk218jk9082mjkjljT1c
                    employee:
                      type: string
                      example: emp_zGGp6wYcxAeu1Ng8IA7v
                    contractor: {}
                    deactivated_at: {}
                    deactivated_reason: {}
                    is_default:
                      type: boolean
                      example: true
                      default: true
                    splits:
                      type: array
                      items:
                        type: object
                        properties:
                          bank_account:
                            type: string
                            example: bnk_R1UMH4Jtbjek10B9TxiX
                          priority:
                            type: integer
                            example: 1
                            default: 0
                          amount:
                            type: integer
                            example: 100
                            default: 0
      deprecated: false
  /net_pay_splits/{net_pay_split}:
    get:
      summary: Get a net pay split
      description: Returns a specified net pay split.
      operationId: get-a-net-pay-split
      parameters:
        - name: net_pay_split
          in: path
          description: ID of the net pay split to be returned
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "nps_lk218jk9082mjkjljT1c",
                      "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                      "contractor": null,
                      "deactivated_at": null,
                      "deactivated_reason": null,
                      "is_default": true,
                      "splits": [
                        {
                          "bank_account": "bnk_R1UMH4Jtbjek10B9TxiX",
                          "priority": 1,
                          "amount": 100
                        },
                        {
                          "bank_account": "bnk_zGGp6wYcxAeu1Ng8IA7v",
                          "priority": 2,
                          "amount": 50
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: nps_lk218jk9082mjkjljT1c
                  employee:
                    type: string
                    example: emp_zGGp6wYcxAeu1Ng8IA7v
                  contractor: {}
                  deactivated_at: {}
                  deactivated_reason: {}
                  is_default:
                    type: boolean
                    example: true
                    default: true
                  splits:
                    type: array
                    items:
                      type: object
                      properties:
                        bank_account:
                          type: string
                          example: bnk_R1UMH4Jtbjek10B9TxiX
                        priority:
                          type: integer
                          example: 1
                          default: 0
                        amount:
                          type: integer
                          example: 100
                          default: 0
      deprecated: false
  /companies/{company}/components/run_payroll:
    post:
      summary: Run Payroll
      description: >-
        Run payroll using our white-labeled Run Payroll Component. Set up worker
        pay, add earnings, and preview payrolls all within one Component. In
        order to run payroll with the Component, the company must have:<li>At
        least one employee or contractor associated with it</li><li>At least one
        pay schedule associated with it (<a
        href="https://docs.checkhq.com/reference/create-a-pay-schedule">Pay
        Schedule API</a>)</li><li>Company Onboarding status in "completed"
        state</li><img style="margin-top: 20px; border-radius: 10px;  border:
        1px solid #E2E8F0;" 
        src="https://public-component-assets.s3.amazonaws.com/run_payroll_v2.svg"
        />Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: run-payroll
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
        - name: payroll
          in: query
          description: >-
            ID of the payroll. This launches the component directly in edit
            view. In order to do this, the payroll needs to be formatted in a
            way the Run Payroll Component expects with a single earning rate
            tied to hourly or salaried earnings in the payroll item.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /tax_filings/{tax_filing_id}:
    get:
      summary: Get a tax filing
      description: ''
      operationId: get-a-payment
      parameters:
        - name: tax_filing_id
          in: path
          description: ID corresponding to the tax filing
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "pyt_vIFHhvyGN47ej1upyIT8",
                        "status": "paid",
                        "amount": "4522.0400",
                        "type": "company_cash_requirement",
                        "parent_type": "payroll",
                        "parent_id": "pay_ENA4k8LMHbgpV07GLGSv",
                        "payment_attempts": [
                            {
                                "id": "pya_GaeJoEAzbqqc2D9GMfOF",
                                "created_at": "2022-02-18T21:32:44.957364Z",
                                "expected_completion_date": "2022-02-25",
                                "status": "paid",
                                "failure_code": null,
                                "payment_method": "wire",
                                "payment_instrument": null,
                                "wire_details": {
                                    "account_number": "3302826020",
                                    "routing_number": "121140399",
                                    "bank_name": "Silicon Valley Bank",
                                    "account_name": "SVB for benefit of CHECK TECHNOLOGIES",
                                    "account_address": "3003 Tasman Drive, Santa Clara, CA 95054",
                                    "amount": 4522.04
                                }
                            },
                            {
                                "id": "pya_Kgl6ERboridVSfv4XKdT",
                                "created_at": "2022-02-18T20:14:40.713837Z",
                                "expected_completion_date": "2022-02-23",
                                "status": "failed",
                                "failure_code": null,
                                "payment_method": "ach",
                                "payment_instrument": "bnk_W7hjDGn6sU1d3U8dr9bq",
                                "wire_details": null
                            }
                        ],
                        "can_retry": false,
                        "can_refund": false,
                        "direction": "debit"
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: pyt_vIFHhvyGN47ej1upyIT8
                  status:
                    type: string
                    example: paid
                  amount:
                    type: string
                    example: '4522.0400'
                  type:
                    type: string
                    example: company_cash_requirement
                  parent_type:
                    type: string
                    example: payroll
                  parent_id:
                    type: string
                    example: pay_ENA4k8LMHbgpV07GLGSv
                  payment_attempts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: pya_GaeJoEAzbqqc2D9GMfOF
                        created_at:
                          type: string
                          example: '2022-02-18T21:32:44.957364Z'
                        expected_completion_date:
                          type: string
                          example: '2022-02-25'
                        status:
                          type: string
                          example: paid
                        failure_code: {}
                        payment_method:
                          type: string
                          example: wire
                        payment_instrument: {}
                        wire_details:
                          type: object
                          properties:
                            account_number:
                              type: string
                              example: '3302826020'
                            routing_number:
                              type: string
                              example: '121140399'
                            bank_name:
                              type: string
                              example: Silicon Valley Bank
                            account_name:
                              type: string
                              example: SVB for benefit of CHECK TECHNOLOGIES
                            account_address:
                              type: string
                              example: 3003 Tasman Drive, Santa Clara, CA 95054
                            amount:
                              type: number
                              example: 4522.04
                              default: 0
                  can_retry:
                    type: boolean
                    example: false
                    default: true
                  can_refund:
                    type: boolean
                    example: false
                    default: true
                  direction:
                    type: string
                    example: debit
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payment_attempts:
    get:
      summary: Get a payment attempt
      description: ''
      operationId: get-a-payment-attempt
      parameters:
        - name: payment_attempt
          in: path
          description: ID corresponding to payment attempt object
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-

                    {
                      "id": "pya_GaeJoEAzbqqc2D9GMfOF",
                      "created_at": "2022-02-18T21:32:44.957364Z",
                      "expected_completion_date": "2022-02-25",
                      "status": "paid",
                      "failure_code": null,
                      "payment_method": "wire",
                      "payment_instrument": null,
                      "wire_details": {
                        "account_number": "3302826020",
                        "routing_number": "121140399",
                        "bank_name": "Silicon Valley Bank",
                        "account_name": "SVB for benefit of CHECK TECHNOLOGIES",
                        "account_address": "3003 Tasman Drive, Santa Clara, CA 95054",
                        "amount": 4522.04
                    }
                        
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payments/{payment}/retry:
    post:
      summary: Retry a payment
      description: ''
      operationId: retry-a-payment
      parameters:
        - name: payment
          in: path
          description: ID of the payment desired for retry.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                use_wire:
                  type: boolean
                  description: Boolean parameter indicating whether a wire retry is desired
                  default: false
                bank_account:
                  type: string
                  description: >-
                    Parameter to accept a new bank account to use to retry this
                    payment.
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "pyt_vIFHhvyGN47ej1upyIT8",
                        "status": "failed",
                        "amount": "4522.0400",
                        "type": "company_cash_requirement",
                        "parent_type": "payroll",
                        "parent_id": "pay_ENA4k8LMHbgpV07GLGSv",
                        "payment_attempts": [
                            {
                                "id": "pya_GaeJoEAzbqqc2D9GMfOF",
                                "created_at": "2022-02-18T21:32:44.957364Z",
                                "expected_completion_date": "2022-02-25",
                                "status": "failed",
                                "failure_code": null,
                                "payment_method": "wire",
                                "payment_instrument": null,
                                "wire_details": {
                                    "account_number": "3302826020",
                                    "routing_number": "121140399",
                                    "bank_name": "Silicon Valley Bank",
                                    "account_name": "SVB for benefit of CHECK TECHNOLOGIES",
                                    "account_address": "3003 Tasman Drive, Santa Clara, CA 95054",
                                    "amount": 4522.04
                                }
                            },
                            {
                                "id": "pya_Kgl6ERboridVSfv4XKdT",
                                "created_at": "2022-02-18T20:14:40.713837Z",
                                "expected_completion_date": "2022-02-23",
                                "status": "failed",
                                "failure_code": null,
                                "payment_method": "ach",
                                "payment_instrument": "bnk_W7hjDGn6sU1d3U8dr9bq",
                                "wire_details": null
                            }
                        ],
                        "can_retry": false,
                        "can_refund": false,
                        "direction": "debit"
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: pyt_vIFHhvyGN47ej1upyIT8
                  status:
                    type: string
                    example: failed
                  amount:
                    type: string
                    example: '4522.0400'
                  type:
                    type: string
                    example: company_cash_requirement
                  parent_type:
                    type: string
                    example: payroll
                  parent_id:
                    type: string
                    example: pay_ENA4k8LMHbgpV07GLGSv
                  payment_attempts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: pya_GaeJoEAzbqqc2D9GMfOF
                        created_at:
                          type: string
                          example: '2022-02-18T21:32:44.957364Z'
                        expected_completion_date:
                          type: string
                          example: '2022-02-25'
                        status:
                          type: string
                          example: failed
                        failure_code: {}
                        payment_method:
                          type: string
                          example: wire
                        payment_instrument: {}
                        wire_details:
                          type: object
                          properties:
                            account_number:
                              type: string
                              example: '3302826020'
                            routing_number:
                              type: string
                              example: '121140399'
                            bank_name:
                              type: string
                              example: Silicon Valley Bank
                            account_name:
                              type: string
                              example: SVB for benefit of CHECK TECHNOLOGIES
                            account_address:
                              type: string
                              example: 3003 Tasman Drive, Santa Clara, CA 95054
                            amount:
                              type: number
                              example: 4522.04
                              default: 0
                  can_retry:
                    type: boolean
                    example: false
                    default: true
                  can_refund:
                    type: boolean
                    example: false
                    default: true
                  direction:
                    type: string
                    example: debit
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payments/{payment}/refund:
    post:
      summary: Refund a payment
      description: ''
      operationId: refund-a-payment
      parameters:
        - name: payment
          in: path
          description: ID of payment desired for refund
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "pyt_vIFHhvyGN47ej1upyIT8",
                        "status": "refunded",
                        "amount": "4522.0400",
                        "type": "employee_net_pay",
                        "parent_type": "payroll_item",
                        "parent_id": "pyi_ENA4k8LMHbgpV07GLGSv",
                        "payment_attempts": [
                            {
                                "id": "pya_GaeJoEAzbqqc2D9GMfOF",
                                "created_at": "2022-02-18T21:32:44.957364Z",
                                "expected_completion_date": "2022-02-25",
                                "status": "refunded",
                                "failure_code": null,
                                "payment_method": "manual",
                                "payment_instrument": null,
                                "wire_details": null,
                            },
                            {
                                "id": "pya_Kgl6ERboridVSfv4XKdT",
                                "created_at": "2022-02-18T20:14:40.713837Z",
                                "expected_completion_date": "2022-02-23",
                                "status": "failed",
                                "failure_code": "account_closed",
                                "payment_method": "ach",
                                "payment_instrument": "bnk_W7hjDGn6sU1d3U8dr9bq",
                                "wire_details": null
                            }
                        ],
                        "can_retry": false,
                        "can_refund": false,
                        "direction": "credit"
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payments:
    get:
      summary: List payments
      description: ''
      operationId: list-payments
      parameters:
        - name: payroll
          in: query
          description: >-
            Return all payments, including debits and credits, related to a
            particular payroll ID
          schema:
            type: string
        - name: payroll_item
          in: query
          description: Return payments related to a particular parent payroll_item ID
          schema:
            type: string
        - name: contractor_payment
          in: query
          description: Return payments related to a particular parent contractor payment ID
          schema:
            type: string
        - name: company
          in: query
          description: Return payments related to a particular company ID
          schema:
            type: string
        - name: direction
          in: query
          description: Return payments with direction
          schema:
            type: string
            enum:
              - credit
              - debit
        - name: amount_min
          in: query
          description: Return payments where amount ≥ an amount
          schema:
            type: string
        - name: amount_max
          in: query
          description: Return payments where amount ≤ an amount
          schema:
            type: string
        - name: type
          in: query
          description: Return payments with type
          schema:
            type: string
            enum:
              - company_cash_requirement
              - employee_net_pay
              - net_pay_refund
              - collection
              - refund
        - name: completion_date_after
          in: query
          description: >-
            Return payments whose expected completion date is on or after the
            specified date
          schema:
            type: string
            format: date
        - name: completion_date_before
          in: query
          description: >-
            Return payments whose expected completion date is on or before the
            specified date
          schema:
            type: string
            format: date
        - name: limit
          in: query
          description: Number of payments returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": \"pyt_uzasLBvddSm6aJkHGwQw\",\n      \"status\": \"paid\",\n      \"amount\": \"4522.0400\",\n      \"type\": \"company_cash_requirement\",\n      \"parent_type\": \"payroll\",\n      \"parent_id\": \"pay_aPKCtxqbi1jDNEWRrz9w\",\n      \"payment_attempts\": [\n        {\n          \"id\": \"pya_LUHvXtQBhkNM22xIk8K1\",\n          \"created_at\": \"2022-02-18T20:17:13.033205Z\",\n          \"expected_completion_date\": \"2022-02-23\",\n          \"status\": \"paid\",\n          \"failure_code\": null,\n          \"payment_method\": \"ach\",\n          \"payment_instrument\": \"bnk_W7hjDGn6sU1d3U8dr9bq\",\n          \"wire_details\": null,\n          \"ach_details\": {\n\t          \"ach_trace_id\": \"ABC12300080\",\n            \"description\": \"PAYMENT\",\n            \"transaction_type_code\": \"PCR\"\n          }\n        }\n      ],\n      \"can_retry\": false,\n      \"can_refund\": false,\n      \"can_cancel\": false,\n  \t\t\"cancel_deadline\": \"2022-02-19T17:00:00.000Z\",\n      \"direction\": \"debit\",\n      \"company\": \"com_ENA4k8LMHbgpV07GLGSv\"\n    }\n  ]\n}"
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: pyt_uzasLBvddSm6aJkHGwQw
                        status:
                          type: string
                          example: paid
                        amount:
                          type: string
                          example: '4522.0400'
                        type:
                          type: string
                          example: company_cash_requirement
                        parent_type:
                          type: string
                          example: payroll
                        parent_id:
                          type: string
                          example: pay_aPKCtxqbi1jDNEWRrz9w
                        payment_attempts:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: pya_LUHvXtQBhkNM22xIk8K1
                              created_at:
                                type: string
                                example: '2022-02-18T20:17:13.033205Z'
                              expected_completion_date:
                                type: string
                                example: '2022-02-23'
                              status:
                                type: string
                                example: paid
                              failure_code: {}
                              payment_method:
                                type: string
                                example: ach
                              payment_instrument:
                                type: string
                                example: bnk_W7hjDGn6sU1d3U8dr9bq
                              wire_details: {}
                              ach_details:
                                type: object
                                properties:
                                  ach_trace_id:
                                    type: string
                                    example: ABC12300080
                                  description:
                                    type: string
                                    example: PAYMENT
                                  transaction_type_code:
                                    type: string
                                    example: PCR
                        can_retry:
                          type: boolean
                          example: false
                          default: true
                        can_refund:
                          type: boolean
                          example: false
                          default: true
                        can_cancel:
                          type: boolean
                          example: false
                          default: true
                        cancel_deadline:
                          type: string
                          example: '2022-02-19T17:00:00.000Z'
                        direction:
                          type: string
                          example: debit
                        company:
                          type: string
                          example: com_ENA4k8LMHbgpV07GLGSv
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/reciprocity_elections:
    get:
      summary: Get reciprocity elections
      description: >-
        Returns the jurisdictions an employee may opt into reciprocity for,
        along with their current values.
      operationId: get-reciprocity-elections
      parameters:
        - name: employee
          in: path
          description: ID of the employee to return
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": null,
                        "previous": null,
                        "results": [
                            {
                                "opt_in": true,
                                "effective_start": "2022-01-01",
                                "jurisdiction": "jur_Z5KWgHsc5sPEMXMfoJuL",
                                "jurisdiction_name": "Arizona",
                                "applicable": true
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        opt_in:
                          type: boolean
                          example: true
                          default: true
                        effective_start:
                          type: string
                          example: '2022-01-01'
                        jurisdiction:
                          type: string
                          example: jur_Z5KWgHsc5sPEMXMfoJuL
                        jurisdiction_name:
                          type: string
                          example: Arizona
                        applicable:
                          type: boolean
                          example: true
                          default: true
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update reciprocity elections
      description: Returns an employee's reciprocity elections
      operationId: update-reciprocity-elections
      parameters:
        - name: employee
          in: path
          description: ID of the employee to return
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - RAW_BODY
              properties:
                RAW_BODY:
                  type: array
                  description: List of ReciprocityElection objects
                  items:
                    properties:
                      opt_in:
                        type: boolean
                        description: Opt-in value of the employee
                      effective_start:
                        type: string
                        description: Date the opt-in value goes into effect
                        format: date
                      jurisdiction:
                        type: string
                        description: Jurisdiction ID for the associated election
                    required:
                      - opt_in
                      - jurisdiction
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": null,
                        "previous": null,
                        "results": [
                            {
                                "opt_in": true,
                                "effective_start": "2022-01-01",
                                "jurisdiction": "jur_Z5KWgHsc5sPEMXMfoJuL",
                                "jurisdiction_name": "Arizona",
                                "applicable": true
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        opt_in:
                          type: boolean
                          example: true
                          default: true
                        effective_start:
                          type: string
                          example: '2022-01-01'
                        jurisdiction:
                          type: string
                          example: jur_Z5KWgHsc5sPEMXMfoJuL
                        jurisdiction_name:
                          type: string
                          example: Arizona
                        applicable:
                          type: boolean
                          example: true
                          default: true
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_tax_params/{company_id}:
    get:
      summary: List a company's tax parameters
      description: Get a paginated list of a company’s tax parameters
      operationId: list-company-tax-parameters
      parameters:
        - name: company_id
          in: path
          description: ID of the company used to list the applicable tax parameters.
          schema:
            type: string
          required: true
        - name: as_of
          in: query
          description: Used to list tax parameters applicable as of the supplied date.
          schema:
            type: string
            format: date
        - name: jurisdiction
          in: query
          description: >-
            Used to further filter down the list of the company’s tax parameters
            to specific jurisdictions.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n    {\n      \"id\": \"spa_W2kGF6lFM69FuuuyWyEn\",\n      \"label\": \"California Employer Unemployment Tax Rate\",\n      \"description\": \"California Employer Unemployment Tax Rate\",\n      \"name\": \"california_employer_unemployment_rate\",\n      \"type\": \"percent\",\n      \"options\": null,\n      \"depends_on\": null,\n      \"editable\": true,\n      \"effective_datable\": true,\n      \"can_be_applied_for\": false,\n      \"jurisdiction\": \"jur_mRpDYFyFSUD1ArZdrMis\",\n      \"tax\": \"tax_afRJqY785WwYH0PrtFde\",\n      \"setting\": null,\n      \"valid_formats\": null,\n      \"definitions\": null,\n      \"default_value\": null,\n      \"help_links\":[\n        {\n        \t\"label\": \"Log in or select \\\"View your Payroll Tax rates\\\" here.\",\n        \t\"url\": \"https://edd.ca.gov/en/Payroll_Taxes/e-Services_for_Business\",\n        }\n      ],\n    },\n    ...,\n  ]\n}"
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update a company's tax parameters
      description: >-
        Update a list of one or more tax parameters belonging to the company.


        Note: a company's FEIN (federal employer identification number) if Check
        has already begun reviewing the company, i.e.. its
        implementation.kyb.status is anything but `not_initiated`. In these
        cases, should the FEIN need updating, please reach out to
        support@checkhq.com, or create a new company.
      operationId: update-company-tax-parameters
      parameters:
        - name: company_id
          in: path
          description: ID of the company used to update the applicable tax parameters.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                RAW_BODY:
                  type: array
                  description: List of tax param update objects
                  items:
                    properties:
                      id:
                        type: string
                        description: ID of the tax parameter that will be updated.
                      applied_for:
                        type: boolean
                        description: >-
                          (Optional) Indicates whether the setting was marked as
                          applied for.
                      value:
                        type: string
                        description: (Optional) The value of the setting.
                      effective_start:
                        type: string
                        description: >-
                          (Optional) Date representing when the supplied value
                          will start being effective.
                        format: date
                    required:
                      - id
                    type: object
            examples:
              Request Example:
                value:
                  - id: spa_123456789
                    value: '1.25'
                    effective_start: '2021-01-01'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "id": "spa_W2kGF6lFM69FuuuyWyEn",
                          "label": "California Employer Unemployment Tax Rate",
                          "description": "California Employer Unemployment Tax Rate",
                          "name": "california_employer_unemployment_rate",
                          "type": "percent",
                          "options": null,
                          "depends_on": null,
                          "editable": true,
                          "effective_datable": true,
                          "can_be_applied_for": false,
                          "jurisdiction": "jur_mRpDYFyFSUD1ArZdrMis",
                          "tax": "tax_afRJqY785WwYH0PrtFde",
                          "setting": {
                            "applied_for": null,
                            "value": "2.95",
                            "effective_start": "2022-01-01",
                          }
                        },
                        ...,
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_tax_params/{company_id}/settings:
    get:
      summary: List a company's tax parameter settings
      description: >-
        Get a paginated list of a company’s tax parameters details which include
        a list of effective dated values
      operationId: list-company-tax-parameter-settings
      parameters:
        - name: company_id
          in: path
          description: ID of the company used to list the applicable tax parameter details.
          schema:
            type: string
          required: true
        - name: as_of
          in: query
          description: >-
            Used to show the list of tax parameters with the list of effective
            dated details.
          schema:
            type: string
            format: date
        - name: jurisdiction
          in: query
          description: Used to further filter down the list of the company’s tax
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "id": "spa_W2kGF6lFM69FuuuyWyEn",
                          "jurisdiction": "jur_mRpDYFyFSUD1ArZdrMis",
                          "applied_for": null,
                          "value": "2.95",
                          "effective_start": "2022-01-01",
                          "settings": [
                            {
                              "value": "2.95",
                              "effective_start": "2022-01-01",
                            },
                            {
                              "value": "2.15",
                              "effective_start": "2021-08-01",
                            },
                            {
                              "value": "1.75",
                              "effective_start": "2020-04-01",
                            }
                          ]
                        },
                        ...,
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_tax_params/{company_id}/settings/{tax_param_id}:
    get:
      summary: Get a specific company's tax parameter setting
      description: >-
        Get a company’s tax parameter detail which includes a list of effective
        dated values
      operationId: get-company-tax-parameter-setting
      parameters:
        - name: company_id
          in: path
          description: ID of the company used to get the applicable tax parameter details.
          schema:
            type: string
          required: true
        - name: as_of
          in: query
          description: Used to show the tax parameter effective dated details.
          schema:
            type: string
            format: date
        - name: tax_param_id
          in: path
          description: ID of the tax parameter used to detail the values.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "spa_W2kGF6lFM69FuuuyWyEn",
                      "jurisdiction": "jur_mRpDYFyFSUD1ArZdrMis",
                      "applied_for": null,
                      "value": "2.95",
                      "effective_start": "2022-01-01",
                      "settings": [
                        {
                          "value": "2.95",
                          "effective_start": "2022-01-01",
                        },
                        {
                          "value": "2.15",
                          "effective_start": "2021-08-01",
                        },
                        {
                          "value": "1.75",
                          "effective_start": "2020-04-01",
                        }
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_tax_params/{company_id}/jurisdictions:
    get:
      summary: List a company's jurisdictions
      description: >-
        Get a list of all of the available tax parameter jurisdictions of a
        company
      operationId: list-company-jurisdictions
      parameters:
        - name: company_id
          in: path
          description: ID of the company used to get the applicable tax parameter details.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "id": "jur_Q2kzfWrgZvLJ1CnCypzI",
                          "label": "California",
                        },
                        ...,
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employee_tax_params/{employee_id}:
    get:
      summary: List an employee's tax parameters
      description: Get a paginated list of an employee’s tax parameters
      operationId: list-employees-tax-parameters
      parameters:
        - name: employee_id
          in: path
          description: ID of the employee used to list the applicable tax parameter.
          schema:
            type: string
          required: true
        - name: as_of
          in: query
          description: Used to list tax parameters applicable as of the supplied date.
          schema:
            type: string
            format: date
        - name: jurisdiction
          in: query
          description: >-
            Used to further filter down the list of the employee’s tax
            parameters to specific jurisdictions.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "id": "spa_yqVxHQZb7aVPHrh16HRq",
                          "label": "Filing status",
                          "description": "Filing status",
                          "name": "filing_status",
                          "type": "select",
                          "options": [
                            {
                              "label": "Married but withholding at higher single rate",
                              "value": "MH"
                            },
                            {
                              "label": "Non-resident alien",
                              "value": "NRA"
                            },
                            {
                              "label": "Married",
                              "value": "M"
                            },
                            {
                              "label": "Single",
                              "value": "S"
                            }
                          ],
                          "depends_on": null,
                          "editable": true,
                          "effective_datable": true,
                          "can_be_applied_for": false,
                          "jurisdiction": "jur_mRpDYFyFSUD1ArZdrMis",
                          "tax": "tax_afRJqY785WwYH0PrtFde",
                          "setting": null,
                          "valid_formats": null,
                          "definitions": null,
                          "default_value": "S",
                          "help_links": null,
                        },
                        ...,
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update an employee's tax parameter
      description: Update a list of one or more tax parameters belonging to the employee
      operationId: update-employee-tax-parameters
      parameters:
        - name: employee_id
          in: path
          description: ID of the employee used to update the applicable tax parameter.
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                RAW_BODY:
                  type: array
                  description: List of tax param update objects
                  items:
                    properties:
                      id:
                        type: string
                        description: ID of the tax parameter that will be updated.
                      applied_for:
                        type: boolean
                        description: >-
                          (Optional) Indicates whether the setting was marked as
                          applied for.
                      value:
                        type: string
                        description: (Optional) The value of the setting.
                      effective_start:
                        type: string
                        description: >-
                          (Optional) Date representing when the supplied value
                          will start being effective.
                        format: date
                    required:
                      - id
                    type: object
            examples:
              Request Example:
                value:
                  - id: spa_123456789
                    value: '1.25'
                    effective_start: '2021-01-01'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "id": "spa_yqVxHQZb7aVPHrh16HRq",
                          "label": "Filing status",
                          "description": "Filing status",
                          "name": "filing_status",
                          "type": "select",
                          "options": [
                            {
                              "label": "Married but withholding at higher single rate",
                              "value": "MH"
                            },
                            {
                              "label": "Non-resident alien",
                              "value": "NRA"
                            },
                            {
                              "label": "Married",
                              "value": "M"
                            },
                            {
                              "label": "Single",
                              "value": "S"
                            }
                          ],
                          "depends_on": null,
                          "editable": true,
                          "effective_datable": true,
                          "can_be_applied_for": false,
                          "jurisdiction": "jur_mRpDYFyFSUD1ArZdrMis",
                          "tax": "tax_afRJqY785WwYH0PrtFde",
                          "setting": {
                            "applied_for": null,
                            "value": "M",
                            "effective_start": "2021-03-15"
                          }
                        },
                        ...,
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employee_tax_params/{employee_id}/settings:
    get:
      summary: List an employee's tax parameter settings
      description: >-
        Get a paginated list of an employee’s tax parameter details which
        include a list of effective dated values
      operationId: list-employee-tax-parameter-settings
      parameters:
        - name: employee_id
          in: path
          description: >-
            ID of the employee used to list the applicable tax parameter
            details.
          schema:
            type: string
          required: true
        - name: as_of
          in: query
          description: >-
            Used to show the list of tax parameter with the list of effective
            dated details.
          schema:
            type: string
            format: date
        - name: jurisdiction
          in: query
          description: >-
            Used to further filter down the list of the employee’s tax parameter
            details to specific jurisdictions.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "id": "spa_yqVxHQZb7aVPHrh16HRq",
                          "jurisdiction": "jur_mRpDYFyFSUD1ArZdrMis",
                          "applied_for": null,
                          "value": "M",
                          "effective_start": "2021-03-15",
                          "settings": [
                            {
                              "value": "M",
                              "effective_start": "2021-03-15"
                            },
                            {
                              "value": "S",
                              "effective_start": "2020-01-01"
                            }
                          ]
                        },
                        ...,
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employee_tax_params/{employee_id}/settings/{tax_param_id}:
    get:
      summary: Get a specific employee's tax parameter setting
      description: >-
        Get an employee’s tax parameter detail which includes a list of
        effective dated values
      operationId: get-employee-tax-parameter-setting
      parameters:
        - name: employee_id
          in: path
          description: ID of the employee used to get the applicable tax parameter details.
          schema:
            type: string
          required: true
        - name: tax_param_id
          in: path
          description: ID of the tax parameter used to detail the values.
          schema:
            type: string
          required: true
        - name: as_of
          in: query
          description: Used to show the tax parameter’s effective dated details.
          schema:
            type: string
            format: date
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "spa_yqVxHQZb7aVPHrh16HRq",
                      "jurisdiction": "jur_mRpDYFyFSUD1ArZdrMis",
                      "applied_for": null,
                      "value": "M",
                      "effective_start": "2021-03-15",
                      "settings": [
                        {
                          "value": "M",
                          "effective_start": "2021-03-15"
                        },
                        {
                          "value": "S",
                          "effective_start": "2020-01-01"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: spa_yqVxHQZb7aVPHrh16HRq
                  jurisdiction:
                    type: string
                    example: jur_mRpDYFyFSUD1ArZdrMis
                  applied_for: {}
                  value:
                    type: string
                    example: M
                  effective_start:
                    type: string
                    example: '2021-03-15'
                  settings:
                    type: array
                    items:
                      type: object
                      properties:
                        value:
                          type: string
                          example: M
                        effective_start:
                          type: string
                          example: '2021-03-15'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employee_tax_params/{employee_id}/jurisdictions:
    get:
      summary: List an employee's jurisdictions
      description: >-
        Get a list of all of the available tax parameter jurisdictions of an
        employee
      operationId: list-employee-jurisdictions
      parameters:
        - name: employee_id
          in: path
          description: >-
            ID of the employee used to get the applicable tax param object
            details.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "id": "jur_Q2kzfWrgZvLJ1CnCzpzI",
                          "label": "California",
                        },
                        ...,
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payrolls/{payroll}/reports/cash_requirement:
    get:
      summary: Get Cash Requirement Report
      description: >-
        Returns a breakdown of the payroll’s cash requirement by employee and
        contractor.
      operationId: get-cash-requirement-report
      parameters:
        - name: payroll
          in: path
          description: Returns cash requirement breakdown for this payroll ID
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/federal_ein_verifications:
    get:
      summary: List Federal EIN Verifications
      description: Returns a list of Federal EIN Verifications.
      operationId: list-federal-ein-verifications
      parameters:
        - name: company
          in: path
          description: ID of the company
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n        {\n            \"id\": \"fev_D3FeAyR6Ao3LZiO3j6d2\",\n            \"company\": \"com_097YZQgrXZQb8VHtI76S\",\n            \"legal_name\": \"Stark Industries, Inc.\",\n            \"federal_ein\": \"12-3456785\",\n            \"status\": \"processing\",\n            \"start_time\": \"2022-07-11T19:37:31.589206Z\",\n            \"end_time\": null,\n          \t\"error\": null\n        },\n        {\n            \"id\": \"fev_uqNqnDZrPhU9oKHTlNKn\",\n            \"company\": \"com_097YZQgrXZQb8VHtI76S\",\n            \"legal_name\": \"Stark Industries, Inc.\",\n            \"federal_ein\": \"12-3456784\",\n            \"status\": \"processing\",\n            \"start_time\": \"2022-07-11T17:58:22.817275Z\",\n            \"end_time\": null,\n            \"error\": null\n        }\n    ]\n}"
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: fev_D3FeAyR6Ao3LZiO3j6d2
                        company:
                          type: string
                          example: com_097YZQgrXZQb8VHtI76S
                        legal_name:
                          type: string
                          example: Stark Industries, Inc.
                        federal_ein:
                          type: string
                          example: 12-3456785
                        status:
                          type: string
                          example: processing
                        start_time:
                          type: string
                          example: '2022-07-11T19:37:31.589206Z'
                        end_time: {}
                        error: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/federal_ein_verifications/{federal_ein_verification}:
    get:
      summary: Get a Federal EIN Verification
      description: Returns the specified Federal EIN Verification
      operationId: get-a-federal-ein-verification
      parameters:
        - name: company
          in: path
          description: ID of the company
          schema:
            type: string
          required: true
        - name: federal_ein_verification
          in: path
          description: ID of the federal EIN verification
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "fev_D3FeAyR6Ao3LZiO3j6d2",
                        "company": "com_097YZQgrXZQb8VHtI76S",
                        "legal_name": "Stark Industries, Inc.",
                        "federal_ein": "12-3456785",
                        "status": "processing",
                        "start_time": "2022-07-11T19:37:31.589206Z",
                        "end_time": null,
                        "error": null
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: fev_D3FeAyR6Ao3LZiO3j6d2
                  company:
                    type: string
                    example: com_097YZQgrXZQb8VHtI76S
                  legal_name:
                    type: string
                    example: Stark Industries, Inc.
                  federal_ein:
                    type: string
                    example: 12-3456785
                  status:
                    type: string
                    example: processing
                  start_time:
                    type: string
                    example: '2022-07-11T19:37:31.589206Z'
                  end_time: {}
                  error: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_provided_documents:
    post:
      summary: Create a company provided document
      description: Creates a company provided document in a `pending` state.
      operationId: create-a-company-provided-document
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: The ID of the company that this document is associated with
                document_type:
                  type: string
                  description: The type of document being uploaded
                  enum:
                    - '"940"'
                    - '"941"'
                    - '"943"'
                    - '"944"'
                    - '"945"'
                    - '"cp_575"'
                    - '"147_c"'
                    - '"signatory_photo_id"'
                    - '"voided_check"'
                    - '"bank_statement"'
                    - '"ss4"'
                    - '"bank_account_owner_id"'
                    - '"bank_letter"'
                    - '"profit_and_loss"'
                    - '"cash_flow_statement"'
                    - '"balance_sheet"'
                    - '"articles_of_incorporation"'
                    - '"articles_of_incorporation_signatory_amendment"'
                    - '"state_registration"'
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"id\": \"doc_1fyTzNTwEg1gWwKOqYK9\",\n    \"company\": \"com_kGYEICK22GEzj8trreH3\",\n    \"document_type\": \"940\",\n    \"upload_url\": \"https://sandbox.checkhq.com/company_provided_documents/doc_1fyTzNTwEg1gWwKOqYK9/upload\",\n    \"upload_status\": \"pending\",\n    \"file_content_type\": null,\n\t  \"provided_filename\": null\n}"
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: doc_1fyTzNTwEg1gWwKOqYK9
                  company:
                    type: string
                    example: com_kGYEICK22GEzj8trreH3
                  document_type:
                    type: string
                    example: '940'
                  upload_url:
                    type: string
                    example: >-
                      https://sandbox.checkhq.com/company_provided_documents/doc_1fyTzNTwEg1gWwKOqYK9/upload
                  upload_status:
                    type: string
                    example: pending
                  file_content_type: {}
                  provided_filename: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: List company provided documents
      description: ''
      operationId: list-company-provided-documents
      parameters:
        - name: company
          in: query
          description: ID of the company that this document is associated with.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"next\": null,\n    \"previous\": null,\n    \"results\": [\n    \t{\n        \"id\": \"doc_1fyTzNTwEg1gWwKOqYK9\",\n        \"company\": \"com_kGYEICK22GEzj8trreH3\",\n        \"document_type\": \"940\",\n        \"upload_url\": \"https://sandbox.checkhq.com/company_provided_documents/doc_1fyTzNTwEg1gWwKOqYK9/upload\",\n        \"upload_status\": \"pending\",\n        \"file_content_type\": null,\n        \"provided_filename\": null\n    \t}\n    ]\n}"
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: doc_1fyTzNTwEg1gWwKOqYK9
                        company:
                          type: string
                          example: com_kGYEICK22GEzj8trreH3
                        document_type:
                          type: string
                          example: '940'
                        upload_url:
                          type: string
                          example: >-
                            https://sandbox.checkhq.com/company_provided_documents/doc_1fyTzNTwEg1gWwKOqYK9/upload
                        upload_status:
                          type: string
                          example: pending
                        file_content_type: {}
                        provided_filename: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_provided_documents/{document}/upload:
    put:
      summary: Upload a file for a company provided document.
      description: >-
        Upload a file to the `upload_url` of the associated company provided
        document.
      operationId: upload-a-file-for-a-company-provided-document
      parameters:
        - name: document
          in: path
          description: >-
            ID of the company provided document to associate the uploaded file
            with.
          schema:
            type: string
          required: true
        - name: Content-Type
          in: header
          schema:
            type: string
            enum:
              - application/pdf
              - image/jpeg
              - image/png
            default: application/pdf
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                RAW_BODY:
                  type: string
                  description: The file to be uploaded
                  format: binary
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "doc_1fyTzNTwEg1gWwKOqYK9",
                        "company": "com_kGYEICK22GEzj8trreH3",
                        "document_type": "940",
                        "upload_url": "https://sandbox.checkhq.com/company_provided_documents/doc_1fyTzNTwEg1gWwKOqYK9/upload",
                        "upload_status": "uploaded",
                        "file_content_type": "application/pdf",
                        "provided_filename": "sample_document.pdf"
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: doc_1fyTzNTwEg1gWwKOqYK9
                  company:
                    type: string
                    example: com_kGYEICK22GEzj8trreH3
                  document_type:
                    type: string
                    example: '940'
                  upload_url:
                    type: string
                    example: >-
                      https://sandbox.checkhq.com/company_provided_documents/doc_1fyTzNTwEg1gWwKOqYK9/upload
                  upload_status:
                    type: string
                    example: uploaded
                  file_content_type:
                    type: string
                    example: application/pdf
                  provided_filename:
                    type: string
                    example: sample_document.pdf
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/tax_deposits:
    get:
      summary: List tax deposits
      description: >-
        Returns a list of tax deposits for a company. See the [Tax Deposits
        guide](https://docs.checkhq.com/docs/tax-deposits) for more information.
      operationId: list-tax-deposits
      parameters:
        - name: company
          in: path
          description: ID of the company
          schema:
            type: string
          required: true
        - name: payroll_payday_start
          in: query
          description: Filter for tax deposits with payroll paydays on or after this day.
          schema:
            type: string
            format: date
        - name: payroll_payday_end
          in: query
          description: Filter for tax deposits with payroll paydays before or on this day.
          schema:
            type: string
            format: date
        - name: Accept
          in: header
          description: Provide `text/csv` for a CSV response.
          schema:
            type: string
            default: application/json
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "payroll": "pay_vIFHhvyGN47ej1upyIT8",
                          "payroll_payday": "2022-08-05",
                          "tax": "tax_GaeJoEAzbqqc2D9GMfOF",
                          "tax_label": "Federal Income Tax",
                          "amount": 1522.04,
                          "due_date": "2022-08-12",
                          "funding_status": "funded",
                          "deposit_status": "deposited"
                        },
                        {
                          "payroll": "pay_vIFHhvyGN47ej1upyIT8",
                          "payroll_payday": "2022-08-05",
                          "tax": "tax_W7hjDGn6sU1d3U8dr9bq",
                          "tax_label": "Federal Unemployment Tax",
                          "amount": 961.27,
                          "due_date": "2022-09-30",
                          "funding_status": "funded",
                          "deposit_status": "pending"
                        },
                      ]
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/signatories:
    get:
      summary: Get signatories
      description: Returns a list of the signatories for the given company
      operationId: get-signatories
      parameters:
        - name: company
          in: path
          description: ID of the associated company
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t[\n    {\n        \"id\": \"sig_D3FeAyR6Ao3LZiO3j6d2\",\n        \"company\": \"com_097YZQgrXZQb8VHtI76S\",\n        \"first_name\": \"First\",\n        \"middle_name\": null,\n        \"last_name\": \"Last\",\n        \"title\": \"CEO\",\n        \"email\": \"first@test.com\"\n    }\n  ]\n}"
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    post:
      summary: Create a signatory
      description: Create a signatory for the company
      operationId: create-a-signatory
      parameters:
        - name: company
          in: path
          description: The unique identifier of the company
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - first_name
                - last_name
                - title
                - email
              properties:
                first_name:
                  type: string
                  description: The first name of the company's signatory
                middle_name:
                  type: string
                  description: The middle name of the company's signatory
                last_name:
                  type: string
                  description: The last name of the company's signatory
                title:
                  type: string
                  description: >-
                    The title representing the relationship of the signer to the
                    company
                email:
                  type: string
                  description: The email of the signer
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "sig_D3FeAyR6Ao3LZiO3j6d2",
                        "company": "com_097YZQgrXZQb8VHtI76S",
                        "first_name": "First",
                        "middle_name": null,
                        "last_name": "Last",
                        "title": "CEO",
                        "email": "first@test.com"
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: sig_D3FeAyR6Ao3LZiO3j6d2
                  company:
                    type: string
                    example: com_097YZQgrXZQb8VHtI76S
                  first_name:
                    type: string
                    example: First
                  middle_name: {}
                  last_name:
                    type: string
                    example: Last
                  title:
                    type: string
                    example: CEO
                  email:
                    type: string
                    example: first@test.com
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/enrollment_profile:
    get:
      summary: Get the enrollment profile
      description: View the enrollment profile for the given company
      operationId: get-the-enrollment-profile
      parameters:
        - name: company
          in: path
          description: The ID of the associated company
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "company": "com_097YZQgrXZQb8VHtI76S",
                        "employee_count": 10,
                        "contractor_count": 0,
                        "pay_period_amount": "1000.50",
                        "previous_payroll_provider": "gusto",
                        "first_payroll_of_year": true,
                        "user_since": "2020-05-05",
                        "expected_first_payday": "2023-01-01",
                        "approved_for_payment_processing": true,
                        "average_monthly_revenue": "30005.27",
                        "earliest_known_revenue" "2022-08-22",
                        "months_on_previous_payroll_provider": 12,
                        "social_media":  ["https://twitter.com/check_hq"],
                        "products_actively_used": ["payments", "timetracking"],
                        "account_contacts": ["person@partner.com"],
                        "fraud_score": "21.03",
                        "predicted_fraud": false,
                        "paying_user": true,
                        "missed_payments_count": 0
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    put:
      summary: Create the enrollment profile
      description: Create the enrollment profile for the company
      operationId: create-the-enrollment-profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_count:
                  type: integer
                  description: Number of payees who are W2 employees
                  default: null
                  format: int32
                contractor_count:
                  type: integer
                  description: Number of payees who are 1099 contractors
                  default: null
                  format: int32
                pay_period_amount:
                  type: string
                  description: >-
                    Estimated total amount of money paid to employees and
                    contractors per pay period
                  default: 'null'
                previous_payroll_provider:
                  type: string
                  description: The payroll provider previously used by the company
                  default: 'null'
                first_payroll:
                  type: boolean
                  description: Whether or not the company has ever paid people before.
                  default: false
                first_payroll_of_year:
                  type: boolean
                  description: >-
                    Whether or not this is the first payroll of the current
                    calendar year for the company
                  default: false
                user_since:
                  type: string
                  description: The date at which the company joined the partner's platform
                  default: 'null'
                  format: date
                expected_first_payday:
                  type: string
                  description: The company's expected first payday on Check
                  default: 'null'
                  format: date
                approved_for_payment_processing:
                  type: boolean
                  description: >-
                    Whether or not the company has been approved for payment
                    processing on the partner's platform
                  default: false
                existing_payroll_customer_processing_period:
                  type: string
                  description: >-
                    If business is already running payroll with you, the
                    processing period they are currently using. One of `null`,
                    `four_day`, `two_day`, or `one_day`.
                  default: 'null'
                average_monthly_revenue:
                  type: number
                  description: The average monthly revenue of the company
                  default: null
                  format: float
                earliest_known_revenue:
                  type: string
                  description: The earliest known date that the company generated revenue
                  default: 'null'
                  format: date
                months_on_previous_payroll_provider:
                  type: integer
                  description: >-
                    The number of months that the company used their previous
                    payroll provider
                  default: null
                  format: int32
                social_media:
                  type: array
                  description: Any social media account URLs associated with the company
                  default:
                    - '[]'
                  items:
                    type: string
                products_actively_used:
                  type: array
                  description: >-
                    A list of the products offered by the partner's platform
                    used by the associated company. Values must be one of
                    `timetracking`, `payments`, or `scheduling`.
                  default:
                    - '[]'
                  items:
                    type: string
                account_contacts:
                  type: array
                  description: >-
                    A list of partner employee emails associated with the
                    company
                  default:
                    - '[]'
                  items:
                    type: string
                fraud_score:
                  type: number
                  description: >-
                    A value between 0 and 100 representing the fraud risk
                    presented by the company
                  default: null
                  format: float
                predicted_fraud:
                  type: boolean
                  description: >-
                    Whether the fraud score was over the expected threshold for
                    fraud (the company is predicted to be fraudulent)
                  default: false
                paying_user:
                  type: boolean
                  description: Whether the company pays the partner for services
                  default: false
                missed_payments_count:
                  type: integer
                  description: >-
                    The number of times that the company has failed to pay the
                    partner
                  default: null
                  format: int32
                payroll_history_access_method:
                  type: string
                  description: >-
                    The mechanism by which Check Implementation Services will be
                    able to access and migrate payroll history
                  default: null
                  enum:
                    - authorized_access_to_previous_provider
                    - provided_credentials
                    - provided_reports
                implementation_services_submission_comment:
                  type: string
                  description: >-
                    Optional comment for including additional context when
                    submitting a company for Implementation Services
                  default: 'null'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "company": "com_097YZQgrXZQb8VHtI76S",
                        "employee_count": 10,
                        "contractor_count": 0,
                        "pay_period_amount": "1000.50",
                        "previous_payroll_provider": "gusto",
                        "first_payroll_of_year": true,
                        "user_since": "2020-05-05",
                        "expected_first_payday": "2023-01-01",
                        "approved_for_payment_processing": true,
                        "existing_payroll_customer_processing_period": null,
                        "average_monthly_revenue": "30005.27",
                        "earliest_known_revenue" "2022-08-22",
                        "months_on_previous_payroll_provider": 12,
                        "social_media":  ["https://twitter.com/check_hq"],
                        "products_actively_used": ["payments", "timetracking"],
                        "account_contacts": ["person@partner.com"],
                        "fraud_score": "21.03",
                        "predicted_fraud": false,
                        "paying_user": true,
                        "missed_payments_count": 0
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update the enrollment profile
      description: Update the existing enrollment profile for the company
      operationId: update-the-enrollment-profile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                employee_count:
                  type: integer
                  description: Number of payees who are W2 employees
                  default: null
                  format: int32
                contractor_count:
                  type: integer
                  description: Number of payees who are 1099 contractors
                  default: null
                  format: int32
                pay_period_amount:
                  type: integer
                  description: >-
                    Estimated total amount of money paid to employees and
                    contractors per pay period
                  default: null
                  format: int32
                previous_payroll_provider:
                  type: string
                  description: The payroll provider previously used by the company
                  default: 'null'
                first_payroll:
                  type: boolean
                  description: Whether or not the company has ever paid people before.
                  default: false
                first_payroll_of_year:
                  type: boolean
                  description: >-
                    Whether or not this is the first payroll of the current
                    calendar year for the company
                  default: false
                user_since:
                  type: string
                  description: The date at which the company joined the partner's platform
                  default: 'null'
                  format: date
                expected_first_payday:
                  type: string
                  description: The company's expected first payday on Check
                  default: 'null'
                  format: date
                approved_for_payment_processing:
                  type: boolean
                  description: >-
                    Whether or not the company has been approved for payment
                    processing on the partner's platform
                  default: false
                existing_payroll_customer_processing_period:
                  type: string
                  description: >-
                    If business is already running payroll with you, the
                    processing period they are currently using. One of `null`,
                    `four_day`, `two_day`, or `one_day`.
                  default: 'null'
                average_monthly_revenue:
                  type: number
                  description: The average monthly revenue of the company
                  default: null
                  format: float
                earliest_known_revenue:
                  type: string
                  description: The earliest known date that the company generated revenue
                  default: 'null'
                  format: date
                months_on_previous_payroll_provider:
                  type: integer
                  description: >-
                    The number of months that the company used their previous
                    payroll provider
                  default: null
                  format: int32
                social_media:
                  type: array
                  description: Any social media account URLs associated with the company
                  default:
                    - '[]'
                  items:
                    type: string
                products_actively_used:
                  type: array
                  description: >-
                    A list of the products offered by the partner's platform
                    used by the associated company. Values must be one of
                    `timetracking`, `payments`, or `scheduling`.
                  default:
                    - '[]'
                  items:
                    type: string
                account_contacts:
                  type: array
                  description: >-
                    A list of partner employee emails associated with the
                    company
                  default:
                    - '[]'
                  items:
                    type: string
                fraud_score:
                  type: number
                  description: >-
                    A value between 0 and 100 representing the fraud risk
                    presented by the company
                  default: null
                  format: float
                predicted_fraud:
                  type: boolean
                  description: >-
                    Whether the fraud score was over the expected threshold for
                    fraud (the company is predicted to be fraudulent)
                  default: false
                paying_user:
                  type: boolean
                  description: Whether the company pays the partner for services
                  default: false
                missed_payments_count:
                  type: integer
                  description: >-
                    The number of times that the company has failed to pay the
                    partner
                  default: null
                  format: int32
                payroll_history_access_method:
                  type: string
                  description: >-
                    The mechanism by which Check Implementation Services will be
                    able to access and migrate payroll history
                  enum:
                    - '"authorized_access_to_previous_provider"'
                    - '"provided_credentials"'
                    - '"provided_reports"'
                implementation_services_submission_comment:
                  type: string
                  description: >-
                    Optional comment for including additional context when
                    submitting a company for Implementation Services
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "company": "com_097YZQgrXZQb8VHtI76S",
                        "employee_count": 10,
                        "contractor_count": 0,
                        "pay_period_amount": "1000.50",
                        "previous_payroll_provider": "gusto",
                        "first_payroll_of_year": true,
                        "user_since": "2020-05-05",
                        "expected_first_payday": "2023-01-01",
                        "approved_for_payment_processing": true,
                        "existing_payroll_customer_processing_period": null,
                        "average_monthly_revenue": "30005.27",
                        "earliest_known_revenue" "2022-08-22",
                        "months_on_previous_payroll_provider": 12,
                        "social_media":  ["https://twitter.com/check_hq"],
                        "products_actively_used": ["payments", "timetracking"],
                        "account_contacts": ["person@partner.com"],
                        "fraud_score": "21.03",
                        "predicted_fraud": false,
                        "paying_user": true,
                        "missed_payments_count": 0   
                    }
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/reports/applied_for_ids:
    get:
      summary: Get a company's applied-for tax parameters report
      description: >-
        Returns a CSV or paginated list indicating the jurisdictions for which
        the specified company has a Tax ID currently designated as Applied-For.
      operationId: get-applied-for-tax-ids-report
      parameters:
        - name: company
          in: path
          description: ID of the company with the Applied-For report to return
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": null,
                        "previous": null,
                        "results": [
                            {
                                "company_id": "com_8BD8BD8BD8BD8BD8BD8B",
                                "legal_name": "Stark Industries, Inc.",
                                "start_date": "2020-01-01",
                                "jurisdiction": "AL",
                                "requirement_name": "tax_parameters_al",
                                "requirement_id": "req_sn5sn5sn5sn5sn5sn5sn"
                            },
                            {
                                "company_id": "com_8BD8BD8BD8BD8BD8BD8B",
                                "legal_name": "Stark Industries, Inc.",
                                "start_date": "2020-01-01",
                                "jurisdiction": "AZ",
                                "requirement_name": "tax_parameters_az",
                                "requirement_id": "req_6Ww6Ww6Ww6Ww6Ww6Ww6W"
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        company_id:
                          type: string
                          example: com_8BD8BD8BD8BD8BD8BD8B
                        legal_name:
                          type: string
                          example: Stark Industries, Inc.
                        start_date:
                          type: string
                          example: '2020-01-01'
                        jurisdiction:
                          type: string
                          example: AL
                        requirement_name:
                          type: string
                          example: tax_parameters_al
                        requirement_id:
                          type: string
                          example: req_sn5sn5sn5sn5sn5sn5sn
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/early_enrollment:
    post:
      summary: Company Early Enrollment
      description: >-
        This Component allows employers to enter all of the necessary
        information about their business to kick off due diligence review used
        to determine payroll product and feature eligibility


        <img style="margin-top: 30px; margin-bottom: 20px; border-radius: 8px;
        border: 1px solid lightgrey"
        src="https://public-component-assets.s3.amazonaws.com/er-early-enrollment.png"
        />

        Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: early-enrollment
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signer_name
                - signer_title
                - email
              properties:
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You may use
                    either a signatory ID or the three body params above
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /requirements/{requirement}:
    get:
      summary: Get a requirement
      description: Get a single requirement through its id
      operationId: get-a-companys-requirements
      parameters:
        - name: requirement
          in: path
          description: ID of the requirement
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "req_lmdjesylstq2h0xwhftm",
                        "company": "com_yvgimu7i60cwfod0jhaft",
                        "requirement": "tax_parameters_pa",
                        "categories": [
                            "required_tax_id"
                        ],
                        "status": "open",
                        "errors": [],
                        "guidance": {
                            "document_options": []
                        }
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: req_lmdjesylstq2h0xwhftm
                  company:
                    type: string
                    example: com_yvgimu7i60cwfod0jhaft
                  requirement:
                    type: string
                    example: tax_parameters_pa
                  categories:
                    type: array
                    items:
                      type: string
                      example: required_tax_id
                  status:
                    type: string
                    example: open
                  errors:
                    type: array
                  guidance:
                    type: object
                    properties:
                      document_options:
                        type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /requirements:
    get:
      summary: List requirements
      description: Get a paginated list of all requirements for a company.
      operationId: list-requirements
      parameters:
        - name: category
          in: query
          description: Filter by requirement categories
          schema:
            type: string
            enum:
              - company_provided_documents
              - required_tax_id
              - failed_payroll_debit
            default: company_provided_documents
        - name: requirement
          in: query
          description: Filter by requirement names
          schema:
            type: string
            enum:
              - signatory_identity_verification
              - signatory_authorization_verification
              - company_identity_verification
              - federal_ein_verification
              - company_financial_verification
              - state_registration_verification
              - bank_account_verification
              - tax_parameters_fed
              - tax_parameters_al
              - resolve_funding_failure
            default: federal_ein_verification
        - name: status
          in: query
          description: Filter by requirement statuses
          schema:
            type: string
            enum:
              - open
              - pending
              - closed
              - failed
            default: not_provided
        - name: company
          in: query
          description: Filter by companies
          schema:
            type: string
            default: Company ID
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": null,
                        "previous": null,
                        "results": [
                            {
                                "id": "req_lstqlstqlstqlstqlstql",
                                "company": "com_yvgimu7i60cwfod0jhaft",
                                "requirement": "company_identity_verification",
                                "categories": [
                                    "company_provided_documents"
                                ],
                                "status": "open",
                                "errors": [],
                                "guidance": {
                                    "document_options": [
                                        {
                                            "name": "articles_of_incorporation",
                                            "label": "Articles of Incorporation (Company registration document)"
                                        },
                                        {
                                            "name": "bank_statement",
                                            "label": "Full bank statement including bank name, account number, and acount owner's name and address"
                                        }
                                    ],
                                    "funding_detail": null
                                }
                            },
                            {
                                "id": "req_lmdjeslmdjeslmdjeslmd",
                                "company": "com_yvgimu7i60cwfod0jhaft",
                                "requirement": "signatory_identity_verification",
                                "categories": [
                                    "company_provided_documents"
                                ],
                                "status": "open",
                                "errors": [],
                                "guidance": {
                                    "document_options": [
                                        {
                                            "name": "signatory_photo_id",
                                            "label": "Non-expired government-issued photo ID for authorized signer"
                                        }
                                    ],
                                    "funding_detail": null
                                }
                            },
                            {
                                "id": "req_hftmhftmhftmhftmhftm",
                                "company": "com_yvgimu7i60cwfod0jhaft",
                                "requirement": "tax_parameters_mi",
                                "categories": [
                                    "required_tax_id"
                                ],
                                "status": "open",
                                "errors": [],
                                "guidance": {
                                    "document_options": [],
                                    "funding_detail": null
                                }
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: req_lstqlstqlstqlstqlstql
                        company:
                          type: string
                          example: com_yvgimu7i60cwfod0jhaft
                        requirement:
                          type: string
                          example: company_identity_verification
                        categories:
                          type: array
                          items:
                            type: string
                            example: company_provided_documents
                        status:
                          type: string
                          example: open
                        errors:
                          type: array
                        guidance:
                          type: object
                          properties:
                            document_options:
                              type: array
                              items:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    example: articles_of_incorporation
                                  label:
                                    type: string
                                    example: >-
                                      Articles of Incorporation (Company
                                      registration document)
                            funding_detail: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /contractor_payments:
    get:
      summary: List contractor payments
      description: ''
      operationId: list-contractor-payments-1
      parameters:
        - name: payroll
          in: query
          description: Return payroll_items for this [payroll](ref:payroll) ID.
          schema:
            type: string
        - name: contractor
          in: query
          description: List contractor_payments for this contractor ID.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    post:
      summary: Create a contractor payment
      description: Creates a contractor payment.
      operationId: create-a-contractor-payment
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - contractor
                - payroll
                - amount
              properties:
                contractor:
                  type: string
                  description: ID of the contractor to pay
                payroll:
                  type: string
                  description: >-
                    ID of the payroll this contractor payment will be paid out
                    on
                payment_method:
                  type: string
                  description: >-
                    The way the contractor will be paid, either “direct_deposit”
                    or "manual"
                  default: direct_deposit
                amount:
                  type: string
                  description: The amount the contractor will be paid
                  default: '0.00'
                reimbursement_amount:
                  type: string
                  description: The amount to reimburse the contractor
                  default: '0.00'
                workplace:
                  type: string
                  description: The Workplace ID associated with this payment.
                metadata:
                  type: string
                  description: >-
                    Additional loosely structured information to associate with
                    this contractor payment
                  format: json
                paper_check_number:
                  type: string
                  description: >-
                    For accounting. The check number associated with any printed
                    checks. Can be updated even after the associated payroll has
                    been approved. See [Get a paper
                    check](ref:get-a-paper-check-2) for more details.
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payrolls/{payroll}/reports/paper_checks:
    get:
      summary: Get Paper Checks Report
      description: ''
      operationId: get-paper-checks-report
      parameters:
        - name: payroll
          in: path
          description: Returns paper checks report for this payroll ID
          schema:
            type: string
          required: true
        - name: Accept
          in: header
          description: Either application/json or text/csv
          schema:
            type: string
        - name: representation
          in: query
          description: >-
            `default` or `checkeeper`. If `checkeeper` is selected, report
            entries will be formatted to be compatible with Checkeeper's paper
            checks import flow.
          schema:
            type: string
            default: default
        - name: address_type
          in: query
          description: >-
            `payee` or `company`. If `payee` is selected, the address for each
            entry is set to the individual payee's mailing address, as recorded
            in Check. If set to `company`, all entries will have the mailing
            address set to the company's address.
          schema:
            type: string
            default: payee
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                default:
                  value: "{\n  \"next\": null,\n  \"previous\": null,\n  \"results\": [\n  \t{\n      \"payee\": \"Tony Stark\",\n      \"address_line1\": \"630 Bedford Road\",\n      \"address_line2\": \"APT 1201\",\n      \"address_city\": \"Tarrytown\",\n      \"address_state\": \"NY\",\n      \"address_postalcode\": \"10591\",\n      \"amount\": \"831.66\",\n      \"date\": \"2022-10-31\",\n      \"memo\": \"\",\n      \"payroll_item\": \"itm_NlBENQZ0eNWQqx46oQbZ\",\n      \"contractor_payment\": null\n    }\n  ]\n}"
                checkeeper:
                  value: |-
                    {
                      "next": null,
                      "previous": null,
                      "results": [
                        {
                          "payee": "Tony Stark",
                          "address": "630 Bedford Road",
                          "address_line2": "APT 1201",
                          "city": "Tarrytown",
                          "state": "NY",
                          "zip_code": "10591",
                          "amount": "831.66",
                          "date": "2022-10-31",
                          "memo": "",
                          "payroll_item": "itm_NlBENQZ0eNWQqx46oQbZ",
                          "contractor_payment": null
                        }
                      ]
                    }
              schema:
                oneOf:
                  - title: default
                    type: object
                    properties:
                      next: {}
                      previous: {}
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            payee:
                              type: string
                              example: Tony Stark
                            address_line1:
                              type: string
                              example: 630 Bedford Road
                            address_line2:
                              type: string
                              example: APT 1201
                            address_city:
                              type: string
                              example: Tarrytown
                            address_state:
                              type: string
                              example: NY
                            address_postalcode:
                              type: string
                              example: '10591'
                            amount:
                              type: string
                              example: '831.66'
                            date:
                              type: string
                              example: '2022-10-31'
                            memo:
                              type: string
                              example: ''
                            payroll_item:
                              type: string
                              example: itm_NlBENQZ0eNWQqx46oQbZ
                            contractor_payment: {}
                  - title: checkeeper
                    type: object
                    properties:
                      next: {}
                      previous: {}
                      results:
                        type: array
                        items:
                          type: object
                          properties:
                            payee:
                              type: string
                              example: Tony Stark
                            address:
                              type: string
                              example: 630 Bedford Road
                            address_line2:
                              type: string
                              example: APT 1201
                            city:
                              type: string
                              example: Tarrytown
                            state:
                              type: string
                              example: NY
                            zip_code:
                              type: string
                              example: '10591'
                            amount:
                              type: string
                              example: '831.66'
                            date:
                              type: string
                              example: '2022-10-31'
                            memo:
                              type: string
                              example: ''
                            payroll_item:
                              type: string
                              example: itm_NlBENQZ0eNWQqx46oQbZ
                            contractor_payment: {}
      deprecated: false
      requestBody:
        content:
          application/json:
            schema: {}
            examples:
              default representation:
                value:
                  payee: Tony Stark
                  address_line1: 630 Bedford Road
                  address_line2: APT 1201
                  address_city: Tarrytown
                  address_state: NY
                  address_postalcode: '10591'
                  amount: '831.66'
                  date: '2022-10-31'
                  memo: ''
                  payroll_item: itm_NlBENQZ0eNWQqx46oQbZ
                  contractor_payment: null
              checkeeper representation:
                value:
                  payee: Tony Stark
                  address: 630 Bedford Road
                  address_line2: APT 1201
                  city: Tarrytown
                  state: NY
                  zip_code: '10591'
                  amount: '831.66'
                  date: '2022-10-31'
                  memo: ''
                  payroll_item: itm_NlBENQZ0eNWQqx46oQbZ
                  contractor_payment: null
  /documents/company_tax_documents/{document}:
    get:
      summary: Get a company tax document
      description: Returns a company tax document.
      operationId: get-a-company-tax-document
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/employee_tax_documents/{document}:
    get:
      summary: Get an employee tax document
      description: Returns an employee tax document.
      operationId: get-an-employee-tax-document
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/contractor_tax_documents/{document}:
    get:
      summary: Get a contractor tax document
      description: Returns a contractor tax document.
      operationId: get-a-contractor-tax-document
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/company_authorization_documents/{document}:
    get:
      summary: Get a company authorization document
      description: Returns a company authorization document.
      operationId: get-a-company-authorization-document
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/reports/tax_liabilities:
    get:
      summary: Get tax liability report
      description: Returns the specified tax liability report.
      operationId: get-tax-liability-report
      parameters:
        - name: company
          in: path
          description: Return tax liabilities for this company ID
          schema:
            type: string
          required: true
        - name: start
          in: query
          description: >-
            Return tax liabilities from payrolls with a payday on or after this
            date.
          schema:
            type: string
            format: date
        - name: end
          in: query
          description: >-
            Return tax liabilities from payrolls with a payday before or on this
            date.
          schema:
            type: string
            format: date
        - name: Accept
          in: header
          description: Either `application/json` or `text/csv`
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_provided_documents/{document}:
    get:
      summary: Get a company provided document
      description: Returns a company provided document.
      operationId: get-a-company-provided-document
      parameters:
        - name: document
          in: path
          description: ID of the company provided document to return.
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"id\": \"doc_1fyTzNTwEg1gWwKOqYK9\",\n    \"company\": \"com_kGYEICK22GEzj8trreH3\",\n    \"document_type\": \"940\",\n    \"upload_url\": \"https://sandbox.checkhq.com/company_provided_documents/doc_1fyTzNTwEg1gWwKOqYK9/upload\",\n    \"upload_status\": \"pending\",\n    \"file_content_type\": null,\n\t  \"provided_filename\": null\n}"
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: doc_1fyTzNTwEg1gWwKOqYK9
                  company:
                    type: string
                    example: com_kGYEICK22GEzj8trreH3
                  document_type:
                    type: string
                    example: '940'
                  upload_url:
                    type: string
                    example: >-
                      https://sandbox.checkhq.com/company_provided_documents/doc_1fyTzNTwEg1gWwKOqYK9/upload
                  upload_status:
                    type: string
                    example: pending
                  file_content_type: {}
                  provided_filename: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/components/tax_documents:
    post:
      summary: Employee Tax Documents
      description: >-
        Component for employees to see all tax documents that have previously
        been filed. Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: employee-tax-documents
      parameters:
        - name: employee
          in: path
          description: ID of the employee for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/authorization_documents:
    post:
      summary: Company Authorization Documents
      description: >-
        This Component allows employers to view and download authorization forms
        that have previously been filed. Learn how to embed Components in our <a
        target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: company-authorization-documents
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/tax_documents:
    post:
      summary: Company Tax Documents
      description: >-
        This Component allows employers to view and download tax documents that
        have previously been filed. Learn how to embed Components in our <a
        target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: company-tax-documents
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /contractors/{contractor}/components/tax_documents:
    post:
      summary: Contractor Tax Documents
      description: >-
        Component for contractors to see all tax documents that have previously
        been filed. Learn how to embed Components in our <a target="_blank"
        href="https://docs.checkhq.com/docs/embedding-a-component">guide</a>.
      operationId: contractor-tax-documents
      parameters:
        - name: contractor
          in: path
          description: ID of the contractor for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /tax_filings:
    get:
      summary: List tax filings
      description: >-
        Get a list of tax filings. Please note that in its current iteration,
        only `rejected` filings are returned.
      operationId: list-payments-copy
      parameters:
        - name: company
          in: query
          description: Filter tax filings related to a particular company ID.
          schema:
            type: string
        - name: year
          in: query
          description: Filter tax filings within a given year
          schema:
            type: integer
            format: int32
        - name: period
          in: query
          description: >-
            Filter tax filings within a particular period. One of:  `annual`,
            `q1`, `q2`,`q3`, `q4`, `january`, `february`, `march`, `april`,
            `may`, `june`, `july`, `august` , `september`, `october` , or
            `december`.
          schema:
            type: string
        - name: limit
          in: query
          description: Number of tax filings returned per page
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": null,
                        "previous": null,
                        "results": [
                            {
                                "id": "pyt_uzasLBvddSm6aJkHGwQw",
                                "status": "paid",
                                "amount": "4522.0400",
                                "type": "company_cash_requirement",
                                "parent_type": "payroll",
                                "parent_id": "pay_aPKCtxqbi1jDNEWRrz9w",
                                "payment_attempts": [
                                    {
                                        "id": "pya_LUHvXtQBhkNM22xIk8K1",
                                        "created_at": "2022-02-18T20:17:13.033205Z",
                                        "expected_completion_date": "2022-02-23",
                                        "status": "paid",
                                        "failure_code": null,
                                        "payment_method": "ach",
                                        "payment_instrument": "bnk_W7hjDGn6sU1d3U8dr9bq",
                                        "wire_details": null
                                    }
                                ],
                                "can_retry": false,
                                "can_refund": false,
                                "direction": "debit"
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: pyt_uzasLBvddSm6aJkHGwQw
                        status:
                          type: string
                          example: paid
                        amount:
                          type: string
                          example: '4522.0400'
                        type:
                          type: string
                          example: company_cash_requirement
                        parent_type:
                          type: string
                          example: payroll
                        parent_id:
                          type: string
                          example: pay_aPKCtxqbi1jDNEWRrz9w
                        payment_attempts:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: string
                                example: pya_LUHvXtQBhkNM22xIk8K1
                              created_at:
                                type: string
                                example: '2022-02-18T20:17:13.033205Z'
                              expected_completion_date:
                                type: string
                                example: '2022-02-23'
                              status:
                                type: string
                                example: paid
                              failure_code: {}
                              payment_method:
                                type: string
                                example: ach
                              payment_instrument:
                                type: string
                                example: bnk_W7hjDGn6sU1d3U8dr9bq
                              wire_details: {}
                        can_retry:
                          type: boolean
                          example: false
                          default: true
                        can_refund:
                          type: boolean
                          example: false
                          default: true
                        direction:
                          type: string
                          example: debit
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payments/{payment}:
    get:
      summary: Get a payment
      description: ''
      operationId: get-a-payment-attempt-copy-1
      parameters:
        - name: payment
          in: path
          description: ID corresponding to payment object
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-

                    {
                      "id": "pya_GaeJoEAzbqqc2D9GMfOF",
                      "created_at": "2022-02-18T21:32:44.957364Z",
                      "expected_completion_date": "2022-02-25",
                      "status": "paid",
                      "failure_code": null,
                      "payment_method": "wire",
                      "payment_instrument": null,
                      "wire_details": {
                        "account_number": "3302826020",
                        "routing_number": "121140399",
                        "bank_name": "Silicon Valley Bank",
                        "account_name": "SVB for benefit of CHECK TECHNOLOGIES",
                        "account_address": "3003 Tasman Drive, Santa Clara, CA 95054",
                        "amount": 4522.04
                    }
                        
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/start_implementation:
    post:
      summary: Start implementation
      description: >-
        Submit a company for implementation. This will move the implementation
        status of a company from `needs_attention` to `in_review` or `complete`.
      operationId: start-implementation
      parameters:
        - name: company
          in: path
          description: ID of the company to start implementation
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"id\": \"com_sx3svU6K8c5ZkSFlOh5p\",\n    \"legal_name\": \"Stark Industries, Inc.\",\n    \"trade_name\": \"Stark Industries\",\n    \"business_type\": \"c_corporation\",\n    \"industry_type\": \"scientific_and_technical_services\",\n    \"website\": \"https://www.starkindustries.com\",\n    \"email\": \"payroll@starkindustries.com\",\n    \"phone\": \"5551234567\",\n    \"pay_frequency\": \"biweekly\",\n    \"bank_accounts\": [],\n    \"active\": true,\n    \"processing_period\": \"four_day\",\n    \"start_date\": \"2021-02-15\",\n    \"onboard\": {\n        \"status\": \"blocking\",\n        \"blocking_steps\": [\n            \"bank_account\",\n            \"setup_parameters\",\n            \"filing_authorization\"\n        ],\n        \"remaining_steps\": [\n            \"bank_account\",\n            \"setup_parameters\",\n            \"filing_authorization\"\n        ],\n        \"bank_account\": [\n            \"bank_account_exists\",\n            \"bank_account_verified\",\n            \"bank_account_debit_authorization_submitted\"\n        ],\n        \"setup_parameters\": [\n            {\n                \"id\": \"jur_NvIot3gvbIitui4Vmy9Z\",\n                \"name\": \"Federal\",\n                \"status\": \"blocking\"\n            },\n            {\n                \"id\": \"jur_87N4QWPZ38kDSvkqAI7D\",\n                \"name\": \"New York\",\n                \"status\": \"needs_attention\",\n            },     \n        ],\n        \"filing_authorization\": [\n            {\n                \"id\": \"frm_ozhx2ezrVsd2k2ScL7HU\",\n                \"name\": \"Federal Form 8655\",  \n                \"status\": \"blocking\",\n            },\n            {\n                \"id\": \"frm_Iee3dIFvT1uBUYJ4PG7z\",\n                \"name\": \"New York TR-2000\",\n                \"status\": \"needs_attention\",\n            },    \n            {\n                \"id\": \"frm_Y43LpYf60wEf3bCaN9Rn\",\n                \"name\": \"New York TR-579-WT\",\n                \"status\": \"needs_attention\",\n            },\n        ],\n    },\n    \"implementation\": {\n      \t\"status\": \"in_review\",\n        \"remaining_steps\": {\n          \t\"kyb\": {\n              \t\"status\": \"four_day_approved\",\n            },\n        },\n    },\n    \"in_good_standing\": true,\n    \"address\": {\n        \"line1\": \"200 Park Ave\",\n        \"line2\": null,\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"postal_code\": \"10166\",\n        \"country\": \"US\"\n    },\n    \"principal_place_of_business\": \"wrk_kf7VlAT2024bG3ibQ1Kf\",\n    \"metadata\": {}\n}"
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/cancel_implementation:
    post:
      summary: Cancel implementation
      description: >-
        Cancel submission of a company for implementation. This will move the
        implementation status of a company from `in_review` to
        `needs_attention`.
      operationId: cancel-implementation-1
      parameters:
        - name: company
          in: path
          description: ID of the company to cancel implementation
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"id\": \"com_sx3svU6K8c5ZkSFlOh5p\",\n    \"legal_name\": \"Stark Industries, Inc.\",\n    \"trade_name\": \"Stark Industries\",\n    \"business_type\": \"c_corporation\",\n    \"industry_type\": \"scientific_and_technical_services\",\n    \"website\": \"https://www.starkindustries.com\",\n    \"email\": \"payroll@starkindustries.com\",\n    \"phone\": \"5551234567\",\n    \"pay_frequency\": \"biweekly\",\n    \"bank_accounts\": [],\n    \"active\": true,\n    \"processing_period\": \"four_day\",\n    \"start_date\": \"2021-02-15\",\n    \"onboard\": {\n        \"status\": \"blocking\",\n        \"blocking_steps\": [\n            \"bank_account\",\n            \"setup_parameters\",\n            \"filing_authorization\"\n        ],\n        \"remaining_steps\": [\n            \"bank_account\",\n            \"setup_parameters\",\n            \"filing_authorization\"\n        ],\n        \"bank_account\": [\n            \"bank_account_exists\",\n            \"bank_account_verified\",\n            \"bank_account_debit_authorization_submitted\"\n        ],\n        \"setup_parameters\": [\n            {\n                \"id\": \"jur_NvIot3gvbIitui4Vmy9Z\",\n                \"name\": \"Federal\",\n                \"status\": \"blocking\"\n            },\n            {\n                \"id\": \"jur_87N4QWPZ38kDSvkqAI7D\",\n                \"name\": \"New York\",\n                \"status\": \"needs_attention\",\n            },     \n        ],\n        \"filing_authorization\": [\n            {\n                \"id\": \"frm_ozhx2ezrVsd2k2ScL7HU\",\n                \"name\": \"Federal Form 8655\",  \n                \"status\": \"blocking\",\n            },\n            {\n                \"id\": \"frm_Iee3dIFvT1uBUYJ4PG7z\",\n                \"name\": \"New York TR-2000\",\n                \"status\": \"needs_attention\",\n            },    \n            {\n                \"id\": \"frm_Y43LpYf60wEf3bCaN9Rn\",\n                \"name\": \"New York TR-579-WT\",\n                \"status\": \"needs_attention\",\n            },\n        ],\n    },\n    \"implementation\": {\n      \t\"status\": \"needs_attention\",\n        \"remaining_steps\": {\n          \t\"kyb\": {\n              \t\"status\": \"four_day_approved\",\n            },\n        },\n    },\n    \"in_good_standing\": true,\n    \"address\": {\n        \"line1\": \"200 Park Ave\",\n        \"line2\": null,\n        \"city\": \"New York\",\n        \"state\": \"NY\",\n        \"postal_code\": \"10166\",\n        \"country\": \"US\"\n    },\n    \"principal_place_of_business\": \"wrk_kf7VlAT2024bG3ibQ1Kf\",\n    \"metadata\": {}\n}"
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/components/profile:
    post:
      summary: Employee Profile
      description: >-
        This component allows employee to view their profile relevant to
        payroll, including general demographics and details, payment methods and
        linked accounts, and workplaces they have been assigned to
      operationId: employee-profile
      parameters:
        - name: employee
          in: path
          description: ID of the employee for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /tax_filing_events/{tax_filing_event_id}:
    get:
      summary: Get a tax filing event
      description: ''
      operationId: get-a-tax-filing-event-copy
      parameters:
        - name: tax_filing_event_id
          in: path
          description: ID corresponding to tax filing event object
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-

                    {
                      "id": "pya_GaeJoEAzbqqc2D9GMfOF",
                      "created_at": "2022-02-18T21:32:44.957364Z",
                      "expected_completion_date": "2022-02-25",
                      "status": "paid",
                      "failure_code": null,
                      "payment_method": "wire",
                      "payment_instrument": null,
                      "wire_details": {
                        "account_number": "3302826020",
                        "routing_number": "121140399",
                        "bank_name": "Silicon Valley Bank",
                        "account_name": "SVB for benefit of CHECK TECHNOLOGIES",
                        "account_address": "3003 Tasman Drive, Santa Clara, CA 95054",
                        "amount": 4522.04
                    }
                        
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/components/post_tax_deductions:
    post:
      summary: Employee Post-Tax Deductions
      description: >-
        This component allows an employer to view, create, edit, and delete
        post-tax deductions for the specified employee.
      operationId: employee-post-tax-deductions
      parameters:
        - name: employee
          in: path
          description: ID of the employee for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employees/{employee}/components/benefits:
    post:
      summary: Employee Benefits
      description: >-
        This component allows an employer to view, create, edit, and delete
        benefits for the specified employee.
      operationId: employee-benefits
      parameters:
        - name: employee
          in: path
          description: ID of the employee for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/company_reports:
    post:
      summary: Company Reports
      description: >-
        This Component allows companies to see various payroll reports,
        including the Payroll Summary and Payroll Journal, for specified date
        ranges.
      operationId: company-reports
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /addresses/validate:
    post:
      summary: Validate address
      description: Validate an address using Check's address validation engine.
      operationId: validate-address
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - line1
                - city
                - state
                - postal_code
              properties:
                line1:
                  type: string
                line2:
                  type: string
                city:
                  type: string
                state:
                  type: string
                postal_code:
                  type: string
                country:
                  type: string
                  default: US
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /webhook_events/{webhook_id}/retry:
    post:
      summary: Retry webhook event in sandbox
      description: >-
        In our sandbox environment, you can retry singular webhooks to aid in
        development.
      operationId: retry-webhook-events-in-sandbox
      responses:
        '202':
          description: '202'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "error": {
                        "type": "disallowed_environment",
                        "message": "Webhook retries not allowed in live environment"
                      }
                    }
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      type:
                        type: string
                        example: disallowed_environment
                      message:
                        type: string
                        example: Webhook retries not allowed in live environment
      deprecated: false
  /companies/{company}/components/employee_setup:
    post:
      summary: Company-Defined Employee Setup
      description: >-
        This component allows employers to define company-defined employee
        attributes for federal and state tax jurisdictions.
      operationId: company-employee-setup
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/previous_provider_access:
    post:
      summary: Company Previous Payroll Provider Access
      description: >-
        Generates a Previous Payroll Provider Access component used to gain
        access to a company's previous provider for migration.
      operationId: previous-payroll-provider-access
      parameters:
        - name: company
          in: path
          description: ID of the company for which an onboard link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signer_name
                - signer_title
                - email
              properties:
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You may use
                    either a signatory ID or the three body params above
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{one_time_onboard_link}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{one_time_onboard_link}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company_id}/request_embedded_setup:
    post:
      summary: Request Embedded Setup
      description: >-
        Request that Check manage setting up all of a Company's data necessary
        to begin running payroll.
      operationId: request-embedded-setup
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "error": {
                            "type": "validation_error",
                            "message": "Please correct the required fields and try again.",
                            "input_errors": [
                                {
                                    "message": "Company has not agreed to Terms of Service"
                                }
                            ]
                        }
                    }
              schema:
                type: object
                properties:
                  error:
                    type: object
                    properties:
                      type:
                        type: string
                        example: validation_error
                      message:
                        type: string
                        example: Please correct the required fields and try again.
                      input_errors:
                        type: array
                        items:
                          type: object
                          properties:
                            message:
                              type: string
                              example: Company has not agreed to Terms of Service
      deprecated: false
  /company_tax_elections/settings:
    post:
      summary: Create company tax elections
      description: ''
      operationId: create-company-tax-elections
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - List of Tax Elections
              properties:
                List of Tax Elections:
                  type: array
                  items:
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the Tax Election.
                      company:
                        type: string
                        description: Unique identifier for the Company.
                      setting:
                        type: object
                        description: The Tax Election setting.
                        required:
                          - exempt
                          - effective_start
                        properties:
                          exempt:
                            type: boolean
                            description: Whether or not the tax is exempt.
                          effective_start:
                            type: string
                            description: >-
                              The effective start date for the Tax Election
                              setting value.
                            format: date
                          effective_end:
                            type: string
                            description: >-
                              The effective end date for the Tax Election
                              setting value.
                            format: date
                    required:
                      - id
                      - company
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /company_tax_elections:
    get:
      summary: List company tax elections
      description: ''
      operationId: list-company-tax-elections
      parameters:
        - name: company
          in: query
          description: Unique ID for the company.
          schema:
            type: string
        - name: tax
          in: query
          description: Unique ID for the tax.
          schema:
            type: string
        - name: as_of
          in: query
          description: >-
            Used to list tax elections applicable as of the supplied date.
            Defaults to today.
          schema:
            type: string
            format: date
        - name: exemptible
          in: query
          description: Used to filter tax elections to exemptible taxes.
          schema:
            type: boolean
        - name: jurisdiction
          in: query
          description: Used to filter tax elections by tax jurisdiction.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": null,
                        "previous": null,
                        "results": [
                            {
                                "id": "txe_RiS2Nrxa3RZ1zECcKR1t",
                                "tax": "tax_ImvSF9CTuMdokf0uwx5x",
                                "description": "Employer FICA Tax",
                                "payer": "company",
                                "company": "com_GxosnNzVxmoXow6qUCHF",
                                "jurisdiction": "jur_J1IozKUkhPC6ueJqtTdt",
                                "jurisdiction_abbreviation": "FED",
                                "exemptible": false,
                                "setting": null,
                                "setting_timeline": []
                            },
                            {
                                "id": "txe_H72dndbcLQSbTLojrzK8",
                                "tax": "tax_u4DzMCYXAUL6OfcgPeyg",
                                "description": "Federal Unemployment Tax",
                                "payer": "company",
                                "company": "com_GxosnNzVxmoXow6qUCHF",
                                "jurisdiction": "jur_J1IozKUkhPC6ueJqtTdt",
                                "jurisdiction_abbreviation": "FED",
                                "exemptible": false,
                                "setting": null,
                                "setting_timeline": []
                            },
                            {
                                "id": "txe_Yx60pztzDMQv6jNr4FUm",
                                "tax": "tax_O3f21hkS1cvHBZTa61BO",
                                "description": "Employer Medicare Tax",
                                "payer": "company",
                                "company": "com_GxosnNzVxmoXow6qUCHF",
                                "jurisdiction": "jur_J1IozKUkhPC6ueJqtTdt",
                                "jurisdiction_abbreviation": "FED",
                                "exemptible": false,
                                "setting": null,
                                "setting_timeline": []
                            },
                            {
                                "id": "txe_atmFs4Hsh77QWFJmRKWJ",
                                "tax": "tax_ibU8cGhC5OlpOjoQFIXV",
                                "description": "FICA",
                                "payer": "employee",
                                "company": "com_GxosnNzVxmoXow6qUCHF",
                                "jurisdiction": "jur_J1IozKUkhPC6ueJqtTdt",
                                "jurisdiction_abbreviation": "FED",
                                "exemptible": false,
                                "setting": null,
                                "setting_timeline": []
                            },
                            {
                                "id": "txe_sjwN2TaalBXAzIl68CMi",
                                "tax": "tax_8L3JLfsH4X6dp0maBWfW",
                                "description": "Federal Income Tax",
                                "payer": "employee",
                                "company": "com_GxosnNzVxmoXow6qUCHF",
                                "jurisdiction": "jur_J1IozKUkhPC6ueJqtTdt",
                                "jurisdiction_abbreviation": "FED",
                                "exemptible": false,
                                "setting": null,
                                "setting_timeline": []
                            },
                            {
                                "id": "txe_24jEE6CiHdaoE9jHSDqN",
                                "tax": "tax_1XHqR9Qf5t18SD2sfYEe",
                                "description": "Medicare",
                                "payer": "employee",
                                "company": "com_GxosnNzVxmoXow6qUCHF",
                                "jurisdiction": "jur_J1IozKUkhPC6ueJqtTdt",
                                "jurisdiction_abbreviation": "FED",
                                "exemptible": false,
                                "setting": null,
                                "setting_timeline": []
                            },
                            {
                                "id": "txe_KPV6eS9Qh2qThfWGpsAS",
                                "tax": "tax_9JU4EupBW2RlHTTUynKg",
                                "description": "Additional Medicare",
                                "payer": "employee",
                                "company": "com_GxosnNzVxmoXow6qUCHF",
                                "jurisdiction": "jur_J1IozKUkhPC6ueJqtTdt",
                                "jurisdiction_abbreviation": "FED",
                                "exemptible": false,
                                "setting": null,
                                "setting_timeline": []
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: txe_RiS2Nrxa3RZ1zECcKR1t
                        tax:
                          type: string
                          example: tax_ImvSF9CTuMdokf0uwx5x
                        description:
                          type: string
                          example: Employer FICA Tax
                        payer:
                          type: string
                          example: company
                        company:
                          type: string
                          example: com_GxosnNzVxmoXow6qUCHF
                        jurisdiction:
                          type: string
                          example: jur_J1IozKUkhPC6ueJqtTdt
                        jurisdiction_abbreviation:
                          type: string
                          example: FED
                        exemptible:
                          type: boolean
                          example: false
                          default: true
                        setting: {}
                        setting_timeline:
                          type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update company tax elections
      description: ''
      operationId: update-company-tax-elections
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Array of Tax Elections:
                  type: array
                  items:
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the Tax Election.
                      company:
                        type: string
                        description: Unique identifier for the Company.
                      setting:
                        type: object
                        description: The Tax Election setting.
                        required:
                          - exempt
                          - effective_start
                        properties:
                          exempt:
                            type: boolean
                            description: Whether or not the tax is exempt.
                          effective_start:
                            type: string
                            description: >-
                              The effective start date for the Tax Election
                              setting value.
                            format: date
                          effective_end:
                            type: string
                            description: >-
                              The effective end date for the Tax Election
                              setting value.
                            format: date
                    required:
                      - id
                      - company
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employee_tax_params:
    get:
      summary: Bulk get employee tax parameters
      description: ''
      operationId: bulk-get-employee-tax-params
      parameters:
        - name: company
          in: query
          description: Unique ID of the company.
          required: true
          schema:
            type: string
        - name: as_of
          in: query
          description: Used to list tax parameters applicable as of the supplied date.
          schema:
            type: string
            format: date
        - name: jurisdiction
          in: query
          description: >-
            Used to further filter down the list of the employee’s tax
            parameters to specific jurisdictions.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /employee_tax_params/settings:
    patch:
      summary: Bulk update employee tax parameters
      description: ''
      operationId: bulk-update-employee-tax-parameters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                RAW_BODY:
                  type: array
                  description: List of employee tax param update objects
                  items:
                    properties:
                      id:
                        type: string
                        description: ID of the tax parameter that will be updated.
                      company:
                        type: string
                        description: ID of the company.
                      employee:
                        type: string
                        description: ID of the employee.
                      applied_for:
                        type: boolean
                        description: >-
                          (Optional) Indicates whether the setting was marked as
                          applied for.
                      value:
                        type: string
                        description: (Optional) The value of the setting.
                      effective_start:
                        type: string
                        description: >-
                          (Optional) Date representing when the supplied value
                          will start being effective.
                        format: date
                    required:
                      - id
                      - company
                      - employee
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    get:
      summary: Bulk get employee tax parameter settings
      description: ''
      operationId: bulk-get-employee-tax-parameter-settings
      parameters:
        - name: company
          in: query
          description: Unique ID of the company.
          required: true
          schema:
            type: string
        - name: as_of
          in: query
          description: Used to list tax parameters applicable as of the supplied date.
          schema:
            type: string
        - name: jurisdiction
          in: query
          description: >-
            Used to further filter down the list of the employee’s tax
            parameters to specific jurisdictions.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /external_payrolls:
    post:
      summary: Create an external payroll
      description: Creates an external payroll.
      operationId: create-an-external-payroll
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - company
                - period_start
                - period_end
                - payday
              properties:
                company:
                  type: string
                  description: ID of the company this external payroll is for.
                period_start:
                  type: string
                  description: The start of the date range that the payroll covers.
                  format: date
                period_end:
                  type: string
                  description: The end of the date range that the payroll covers.
                  format: date
                payday:
                  type: string
                  description: The date on which employees were paid for the payroll.
                  format: date
                pay_frequency:
                  type: string
                  description: Frequency at which the external payroll was paid
                items:
                  type: array
                  description: >-
                    The set of [external payroll
                    items](ref:external-payroll-item-object) associated with the
                    payroll.
                  items:
                    properties:
                      employee:
                        type: string
                        description: ID of the employee that was paid
                      earnings:
                        type: array
                        items:
                          properties:
                            amount:
                              type: string
                              description: Amount paid out on this payroll
                            hours:
                              type: string
                              description: Hours worked on this payroll
                            type:
                              type: string
                              description: >-
                                Earning type, one of [Earning
                                Types](https://docs.checkhq.com/reference/types-of-earnings)
                            workplace:
                              type: string
                              description: ID of workplace that the earning was worked at
                            earning_code:
                              type: string
                              description: >-
                                ID of the custom earning code used for this
                                earning. Either this or `type` must be provided.
                          type: object
                      reimbursements:
                        type: array
                        items:
                          properties:
                            amount:
                              type: string
                              description: Amount reimbursed
                          required:
                            - amount
                          type: object
                      taxes:
                        type: array
                        items:
                          properties:
                            tax:
                              type: string
                              description: ID of the tax paid
                            amount:
                              type: string
                              description: Amount paid in this tax
                          required:
                            - tax
                            - amount
                          type: object
                      benefits:
                        type: array
                        items:
                          properties:
                            id:
                              type: string
                              description: >-
                                ID of the benefit object that represents this
                                deduction. One of `ID` or `benefit` must be
                                provided.
                            benefit:
                              type: string
                              description: >-
                                The [benefit
                                type](https://docs.checkhq.com/reference/types-of-benefits)
                                of this deduction. Either `id` or `benefit` must
                                be provided.
                            description:
                              type: string
                              description: >-
                                Description of the benefit provided. If ID is
                                provided, this field will not take effect and
                                instead be superseded by the benefit object's
                                description.
                            employee_contribution_amount:
                              type: string
                              description: >-
                                Amount the employee contributed to the benefit
                                for this payroll
                            company_contribution_amount:
                              type: string
                              description: >-
                                Amount the company contributed to this benefit
                                for this payroll
                          type: object
                      post_tax_deductions:
                        type: array
                        items:
                          properties:
                            id:
                              type: string
                              description: >-
                                ID of the post-tax deduction deducted from pay.
                                Either this or `description` must be provided.
                            amount:
                              type: string
                              description: Amount deducted from pay
                            description:
                              type: string
                              description: >-
                                Description of the post-tax deduction deducted.
                                Either this or `id` must be provided.
                          type: object
                    type: object
                contractor_payments:
                  type: array
                  description: >-
                    The set of [contractor
                    payments](ref:the-contractor-payment-object) associated with
                    the payroll.
                  items:
                    properties:
                      amount:
                        type: string
                        description: Amount paid to this contractor
                      reimbursement_amount:
                        type: string
                        description: Amount reimbursed to the contractor
                      contractor:
                        type: string
                        description: ID of the contractor paid
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "pay_Z26PNMC7Ky1wfFQzVqfF",
                      "company": "com_sx3svU6K8c5ZkSFlOh5p",
                      "period_start": "2019-06-16",
                      "period_end": "2019-06-29",
                      "approved_at": "2019-06-29T18:26:56.848920Z",
                      "payday": "2019-07-05",
                      "status": "paid",
                      "pay_frequency": "biweekly",,
                      "items": [
                        {
                          "id": "itm_yvmmsVGFxLoBaMIkqzea",
                          "payroll": "pay_Z26PNMC7Ky1wfFQzVqfF",
                          "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                          "payment_method": "direct_deposit",
                          "net_pay": "712.31",
                          "earnings": [
                            {
                              "amount": "961.54",
                              "hours": 40.0,
                              "type": "regular",
                              "workplace": "wrk_cxcG4vjGKcSXZk1fgKai",
                              "code": null,
                              "description": null
                            }
                          ],
                          "reimbursements": [],
                          "taxes": [
                            {
                              "tax": "tax_I1Z9zqbBGWIbvlZpN2Vq",
                              "description": "New York SDI",
                              "amount": "0.60",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ImvSF9CTuMdokf0uwx5x",
                              "description": "Employer FICA Tax",
                              "amount": "59.62",
                              "payer": "company"
                            },
                            {
                              "tax": "tax_yjNkKk061BTipYv7G4Ti",
                              "description": "New York City Tax",
                              "amount": "31.04",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_S1krAkh75RzdWu5J53HA",
                              "description": "New York State Tax",
                              "amount": "44.20",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_UJrIQbtVErbdez0bYTVN",
                              "description": "New York Family Leave Benefits",
                              "amount": "1.47",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_1XHqR9Qf5t18SD2sfYEe",
                              "description": "Medicare",
                              "amount": "13.94",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_8L3JLfsH4X6dp0maBWfW",
                              "description": "Federal Income Tax",
                              "amount": "98.36",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ibU8cGhC5OlpOjoQFIXV",
                              "description": "FICA",
                              "amount": "59.62",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_O3f21hkS1cvHBZTa61BO",
                              "description": "Employer Medicare Tax",
                              "amount": "13.94",
                              "payer": "company"
                            }
                          ],
                          "benefits": [],
                          "post_tax_deductions": [],
                        }
                      ],
                      "contractor_payments": [
                        {
                          "contractor": "ctr_90QzaH9xPRI7JRLXnRoU",
                          "amount": "100.00",
                          "reimbursement_amount": "15.00"
                        }
                      ],
                    }
      deprecated: false
  /external_payrolls/{payroll}:
    delete:
      summary: Delete an external payroll
      description: Deletes an external payroll.
      operationId: delete-a-payroll-copy-1
      parameters:
        - name: payroll
          in: path
          schema:
            type: string
          required: true
      responses:
        '204':
          description: '204'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update an external payroll
      description: Updates an external payroll.
      operationId: update-an-external-payroll
      parameters:
        - name: payroll
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                company:
                  type: string
                  description: ID of the company this external payroll is for.
                period_start:
                  type: string
                  description: The start of the date range that the payroll covers.
                  format: date
                period_end:
                  type: string
                  description: The end of the date range that the payroll covers.
                  format: date
                payday:
                  type: string
                  description: The date on which employees were paid for the payroll.
                  format: date
                pay_frequency:
                  type: string
                  description: Frequency at which the external payroll was paid
                items:
                  type: array
                  description: >-
                    The set of [external payroll
                    items](ref:external-payroll-item-object) associated with the
                    payroll.
                  items:
                    properties:
                      employee:
                        type: string
                        description: ID of the employee that was paid
                      earnings:
                        type: array
                        items:
                          properties:
                            amount:
                              type: string
                              description: Amount paid out on this payroll
                            hours:
                              type: string
                              description: Hours worked on this payroll
                            type:
                              type: string
                              description: >-
                                Earning type, one of [Earning
                                Types](https://docs.checkhq.com/reference/types-of-earnings)
                            workplace:
                              type: string
                              description: ID of workplace that the earning was worked at
                            earning_code:
                              type: string
                              description: >-
                                ID of the custom earning code used for this
                                earning. Either this or `type` must be provided.
                          type: object
                      reimbursements:
                        type: array
                        items:
                          properties:
                            amount:
                              type: string
                              description: Amount reimbursed
                          required:
                            - amount
                          type: object
                      taxes:
                        type: array
                        items:
                          properties:
                            tax:
                              type: string
                              description: ID of the tax paid
                            amount:
                              type: string
                              description: Amount paid in this tax
                          required:
                            - tax
                            - amount
                          type: object
                      benefits:
                        type: array
                        items:
                          properties:
                            id:
                              type: string
                              description: >-
                                ID of the benefit object that represents this
                                deduction. One of `ID` or `benefit` must be
                                provided.
                            benefit:
                              type: string
                              description: >-
                                The [benefit
                                type](https://docs.checkhq.com/reference/types-of-benefits)
                                of this deduction. Either `id` or `benefit` must
                                be provided.
                            description:
                              type: string
                              description: >-
                                Description of the benefit provided. If ID is
                                provided, this field will not take effect and
                                instead be superseded by the benefit object's
                                description.
                            employee_contribution_amount:
                              type: string
                              description: >-
                                Amount the employee contributed to the benefit
                                for this payroll
                            company_contribution_amount:
                              type: string
                              description: >-
                                Amount the company contributed to this benefit
                                for this payroll
                          type: object
                      post_tax_deductions:
                        type: array
                        items:
                          properties:
                            id:
                              type: string
                              description: >-
                                ID of the post-tax deduction deducted from pay.
                                Either this or `description` must be provided.
                            amount:
                              type: string
                              description: Amount deducted from pay
                            description:
                              type: string
                              description: >-
                                Description of the post-tax deduction deducted.
                                Either this or `id` must be provided.
                          type: object
                    type: object
                contractor_payments:
                  type: array
                  description: >-
                    The set of [contractor
                    payments](ref:the-contractor-payment-object) associated with
                    the payroll.
                  items:
                    properties:
                      amount:
                        type: string
                        description: Amount paid to this contractor
                      reimbursement_amount:
                        type: string
                        description: Amount reimbursed to the contractor
                      contractor:
                        type: string
                        description: ID of the contractor paid
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "id": "pay_Z26PNMC7Ky1wfFQzVqfF",
                      "company": "com_sx3svU6K8c5ZkSFlOh5p",
                      "period_start": "2019-06-16",
                      "period_end": "2019-06-29",
                      "approved_at": "2019-06-29T18:26:56.848920Z",
                      "payday": "2019-07-05",
                      "status": "paid",
                      "pay_frequency": "biweekly",,
                      "items": [
                        {
                          "id": "itm_yvmmsVGFxLoBaMIkqzea",
                          "payroll": "pay_Z26PNMC7Ky1wfFQzVqfF",
                          "employee": "emp_zGGp6wYcxAeu1Ng8IA7v",
                          "payment_method": "direct_deposit",
                          "net_pay": "712.31",
                          "earnings": [
                            {
                              "amount": "961.54",
                              "hours": 40.0,
                              "type": "regular",
                              "workplace": "wrk_cxcG4vjGKcSXZk1fgKai",
                              "code": null,
                              "description": null
                            }
                          ],
                          "reimbursements": [],
                          "taxes": [
                            {
                              "tax": "tax_I1Z9zqbBGWIbvlZpN2Vq",
                              "description": "New York SDI",
                              "amount": "0.60",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ImvSF9CTuMdokf0uwx5x",
                              "description": "Employer FICA Tax",
                              "amount": "59.62",
                              "payer": "company"
                            },
                            {
                              "tax": "tax_yjNkKk061BTipYv7G4Ti",
                              "description": "New York City Tax",
                              "amount": "31.04",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_S1krAkh75RzdWu5J53HA",
                              "description": "New York State Tax",
                              "amount": "44.20",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_UJrIQbtVErbdez0bYTVN",
                              "description": "New York Family Leave Benefits",
                              "amount": "1.47",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_1XHqR9Qf5t18SD2sfYEe",
                              "description": "Medicare",
                              "amount": "13.94",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_8L3JLfsH4X6dp0maBWfW",
                              "description": "Federal Income Tax",
                              "amount": "98.36",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_ibU8cGhC5OlpOjoQFIXV",
                              "description": "FICA",
                              "amount": "59.62",
                              "payer": "employee"
                            },
                            {
                              "tax": "tax_O3f21hkS1cvHBZTa61BO",
                              "description": "Employer Medicare Tax",
                              "amount": "13.94",
                              "payer": "company"
                            }
                          ],
                          "benefits": [],
                          "post_tax_deductions": [],
                        }
                      ],
                      "contractor_payments": [
                        {
                          "contractor": "ctr_90QzaH9xPRI7JRLXnRoU",
                          "amount": "100.00",
                          "reimbursement_amount": "15.00"
                        }
                      ],
                    }
      deprecated: false
  /external_payrolls/{payroll}/approve:
    post:
      summary: Approve an external payroll
      description: Approves an external payroll.
      operationId: approve-an-external-payroll
      parameters:
        - name: payroll
          in: path
          schema:
            type: string
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
  /external_payrolls/{payroll}/reopen:
    post:
      summary: Reopen an external payroll
      description: >-
        Moves an approved external payroll's status to draft, allowing you to
        make further edits to the payroll or its items.
      operationId: reopen-a-pending-payroll
      parameters:
        - name: payroll
          in: path
          description: ID of the payroll to reopen
          schema:
            type: string
          required: true
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: ''
      deprecated: false
  /employee_tax_elections:
    get:
      summary: List employee tax elections
      description: ''
      operationId: list-employee-tax-elections
      parameters:
        - name: company
          in: query
          description: Unique ID for the company.
          schema:
            type: string
        - name: employee
          in: query
          description: Unique ID for the employee.
          schema:
            type: string
        - name: tax
          in: query
          description: Unique ID for the tax.
          schema:
            type: string
        - name: as_of
          in: query
          description: >-
            Used to list tax elections applicable as of the supplied date.
            Defaults to today.
          schema:
            type: string
            format: date
        - name: exemptible
          in: query
          description: Used to filter tax elections to exemptible taxes.
          schema:
            type: boolean
        - name: jurisdiction
          in: query
          description: Used to filter tax elections by tax jurisdiction.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "next": null,
                        "previous": null,
                        "results": [
                            {
                                "id": "txe_RiS2Nrxa3RZ1zECcKR1t",
                                "tax": "tax_ImvSF9CTuMdokf0uwx5x",
                                "description": "Employer FICA Tax",
                                "payer": "company",
                                "company": "com_GxosnNzVxmoXow6qUCHF",
                                "employee": "emp_12345",
                                "jurisdiction": "jur_J1IozKUkhPC6ueJqtTdt",
                                "jurisdiction_abbreviation": "FED",
                                "exemptible": false,
                                "setting": null,
                                "setting_timeline": []
                            }
                        ]
                    }
              schema:
                type: object
                properties:
                  next: {}
                  previous: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: txe_RiS2Nrxa3RZ1zECcKR1t
                        tax:
                          type: string
                          example: tax_ImvSF9CTuMdokf0uwx5x
                        description:
                          type: string
                          example: Employer FICA Tax
                        payer:
                          type: string
                          example: company
                        company:
                          type: string
                          example: com_GxosnNzVxmoXow6qUCHF
                        employee:
                          type: string
                          example: emp_12345
                        jurisdiction:
                          type: string
                          example: jur_J1IozKUkhPC6ueJqtTdt
                        jurisdiction_abbreviation:
                          type: string
                          example: FED
                        exemptible:
                          type: boolean
                          example: false
                          default: true
                        setting: {}
                        setting_timeline:
                          type: array
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
    patch:
      summary: Update employee tax elections
      description: ''
      operationId: update-employee-tax-elections
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                Array of Tax Elections:
                  type: array
                  items:
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the Tax Election.
                      employee:
                        type: string
                        description: Unique identifier for the Employee.
                      setting:
                        type: object
                        description: The Tax Election setting.
                        required:
                          - exempt
                          - effective_start
                        properties:
                          exempt:
                            type: boolean
                            description: Whether or not the tax is exempt.
                          effective_start:
                            type: string
                            description: >-
                              The effective start date for the Tax Election
                              setting value.
                            format: date
                          effective_end:
                            type: string
                            description: >-
                              The effective end date for the Tax Election
                              setting value.
                            format: date
                    required:
                      - id
                      - employee
                    type: object
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: ''
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /usage/summaries:
    get:
      summary: List usage summaries
      description: ''
      operationId: list-usage-summaries
      parameters:
        - name: company
          in: query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
            enum:
              - company
              - employee
              - contractor
              - company_funding_failure
              - payee_failed_payment
              - wire
              - one_day_payroll_processing_period
        - name: period_start
          in: query
          schema:
            type: string
            format: date
        - name: period_end
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"previous\": null,\n  \"next\": null,\n  \"results\": [\n    {\n      \"company\": \"com_dXE2p4wCM251HmlJB0Mn\",\n      \"category\": \"company\",\n      \"count\": 1,\n      \"period_start\": \"2024-05-01\",\n      \"period_end\": \"2024-05-31\"\n    },\n    {\n      \"company\": \"com_dXE2p4wCM251HmlJB0Mn\",\n      \"category\": \"employee\",\n      \"count\": 15,\n      \"period_start\": \"2024-05-01\",\n      \"period_end\": \"2024-05-31\"\n    },\n    {\n      \"company\": \"com_dXE2p4wCM251HmlJB0Mn\",\n      \"category\": \"contractor\",\n      \"count\": 8,\n      \"period_start\": \"2024-05-01\",\n      \"period_end\": \"2024-05-31\"\n    },\n    {\n      \"company\": \"com_dXE2p4wCM251HmlJB0Mn\",\n      \"category\": \"company_funding_failure\",\n      \"count\": 1,\n      \"period_start\": \"2024-05-01\",\n      \"period_end\": \"2024-05-31\"\n    },\n\t\t{\n      \"company\": \"com_dXE2p4wCM251HmlJB0Mn\",\n      \"category\": \"payee_failed_payment\",\n      \"count\": 2,\n      \"period_start\": \"2024-05-01\",\n      \"period_end\": \"2024-05-31\"\n    }\n  ]\n}"
              schema:
                type: object
                properties:
                  previous: {}
                  next: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        company:
                          type: string
                          example: com_dXE2p4wCM251HmlJB0Mn
                        category:
                          type: string
                          example: company
                        count:
                          type: integer
                          example: 1
                          default: 0
                        period_start:
                          type: string
                          example: '2024-05-01'
                        period_end:
                          type: string
                          example: '2024-05-31'
      deprecated: false
  /usage/records:
    get:
      summary: List usage records
      description: ''
      operationId: list-usage-records
      parameters:
        - name: company
          in: query
          schema:
            type: string
        - name: category
          in: query
          schema:
            type: string
            enum:
              - company
              - employee
              - contractor
              - company_funding_failure
              - payee_failed_payment
              - wire
              - one_day_payroll_processing_period
        - name: resource_type
          in: query
          schema:
            type: string
            enum:
              - company
              - employee
              - contractor
              - payment_attempt
        - name: period_start
          in: query
          schema:
            type: string
            format: date
        - name: period_end
          in: query
          schema:
            type: string
            format: date
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "previous": null,
                      "next": null,
                      "results": [
                        {
                          "category": "wire",
                          "company": "com_dXE2p4wCM251HmlJB0Mn",
                          "resource_type": "payment_attempt",
                          "resource": "pyt_vIFHhvyGN47ej1upyIT8",
                          "effective_at": "2024-06-01T00:00:00.000Z"
                        }
                      ]
                    }
              schema:
                type: object
                properties:
                  previous: {}
                  next: {}
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        category:
                          type: string
                          example: wire
                        company:
                          type: string
                          example: com_dXE2p4wCM251HmlJB0Mn
                        resource_type:
                          type: string
                          example: payment_attempt
                        resource:
                          type: string
                          example: pyt_vIFHhvyGN47ej1upyIT8
                        effective_at:
                          type: string
                          example: '2024-06-01T00:00:00.000Z'
      deprecated: false
  /documents/setup_documents/{document}:
    get:
      summary: Get a Setup Document
      description: Returns a setup document
      operationId: get-a-setup-document
      parameters:
        - name: document
          in: path
          description: Document ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/setup_documents:
    get:
      summary: List setup documents
      description: List all setup documents
      operationId: list-setup-documents
      parameters:
        - name: company
          in: query
          description: Company ID
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /documents/setup_documents/{document}/download:
    get:
      summary: Download a setup document
      description: Downloads the binary document
      operationId: download-a-setup-document
      parameters:
        - name: document
          in: path
          description: Document ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/verification_documents:
    post:
      summary: Company Verification Documents
      description: >-
        Generates a Verification Documents component used to request more
        information from the company.
      operationId: company-verification-documents
      parameters:
        - name: company
          in: path
          description: ID of the company for which an onboard link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{one_time_onboard_link}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{one_time_onboard_link}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /payments/{payment}/cancel:
    post:
      summary: Cancel a payment
      description: ''
      operationId: cancel-a-payment
      parameters:
        - name: payment
          in: path
          schema:
            type: string
            default: ID of payment desired for cancellation
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "id": "pyt_vIFHhvyGN47ej1upyIT8",
                        "status": "failed",
                        "amount": "4522.0400",
                        "type": "employee_net_pay",
                        "parent_type": "payroll_item",
                        "parent_id": "pyi_ENA4k8LMHbgpV07GLGSv",
                        "payment_attempts": [
                            {
                                "id": "pya_Kgl6ERboridVSfv4XKdT",
                                "created_at": "2022-02-18T20:14:40.713837Z",
                                "expected_completion_date": "2022-02-23",
                                "status": "canceled",
                                "failure_code": null,
                                "payment_method": "ach",
                                "payment_instrument": "bnk_W7hjDGn6sU1d3U8dr9bq",
                                "wire_details": null
                            }
                        ],
                        "can_retry": false,
                        "can_refund": false,
                        "can_cancel": false,
                        "cancel_deadline": "2022-02-19T17:00:00.000Z",
                        "direction": "credit"
                    }
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: pyt_vIFHhvyGN47ej1upyIT8
                  status:
                    type: string
                    example: failed
                  amount:
                    type: string
                    example: '4522.0400'
                  type:
                    type: string
                    example: employee_net_pay
                  parent_type:
                    type: string
                    example: payroll_item
                  parent_id:
                    type: string
                    example: pyi_ENA4k8LMHbgpV07GLGSv
                  payment_attempts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: pya_Kgl6ERboridVSfv4XKdT
                        created_at:
                          type: string
                          example: '2022-02-18T20:14:40.713837Z'
                        expected_completion_date:
                          type: string
                          example: '2022-02-23'
                        status:
                          type: string
                          example: canceled
                        failure_code: {}
                        payment_method:
                          type: string
                          example: ach
                        payment_instrument:
                          type: string
                          example: bnk_W7hjDGn6sU1d3U8dr9bq
                        wire_details: {}
                  can_retry:
                    type: boolean
                    example: false
                    default: true
                  can_refund:
                    type: boolean
                    example: false
                    default: true
                  can_cancel:
                    type: boolean
                    example: false
                    default: true
                  cancel_deadline:
                    type: string
                    example: '2022-02-19T17:00:00.000Z'
                  direction:
                    type: string
                    example: credit
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/signatory_agreements:
    post:
      summary: Company Signatory Agreements
      description: >-
        This Component allows an employer's signatory to sign Check's Terms of
        Service and Debit Authorization
      operationId: company-signatory-agreements
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signatory
              properties:
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You must
                    provide either a signatory ID (recommended) or all three
                    body params shown below
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/connect_bank_account:
    post:
      summary: Company Connect Bank Account
      description: >-
        This Component allows an employer's signatory to connect their bank
        account to fund payroll
      operationId: company-connect-bank-account
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/team_setup:
    post:
      summary: Company Team Setup
      description: >-
        This Component allows an employer to set up and manage their workplaces,
        employees, and contractors
      operationId: company-team-setup
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/pay_history:
    post:
      summary: Company Pay History
      description: This Component allows an employer to input their pay history
      operationId: company-pay-history
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/full_service_setup_submission:
    post:
      summary: Company Full Service Setup Submission Component
      description: >-
        This Component allows an employer to prepare for and request Check to
        perform a full-service setup for the company
      operationId: full-service-setup-submission
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signatory
              properties:
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You must
                    provide either a signatory ID (recommended) or all three
                    body params shown below
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/business_details:
    post:
      summary: Company Business Details Component
      description: >-
        This Component allows an employer to provide Check with all of their
        various business details.
      operationId: company-business-details
      parameters:
        - name: company
          in: path
          description: ID of the company for which a component link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - signatory
              properties:
                signatory:
                  type: string
                  description: >-
                    The ID of the signatory object for this company. You must
                    provide either a signatory ID (recommended) or all three
                    body params shown below
                signer_name:
                  type: string
                  description: >-
                    The name of the person who has permission to onboard on
                    behalf of the company.
                signer_title:
                  type: string
                  description: >-
                    The title of the person who has permission to onboard on
                    behalf of the company (e.g. "Officer", "Manager", etc.).
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{component_url}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{component_url}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
  /companies/{company}/components/progress_tracker:
    post:
      summary: Company Progress Tracker Component
      description: >-
        Generates a Full Service Setup Progress Tracker component used to
        monitor Check's progress in setting up a Full Service Setup Company and
        allows users to resolve potential blocking issues raised by Check
        operators during the setup process.
      operationId: company-progress-tracker
      parameters:
        - name: company
          in: path
          description: ID of the company for which an onboard link will be generated
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: >-
                    The email of the person who has permission to onboard on
                    behalf of the company
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{"url":"{one_time_onboard_link}"}'
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: '{one_time_onboard_link}'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                type: object
                properties: {}
      deprecated: false
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
x-readme-fauxas: true

